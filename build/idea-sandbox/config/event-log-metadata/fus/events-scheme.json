{
  "groups" : [ {
    "id" : "JavaFindUsages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "FindClassUsages", "FindMethodUsages", "FindPackageUsages", "FindThrowUsages", "FindVariableUsages" ]
      }
    }
  }, {
    "id" : "accessibility",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:screen.reader.detected|screen.reader.support.enabled|screen.reader.support.enabled.in.vmoptions}" ]
    }
  }, {
    "id" : "actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum:action.invoked|custom.action.invoked|action.finished|action.updated}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{util#rider_backend_action}", "{enum:com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "additional.same_window" : [ "{enum#boolean}" ],
        "additional.toolwindow" : [ "{util#toolwindow}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction|com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "lang" : [ "{util#lang}" ],
        "parent" : [ "{enum#parent}", "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "result.error" : [ "{util#class_name}" ],
        "result.type" : [ "{enum:ignored|performed|failed|unknown}" ],
        "start_time" : [ "{regexp#integer}" ],
        "toolwindow" : [ "{util#toolwindow}" ]
      },
      "enums" : {
        "parent" : [ "LineMarkerActionWrapper", "TreeActionWrapper", "MyTreeActionWrapper" ]
      }
    }
  }, {
    "id" : "actions.gtdu",
    "builds" : [ ],
    "versions" : [ {
      "from" : "53"
    } ],
    "rules" : {
      "event_id" : [ "{enum:performed|navigated}" ],
      "event_data" : {
        "choice" : [ "{enum:SU|GTD}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "input_event" : [ "{util#shortcut}" ],
        "navigation_provider_class" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "actions.on.save",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:reformat.code|rearrange.code|optimize.imports|cleanup.code}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "actions.runAnything",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#run_anything_class}:_RunAnything_-_execution_-_{enum#run_anything_title}", "{enum#run_anything_class}:_RunAnything_-_more_-_{enum#run_anything_title}", "{enum#_}" ],
      "event_data" : {
        "group" : [ "{enum#group}", "{util#class_name}" ],
        "list" : [ "{enum#list}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "with_alt" : [ "{enum#boolean}" ],
        "with_shift" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "RunAnything_-_SHIFT_HOLD", "execute", "click.more" ],
        "group" : [ "Bundler", "rails_generators", "Gradle_tasks", "npm_scripts", "Maven_goals", "rvm_use", "rake", "rbenv_shell", "General", "Recent", "Run_configurations", "Gradle", "Maven", "npm", "Python", "Recent_projects", "ruby", "Grunt", "third.party" ],
        "list" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel", "third.party" ],
        "run_anything_class" : [ "RunAnythingMainListModel", "RunAnythingHelpListModel" ],
        "run_anything_title" : [ "Run_configurations", "Recent", "rake", "rails_generators", "Recent_projects", "Bundler", "rvm_use", "ruby", "third.party", "run.anything.group.unknown.title", "Gradle", "Maven", "Python", "npm", "General", "Gradle_tasks", "Maven_goals", "npm_scripts" ]
      }
    }
  }, {
    "id" : "analysis.pwa",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "size_bytes" : [ "{regexp#integer}" ],
        "status" : [ "{enum:Success|InterruptedByUser|Exception}" ]
      },
      "enums" : {
        "__event_id" : [ "index.metadata", "index.state", "index.tasks", "update.started", "update.finished", "scan.started", "scan.finished" ]
      }
    }
  }, {
    "id" : "analysis.pwa.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:scan.started|scan.finished|update.started|update.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "status" : [ "{enum:Success|InterruptedByUser|Exception}" ]
      }
    }
  }, {
    "id" : "appearance.file.colors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:editor.tabs|file.colors|project.view}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "balloons",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:balloon.shown}" ],
      "event_data" : {
        "balloon_id" : [ "{enum#__balloon_id}", "{enum:cwm.contols.hidden}" ]
      },
      "enums" : {
        "__balloon_id" : [ "cwm.telephony.text_message", "cwm.host.session.nmins_left", "cwm.telephony.participant_enabled_video", "cwm.host.connection.version_mismatch_error", "cwm.host.action.getjoinlink.link_copied", "cwm.permissions.accept_decline", "cwm.host.action.copyjoinlink.link_copied", "cwm.following.started", "cwm.host.terminal.shared.status", "cwm.host.connection.user_left", "cwm.telephony.customize_audio_video_settings", "cwm.host.connection.user_joined", "cwm.following.request", "cwm.guest.telephony.voice_chat_enabled", "cwm.guest.following.stopped" ]
      }
    }
  }, {
    "id" : "bookmarks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{util#favorite_type}" ]
      },
      "enums" : {
        "__event_id" : [ "bookmarks.total", "bookmarks.with.letter.mnemonic", "bookmarks.with.line", "bookmarks.with.number.mnemonic", "favorites.directories", "favorites.files", "favorites.lists", "favorites.total", "favorites.custom" ]
      }
    }
  }, {
    "id" : "bookmarks.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bookmark.navigate|favorites.navigate}" ],
      "event_data" : {
        "mnemonicType" : [ "{enum:Number|None|Letter}" ],
        "navigatable" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "withLine" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "has_errors" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "incremental" : [ "{enum#boolean}" ],
        "modules" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "task_runner_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "build.ant.actions",
    "builds" : [ {
      "from" : "191.6873"
    } ],
    "rules" : {
      "event_id" : [ "{enum:RunSelectedBuild|RunTargetAction}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build.ant.state",
    "builds" : [ {
      "from" : "191.6873"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}", "{enum#setting}.{enum#state}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "setting" : [ "isColoredOutputMessages", "isCollapseFinishedTargets", "isRunInBackground", "isViewClosedWhenNoErrors", "hasAntProjects" ]
      }
    }
  }, {
    "id" : "build.gradle.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "_" : [ "GradleExecuteTaskAction", "PasteMvnDependency", "ToggleOfflineAction", "GradleOpenProjectCompositeConfigurationAction", "showGradleDaemonsAction", "stopAllDaemons", "refreshDaemons", "stopSelectedDaemons" ]
      }
    }
  }, {
    "id" : "build.gradle.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "error" : [ "{util#class_name}" ],
        "error_count" : [ "{regexp#integer}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "phase" : [ "{enum:GRADLE_CALL|PROJECT_RESOLVERS|DATA_SERVICES}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:fatal|warning}" ],
        "sync_successful" : [ "{enum#boolean}" ],
        "too_many_errors" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "gradle.sync.started", "phase.started", "error", "phase.finished", "gradle.sync.finished" ]
      }
    }
  }, {
    "id" : "build.gradle.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#setting}.{enum#state}", "gradleJvmType.{enum:custom|#JAVA_HOME|#USE_PROJECT_JDK|#JAVA_INTERNAL}", "gradleVersion.{regexp#version}", "gradleVersion.unknown", "gradleJvmVersion.unknown", "gradleJvmVersion.{regexp#version}", "distributionType.{enum:null|default_wrapped|local|wrapped}", "isCompositeBuilds.{enum:no|yes}", "preferredTestRunner.platform", "preferredTestRunner.gradle", "preferredTestRunner.choose_per_test", "storeProjectFilesExternally.{enum:no|yes}", "numberOfGradleProject.{regexp#integer}", "gradleJvm.{regexp#version}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:bundled}", "{enum:empty}" ]
      },
      "enums" : {
        "_" : [ "hasGradleProject", "offlineWork", "hasCustomServiceDirectoryPath", "hasCustomGradleVmOptions", "showSelectiveImportDialogOnInitialImport", "storeProjectFilesExternally", "isUseQualifiedModuleNames", "createModulePerSourceSet", "distributionType", "isCompositeBuilds", "disableWrapperSourceDistributionNotification", "gradleJvmType", "gradleJvmVersion", "gradleVersion", "delegateBuildRun", "preferredTestRunner", "ideaSpecificConfigurationUsed" ],
        "setting" : [ "createModulePerSourceSet", "delegateBuildRun", "disableWrapperSourceDistributionNotification", "hasGradleProject", "hasCustomServiceDirectoryPath", "hasCustomGradleVmOptions", "isCreateEmptyContentRootDirectories", "isUseQualifiedModuleNames", "offlineWork", "showSelectiveImportDialogOnInitialImport" ],
        "value_set" : [ "null", "default_wrapped", "local", "wrapped", "custom", "#JAVA_HOME", "#USE_PROJECT_JDK", "#JAVA_INTERNAL", "unknown", "platform", "gradle", "choose_per_test" ]
      }
    }
  }, {
    "id" : "build.maven.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "RunBuildAction", "ExecuteMavenRunConfigurationAction", "ExtractManagedDependenciesAction", "IntroducePropertyAction", "ShowMavenConnectors", "KillMavenConnector", "StartLocalMavenServer", "StartWslMavenServer", "CreateMavenProjectOrModuleFromArchetype", "CreateMavenProjectOrModule" ]
      }
    }
  }, {
    "id" : "build.maven.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#setting}.{enum#state}", "checksumPolicy.{enum:fail|not_set|warn}", "failureBehavior.{enum:at_end|fast|never|not_set}", "generatedSourcesFolder.{enum:autodetect|generated_source_folder|ignore|subfolder}", "jdkTypeForImporter.{enum:#JAVA_INTERNAL|#JAVA_HOME|custom}", "jdkVersionForImporter.unknown", "loggingLevel.{enum:debug|error|fatal|info|warn}", "mavenVersion.{regexp#version}", "mavenVersion.unknown", "outputLevel.{enum:debug|error|fatal|info|warn}", "pluginUpdatePolicy.{enum:default|do_not_update|update}", "runnerJreType.{enum:#USE_PROJECT_JDK|#JAVA_HOME|#JAVA_INTERNAL|custom}", "runnerJreVersion.unknown", "runnerJreVersion.{regexp#version}", "updateFoldersOnImportPhase.{enum:generate-resources|generate-sources|generate-test-resources|process-resources|process-sources|process-test-resources}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:empty}", "{enum:disabled}", "{enum:generate-test-sources|process-test-sources}" ]
      },
      "enums" : {
        "_" : [ "hasMavenProject", "checksumPolicy", "failureBehavior", "outputLevel", "pluginUpdatePolicy", "loggingLevel", "alwaysUpdateSnapshots", "nonRecursive", "printErrorStackTraces", "usePluginRegistry", "workOffline", "mavenVersion", "localRepository", "userSettingsFile", "lookForNested", "dedicatedModuleDir", "storeProjectFilesExternally", "importAutomatically", "autoDetectCompiler", "createModulesForAggregators", "createModuleGroups", "keepSourceFolders", "excludeTargetFolder", "useMavenOutput", "generatedSourcesFolder", "updateFoldersOnImportPhase", "downloadDocsAutomatically", "downloadSourcesAutomatically", "customDependencyTypes", "jdkTypeForImporter", "jdkVersionForImporter", "hasVmOptionsForImporter", "hasIgnoredFiles", "hasIgnoredPatterns", "delegateBuildRun", "runMavenInBackground", "hasRunnerVmOptions", "hasRunnerEnvVariables", "passParentEnv", "skipTests", "hasRunnerMavenProperties", "runnerJreType", "runnerJreVersion" ],
        "__event_id" : [ "alwaysUpdateSnapshots", "autoDetectCompiler", "checksumPolicy", "createModuleGroups", "createModulesForAggregators", "customDependencyTypes", "dedicatedModuleDir", "delegateBuildRun", "downloadDocsAutomatically", "downloadSourcesAutomatically", "excludeTargetFolder", "failureBehavior", "generatedSourcesFolder", "hasIgnoredFiles", "hasIgnoredPatterns", "hasMavenProject", "hasRunnerEnvVariables", "hasRunnerMavenProperties", "hasRunnerVmOptions", "hasVmOptionsForImporter", "jdkTypeForImporter", "jdkVersionForImporter", "keepSourceFolders", "localRepository", "loggingLevel", "lookForNested", "mavenVersion", "nonRecursive", "outputLevel", "passParentEnv", "pluginUpdatePolicy", "printErrorStackTraces", "runMavenInBackground", "runnerJreType", "runnerJreVersion", "skipTests", "storeProjectFilesExternally", "updateFoldersOnImportPhase", "useMavenOutput", "usePluginRegistry", "userSettingsFile", "workOffline", "createSeparateModulesForMainAndTest" ],
        "setting" : [ "alwaysUpdateSnapshots", "autoDetectCompiler", "createModuleGroups", "createModulesForAggregators", "customDependencyTypes", "dedicatedModuleDir", "delegateBuildRun", "downloadDocsAutomatically", "downloadSourcesAutomatically", "excludeTargetFolder", "hasIgnoredFiles", "hasIgnoredPatterns", "hasMavenProject", "hasRunnerEnvVariables", "hasRunnerMavenProperties", "hasRunnerVmOptions", "hasVmOptionsForImporter", "importAutomatically", "keepSourceFolders", "localRepository", "loggingLevel", "lookForNested", "nonRecursive", "outputLevel", "passParentEnv", "printErrorStackTraces", "runMavenInBackground", "skipTests", "storeProjectFilesExternally", "useMavenOutput", "usePluginRegistry", "userSettingsFile", "workOffline" ],
        "value_set" : [ "fail", "not_set", "warn", "at_end", "fast", "never", "debug", "error", "fatal", "info", "default", "do_not_update", "update", "unknown", "autodetect", "generated_source_folder", "ignore", "subfolder", "generate-resources", "generate-sources", "generate-test-resources", "process-resources", "process-sources", "process-test-resources", "#JAVA_INTERNAL", "#JAVA_HOME", "custom", "#USE_PROJECT_JDK" ]
      }
    }
  }, {
    "id" : "build.tools",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#build_tools}", "{enum:externalSystemId}" ],
      "event_data" : {
        "value" : [ "{enum#build_tools}" ]
      }
    }
  }, {
    "id" : "build.tools.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{util#action}", "{enum:action.invoked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#_}" ],
        "class" : [ "{util#class_name}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "system_id" : [ "{enum#build_tools}" ]
      },
      "enums" : {
        "_" : [ "RefreshAllExternalProjectsAction", "RunExternalSystemTaskAction", "ShowExternalSystemSettingsAction", "RefreshExternalProjectAction", "ExecuteExternalSystemRunConfigurationAction", "AttachExternalProjectAction", "DetachExternalProjectAction", "OpenExternalConfigAction", "GradleRefreshProjectDependenciesAction", "ExternalSystemSelectProjectDataToImportAction", "RunTaskAction", "ToggleAutoImportAction", "EditExternalSystemRunConfigurationAction", "OpenTasksActivationManagerAction", "IgnoreExternalProjectAction", "RemoveExternalSystemRunConfigurationAction", "RunCommandAction", "ShowSettingAction", "GroupModulesAction", "AssignShortcutAction", "ToggleAfterCompileTasksAction", "ToggleAfterSyncTaskAction", "ShowTaskAction", "ToggleBeforeCompileTasksAction", "ToggleBeforeSyncTaskAction", "ToggleAfterRebuildTasksAction", "GroupTasksAction", "ShowIgnoredAction", "ShowInheritedTasksAction", "SbtHelpAction", "InspectTaskAction", "InspectSettingAction", "ToggleBeforeRebuildTasksAction", "AssignRunConfigurationShortcutAction" ]
      }
    }
  }, {
    "id" : "build.tools.state",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}.{enum#state}", "numberOfLinkedProject.{regexp#count}", "modules.count.{regexp#count}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "count_rounded" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "externalSystemId" : [ "{enum#build_tools}" ],
        "value" : [ "{enum:all|selective|none}" ]
      },
      "enums" : {
        "__event_id" : [ "modules.count", "numberOfLinkedProject", "useQualifiedModuleNames", "autoImport", "autoReloadType" ],
        "setting" : [ "autoImport", "useQualifiedModuleNames" ]
      }
    }
  }, {
    "id" : "bundled.resource.reference",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ide.file|plugin.file}" ],
      "event_data" : {
        "path" : [ "{util#bundled_resource_path}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "cache.recovery.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:perform}" ],
      "event_data" : {
        "action-id" : [ "{enum:refresh|hammer|reindex|drop-shared-index|rescan|stop|reload-workspace-model}" ],
        "from-guide" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "commit.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "files_included" : [ "{regexp#integer}" ],
        "files_total" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "input_event" : [ "{util#shortcut}" ],
        "unversioned_included" : [ "{regexp#integer}" ],
        "unversioned_total" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "select.item", "session.started", "session.finished", "show.diff", "close.diff", "commit", "jump.to.source", "commit.and.push", "include.file", "exclude.file" ]
      }
    }
  }, {
    "id" : "completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "additional.ml_used" : [ "{enum#boolean}" ],
        "additional.r_context_type" : [ "{enum#__r_context_type}" ],
        "additional.r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "additional.r_ml_app_version" : [ "{regexp#version}" ],
        "additional.r_ml_enabled" : [ "{enum#boolean}" ],
        "additional.r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "additional.r_ml_response_received" : [ "{enum#boolean}" ],
        "additional.r_ml_time_ms" : [ "{regexp#integer}" ],
        "additional.ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}" ],
        "additional.spellchecker" : [ "{enum#boolean}" ],
        "additional.total_ml_time" : [ "{regexp#integer}" ],
        "additional.version" : [ "{regexp#version}" ],
        "alphabetically" : [ "{enum#boolean}" ],
        "backspaces" : [ "{regexp#integer}" ],
        "completion_char" : [ "{enum#__completion_char}" ],
        "contributor" : [ "{util#class_name}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb_finish" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TYPED|EXPLICIT|CANCELED_EXPLICITLY|CANCELED_BY_TYPING}" ],
        "iren_model_type" : [ "{enum:default|ngram}" ],
        "iren_probability" : [ "{regexp#float}" ],
        "lang" : [ "{util#lang}" ],
        "ml_used" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "query_length" : [ "{regexp#integer}" ],
        "r_context_type" : [ "{enum#__r_context_type}" ],
        "r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "r_ml_app_version" : [ "{regexp#version}" ],
        "r_ml_enabled" : [ "{enum#boolean}" ],
        "r_ml_model_version" : [ "{regexp#version}" ],
        "r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "r_ml_response_received" : [ "{enum#boolean}" ],
        "r_ml_time_ms" : [ "{regexp#integer}" ],
        "ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "selected_index" : [ "{regexp#integer}" ],
        "selection_changed" : [ "{regexp#integer}" ],
        "spellchecker" : [ "{enum#boolean}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "token_length" : [ "{regexp#integer}" ],
        "total_ml_time" : [ "{regexp#integer}" ],
        "typing" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__completion_char" : [ "ENTER", "TAB", "COMPLETE_STATEMENT", "AUTO_INSERT", "OTHER" ],
        "__r_context_type" : [ "IDENTIFIER", "NAMESPACE", "DOLLAR_ACCESS", "AT_ACCESS", "IMPORT", "OPERATOR", "UNKNOWN" ],
        "__ruby_lookup_usage_location" : [ "COMMON", "DEBUG", "EVAL", "IRB", "RAILS" ]
      }
    }
  }, {
    "id" : "completion.postfix",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#completion_template}", "{util#completion_provider_template}", "{enum:expanded}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#completion_provider_template}", "{util#completion_template}" ],
        "template" : [ "{util#completion_template}" ]
      }
    }
  }, {
    "id" : "coverage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:html.generated|report.loaded|started|report.built}" ],
      "event_data" : {
        "annotated_classes" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "excludes" : [ "{regexp#integer}" ],
        "generation_ms" : [ "{regexp#integer}" ],
        "includes" : [ "{regexp#integer}" ],
        "loaded_classes" : [ "{regexp#integer}" ],
        "runner" : [ "{enum:emma|jacoco|idea}", "{enum:IJCSampling|IJCTracing|IJCTracingTestTracking|JaCoCo|Emma}" ]
      }
    }
  }, {
    "id" : "create.directory.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:completion.variant.chosen}" ],
      "event_data" : {
        "contributor" : [ "{enum:third.party|GradleDirectoryCompletionContributor|MavenDirectoryCompletionContributor}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "customize.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "group" : [ "{enum:Java_Frameworks|Web_Development|Version_Controls|Test_Tools|Application_Servers|Clouds|Swing|Android|Database_Tools|Other_Tools|Plugin_Development|Build_Tools}" ],
        "page" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "timestamp" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "remaining.pages.skipped", "WizardDisplayed", "UIThemeChanged", "DesktopEntryCreated", "LauncherScriptCreated", "BundledPluginGroupDisabled", "BundledPluginGroupEnabled", "BundledPluginGroupCustomized", "FeaturedPluginInstalled" ]
      }
    }
  }, {
    "id" : "cwm.gateway",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:guestDownload.started|guestDownload.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "isSucceeded" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cwm.lifecycle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_id" : [ "{regexp#hash}" ],
        "connectionType" : [ "{enum:ws_relay|p2p_quic|direct_tcp|unknown}", "{enum:turn_relay_quic}" ],
        "disconnectsCount" : [ "{regexp#integer}" ],
        "guestsCount" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "isUnattended" : [ "{enum#boolean}" ],
        "participantsMax" : [ "{regexp#integer}" ],
        "participantsSize" : [ "{enum:OneOnOne|Group}" ],
        "permissions.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_changed.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions_changed.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions_changed.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "pingDirect" : [ "{regexp#integer}" ],
        "pingUiThread" : [ "{regexp#integer}" ],
        "sessionDurationMinutes" : [ "{regexp#integer}" ],
        "sessionDurationType" : [ "{enum:Below15mins|Below25mins|Below1hr|Above1hr}" ],
        "sessionId" : [ "{regexp#hash}" ],
        "telephonyEnabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "connected", "finished", "onCircleLeftClickStart", "onCircleLeftClickStop", "onCircleRightClick", "onEditorFollowingLabelResume", "onEditorFollowingLabelStop", "onEditorFullSyncLabelStop", "onReconnection", "sessionCreated", "sessionTerminated", "onReconnectionFailed", "sessionFinished", "sessionStarted", "sessionExpired", "onConnectionFailed", "thin.finished", "thin.connected", "onPermissionsChanged", "guest.finished", "guest.connected", "guest.ping" ]
      }
    }
  }, {
    "id" : "cwm.telephony",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cwmSessionEnded|cwmSessionStarted|enabledFromAction}" ],
      "event_data" : {
        "telephonyEnabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cwm.telephony.devices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "cameraEnabled.finished", "cameraEnabled.started", "microphoneEnabled.finished", "microphoneEnabled.started", "voiceCallJoined.finished", "voiceCallJoined.started", "screenSharingEnabled.started", "screenSharingEnabled.finished" ]
      }
    }
  }, {
    "id" : "daemon",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "errors" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "lines" : [ "{regexp#integer}" ],
        "warnings" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "total.{regexp#count}", "total.disabled.{regexp#count}", "total.non.suspending.{regexp#count}", "not.default.suspend.ALL.{util#breakpoint}", "not.default.suspend.THREAD.{util#breakpoint}", "not.default.suspend.NONE.{util#breakpoint}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "suspendPolicy" : [ "{enum:ALL|THREAD|NONE}" ],
        "type" : [ "{util#breakpoint}" ]
      },
      "enums" : {
        "__event_id" : [ "using.log.expression", "using.log.message", "using.dependent", "using.temporary", "using.log.stack", "using.condition", "not.default.suspend", "using.groups", "total", "total.non.suspending", "total.disabled" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "verified.{regexp#integer}", "new.custom.{util#plugin}", "new.{util#breakpoint}", "{enum#_}", "{enum:breakpoint.added|breakpoint.verified}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time" : [ "{regexp#integer}" ],
        "type" : [ "{util#breakpoint}" ],
        "within_session" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "new.breakpoint", "new.within.session", "new.cython-line", "new.custom" ]
      }
    }
  }, {
    "id" : "debugger.evaluate.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "mode" : [ "{enum:CODE_FRAGMENT|EXPRESSION}" ]
      },
      "enums" : {
        "__event_id" : [ "dialog.open", "evaluate", "mode.switch", "inline.evaluate", "history.show", "history.choose", "watch.from.inline.add", "inline.input.focus" ]
      }
    }
  }, {
    "id" : "debugger.frames.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected}" ],
      "event_data" : {
        "view_id" : [ "{enum:UNKNOWN|Default|Threads|SideBySide|FramesOnly}", "{enum:Hidden}" ]
      }
    }
  }, {
    "id" : "debugger.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execution.point.reached}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "debugger.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#no_}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "forceClassicVm", "disableJit", "showAlternativeSource", "hotswapInBackround", "enableMemoryAgent", "alwaysSmartStepInto", "skipConstructors", "skipGetters", "skipClassloaders", "compileBeforeHotswap", "hotswapHangWarningEnabled", "watchReturnValues", "autoVariablesMode", "killProcessImmediately", "resumeOnlyCurrentThread", "instrumentingAgent" ],
        "no_" : [ "noForceClassicVm", "noDisableJit", "noShowAlternativeSource", "noHotswapInBackround", "noEnableMemoryAgent", "noAlwaysSmartStepInto", "noSkipConstructors", "noSkipGetters", "noSkipClassloaders", "noCompileBeforeHotswap", "noHotswapHangWarningEnabled", "noWatchReturnValues", "noAutoVariablesMode", "noKillProcessImmediately", "noResumeOnlyCurrentThread", "noInstrumentingAgent" ]
      }
    }
  }, {
    "id" : "debugger.ui.experiment",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:start|stop}" ],
      "event_data" : {
        "group" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "deployment.activities",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "scenario" : [ "{enum#scenario}" ],
        "start_time_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "autoupload.session.finished", "download.action.finished", "download.action.started", "upload.action.finished", "upload.action.started", "create.project.from.existing.sources" ],
        "scenario" : [ "NoServer", "LocalServer", "MountedServer", "FtpSftpServer" ]
      }
    }
  }, {
    "id" : "deployment.publish.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "AutoUpload.{enum#_}", "AutoUpload.external.changes.{enum#_}", "Stop.on.first.error.{enum#_}", "Overwrite.up.to.date.files.{enum#_}", "Delete.target.items.{enum#_}", "Create.empty.dirs.{enum#_}", "Prompt.on.local.overwrite.{enum#_}", "Notify.remote.changes.{enum#_}", "Show.warning.dialog.on.Remote.Host.{enum#_}", "Permissions.on.files.{regexp#integer}", "Permissions.on.files.-{regexp#integer}", "Prompt.on.remote.overwrite.{enum#_}", "Logging.verbosity.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{regexp#permission}" ]
      },
      "enums" : {
        "_" : [ "ALWAYS", "ON_EXPLICIT_SAVE", "NEVER", "yes", "no", "NONE", "CHECK_TIMESTAMP", "CHECK_CONTENT", "ERRORS", "BRIEF", "DETAILS" ],
        "_1" : [ "AutoUpload", "AutoUpload.external.changes", "Stop.on.first.error", "Overwrite.up.to.date.files", "Delete.target.items", "Create.empty.dirs", "Prompt.on.local.overwrite", "Prompt.on.remote.overwrite", "Permissions.on.files", "Permissions.on.folder", "Notify.remote.changes", "Show.warning.dialog.on.Remote.Host", "Logging.verbosity" ],
        "value" : [ "always", "on_explicit_save", "never", "none", "check_timestamp", "check_content", "errors", "brief", "details" ]
      },
      "regexps" : {
        "permission" : "-?[0-9]{1,3}"
      }
    }
  }, {
    "id" : "deployment.serverSettingsUI",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "deploymentServerSettingsUI.visibility.new{enum#_}LevelGroup", "deploymentServerSettingsUI.visibility.switchGroupTo{enum#_}Level", "defaultServerSettingWithAutouploadOn.{enum#_}", "deploymentServerSettingsUI.{enum#_}", "{enum#_1}" ],
      "event_data" : {
        "decision" : [ "{enum#decision}" ],
        "level" : [ "{enum#level}" ]
      },
      "enums" : {
        "_" : [ "Project", "IDE", "changeDefaultServerCancelled", "changeDefaultServerExplicitly", "changeDefaultServerSilently", "disableDefaultServerCancelled", "disableDefaultServerExplicitly", "disableDefaultServerSilently", "AutodetectPathClick", "ProjectIDELevelCheckBoxClick" ],
        "_1" : [ "NewGroupVisibilityCreated", "NewGroupVisibilitySwitched", "AutodetectPathClicked", "ProjectIDELevelCheckBoxClicked", "defaultServerSettingWithAutoUploadOnSwitched", "defaultServerSettingWithAutoUploadOnDisabled" ],
        "decision" : [ "explicit", "silent", "cancelled" ],
        "level" : [ "project", "IDE" ]
      }
    }
  }, {
    "id" : "directoryIndex",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "buildRequest" : [ "{enum:INITIAL|BRANCH_BUILD|FULL_REBUILD|INCREMENTAL_UPDATE}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "part" : [ "{enum:MAIN|ORDER_ENTRY_GRAPH}" ],
        "reason" : [ "{enum:ROOT_MODEL|VFS_CHANGE|ADDITIONAL_LIBRARIES_PROVIDER}" ]
      },
      "enums" : {
        "__event_id" : [ "reset", "building.finished", "building.additionalLibraryRootsProvider", "building.workspaceModel", "building.exclusionPolicy", "building.finalizing", "building.sdk", "building.started" ]
      }
    }
  }, {
    "id" : "disabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "disabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "eclipse.projects.detector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:detected|opened}" ],
      "event_data" : {
        "fromEmptyState" : [ "{enum#boolean}" ],
        "projectsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "editor.notification.panel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|actionInvoked|notificationShown|handlerInvoked}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "handler_class" : [ "{util#class_name}" ],
        "key" : [ "{util#editor_notification_panel_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "editor.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#no_}", "stripTrailingSpaces.{enum#trailingSpaces}", "completionCaseSensitivity.{regexp#integer}", "smartBackspace.{enum#backspace}", "reformatOnPaste.{regexp#integer}", "importsOnPaste.{regexp#integer}", "noBreadcrumbsFor{util#lang}", "breadcrumbsFor{util#lang}", "{enum:not.default}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "setting_id" : [ "{enum:caretAfterLineEnd|caretInsideTabs|virtualSpaceAtFileBottom|softWraps|softWraps.console|softWraps.preview|softWraps.relativeIndent|softWraps.showAll|ensureNewlineAtEOF|quickDocOnMouseHover|blinkingCaret|blockCaret|rightMargin|lineNumbers|gutterIcons|foldingOutline|showLeadingWhitespace|showInnerWhitespace|showTrailingWhitespace|indentGuides|animatedScroll|dragNDrop|wheelZoom|mouseCamel|inplaceRename|preselectOnRename|inlineDialog|minimizeScrolling|afterReformatNotification|afterOptimizeNotification|smartHome|camelWords|editor.inlay.parameter.hints|breadcrumbsAbove|all.breadcrumbs|intentionBulb|renderDoc|intentionPreview|useEditorFontInInlays|breadcrumbs|richCopy|parameterAutoPopup|javadocAutoPopup|completionAutoPopup|autoPopupCharComplete|autoCompleteBasic|autoCompleteSmart|parameterInfoFullSignature|indentOnEnter|braceOnEnter|javadocOnEnter|scriptletEndOnEnter|smartEnd|autoCloseJavadocTags|surroundByQuoteOrBrace|pairBracketAutoInsert|pairQuoteAutoInsert|reformatOnRBrace|bracesHighlight|scopeHighlight|identifierUnderCaretHighlight|autoAddImports|completionHints|tabExitsBracketsAndQuotes|nextErrorActionGoesToErrorsFirst|suppressWarnings|importHintEnabled|showMethodSeparators|openTabsInMainWindow|stripTrailingSpaces|blinkPeriod|completionCaseSensitivity|smartBackspace|reformatOnPaste|importsOnPaste|autoReparseDelay|errorStripeMarkMinHeight|caret.movement.word|caret.movement.line|fileColorsEnabled|fileColorsEnabledForProjectView|fileColorsEnabledForTabs|show.actions.in.tooltip}" ],
        "value" : [ "{regexp#integer}", "{enum:Whole|Changed|None}", "{enum:OFF|AUTOINDENT|INDENT}", "{enum:NONE|CURRENT|NEIGHBOR|START|END|BOTH|OTHER}" ]
      },
      "enums" : {
        "_" : [ "caretAfterLineEnd", "caretInsideTabs", "virtualSpaceAtFileBottom", "softWraps", "softWraps.console", "softWraps.preview", "softWraps.relativeIndent", "softWraps.showAll", "ensureNewlineAtEOF", "quickDocOnMouseHover", "blinkingCaret", "blockCaret", "rightMargin", "lineNumbers", "gutterIcons", "foldingOutline", "showLeadingWhitespace", "showInnerWhitespace", "showTrailingWhitespace", "indentGuides", "animatedScroll", "dragNDrop", "wheelZoom", "mouseCamel", "inplaceRename", "preselectOnRename", "inlineDialog", "minimizeScrolling", "afterReformatNotification", "afterOptimizeNotification", "smartHome", "camelWords", "editor.inlay.parameter.hints", "breadcrumbsAbove", "all.breadcrumbs", "breadcrumbs", "intentionBulb", "richCopy", "parameterAutoPopup", "javadocAutoPopup", "completionAutoPopup", "autoPopupCharComplete", "autoCompleteBasic", "autoCompleteSmart", "parameterInfoFullSignature", "indentOnEnter", "braceOnEnter", "javadocOnEnter", "smartEnd", "autoCloseJavadocTags", "surroundByQuoteOrBrace", "pairBracketAutoInsert", "pairQuoteAutoInsert", "reformatOnRBrace", "bracesHighlight", "scopeHighlight", "identifierUnderCaretHighlight", "autoAddImports", "completionHints", "externalAnnotationsInline", "inferredAnnotationsInline", "tabExitsBracketsAndQuotes", "stripTrailingSpaces", "completionCaseSensitivity", "smartBackspace", "reformatOnPaste", "importsOnPaste", "show.actions.in.tooltip", "nextErrorActionGoesToErrorsFirst", "autoReparseDelay", "errorStripeMarkMinHeight", "suppressWarnings", "showMethodSeparators", "importHintEnabled", "caret.movement.line", "caret.movement.word", "renderDoc", "scriptletEndOnEnter", "blinkPeriod", "fileColorsEnabledForProjectView", "fileColorsEnabledForTabs", "fileColorsEnabled", "intentionPreview" ],
        "backspace" : [ "OFF", "AUTOINDENT", "INDENT" ],
        "no_" : [ "noCaretAfterLineEnd", "noCaretInsideTabs", "noVirtualSpaceAtFileBottom", "noSoftWraps", "noSoftWraps.console", "noSoftWraps.preview", "noSoftWraps.relativeIndent", "noSoftWraps.showAll", "noEnsureNewlineAtEOF", "noQuickDocOnMouseHover", "noBlinkingCaret", "noBlockCaret", "noRightMargin", "noLineNumbers", "noGutterIcons", "noFoldingOutline", "noShowLeadingWhitespace", "noShowInnerWhitespace", "noShowTrailingWhitespace", "noIndentGuides", "noAnimatedScroll", "noDragNDrop", "noWheelZoom", "noMouseCamel", "noInplaceRename", "noPreselectOnRename", "noInlineDialog", "noMinimizeScrolling", "noAfterReformatNotification", "noAfterOptimizeNotification", "noSmartHome", "noCamelWords", "noEditor.inlay.parameter.hints", "noBreadcrumbsBelow", "noBreadcrumbs", "noIntentionBulb", "noRichCopy", "noParameterAutoPopup", "noJavadocAutoPopup", "noCompletionAutoPopup", "noAutoPopupCharComplete", "noAutoCompleteBasic", "noAutoCompleteSmart", "noParameterInfoFullSignature", "noIndentOnEnter", "noBraceOnEnter", "noJavadocOnEnter", "noSmartEnd", "noAutoCloseJavadocTags", "noSurroundByQuoteOrBrace", "noPairBracketAutoInsert", "noPairQuoteAutoInsert", "noReformatOnRBrace", "noBracesHighlight", "noScopeHighlight", "noIdentifierUnderCaretHighlight", "noAutoAddImports", "noCompletionHints", "noExternalAnnotationsInline", "noInferredAnnotationsInline", "noTabExitsBracketsAndQuotes" ],
        "trailingSpaces" : [ "None", "Changed", "Whole" ]
      }
    }
  }, {
    "id" : "editor.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autoOptimizeImports|noAutoOptimizeImports}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "editor.typing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:typed|too.many.events|latency}" ],
      "event_data" : {
        "editor_kind" : [ "{enum:UNTYPED|MAIN_EDITOR|CONSOLE|PREVIEW|DIFF}" ],
        "file_type" : [ "{util#file_type}" ],
        "latency_90_ms" : [ "{regexp#integer}" ],
        "latency_max_ms" : [ "{regexp#integer}" ],
        "toolwindow_id" : [ "{util#toolwindow}" ]
      }
    }
  }, {
    "id" : "educational.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "event" : [ "{enum#authorization_event}", "{enum#hint_event}", "{enum#post_course_event}" ],
        "language" : [ "{util#lang}", "{enum#edu_language}" ],
        "mode" : [ "{enum#edu_mode}" ],
        "platform" : [ "{enum#edu_platform}" ],
        "source" : [ "{enum#navigate_to_task_place}", "{enum#authorization_place}", "{enum#synchronization_place}", "{enum:welcome_screen|main_menu|find_action|course_selection_dialog|unknown}" ],
        "status" : [ "{enum#edu_check_status}" ],
        "tab" : [ "{enum#edu_tab}" ],
        "type" : [ "{enum#edu_item_type}", "{enum#link_type}" ]
      },
      "enums" : {
        "__event_id" : [ "navigate.to.task", "edu.project.created", "edu.project.opened", "study.item.created", "link.clicked", "authorization", "show.full.output", "peek.solution", "leave.feedback", "revert.task", "review.stage.topics", "check.task", "hint", "create.course.preview", "preview.task.file", "create.course.archive", "post.course", "synchronize.course", "import.course", "codeforces.submit.solution", "twitter.dialog.shown", "open.course.selection.view", "select.tab.course.selection.view", "open.task", "create.new.course.clicked" ],
        "authorization_event" : [ "log_in", "log_out", "log_out_succeed", "log_in_succeed" ],
        "authorization_place" : [ "settings", "widget", "start_course_dialog", "submissions_tab", "unknown", "task_description_header" ],
        "edu_check_status" : [ "Unchecked", "Solved", "Failed", "unchecked", "solved", "failed" ],
        "edu_item_type" : [ "CheckiO", "PyCharm", "Coursera", "Hyperskill", "Marketplace", "section", "framework", "lesson", "edu", "ide", "choice", "code", "output", "theory", "Codeforces", "Stepik" ],
        "edu_language" : [ "JAVA", "kotlin", "Python", "Scala", "JavaScript", "Rust", "ObjectiveC", "go", "PHP" ],
        "edu_mode" : [ "Study", "Course_Creator" ],
        "edu_platform" : [ "Hyperskill", "Stepik", "Js_CheckiO", "Py_CheckiO", "Marketplace", "Codeforces" ],
        "edu_tab" : [ "marketplace", "jba", "checkio", "codeforces", "coursera", "community", "stepik", "my_courses", "unknown" ],
        "hint_event" : [ "expanded", "collapsed" ],
        "link_type" : [ "in_course", "stepik", "external", "psi", "codeforces", "jba", "file" ],
        "navigate_to_task_place" : [ "check_all_notification", "task_description_toolbar", "check_panel", "unresolved_dependency_notification" ],
        "post_course_event" : [ "upload", "update" ],
        "synchronization_place" : [ "widget", "project_generation", "project_reopen" ]
      }
    }
  }, {
    "id" : "educational.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:role|task.panel}" ],
      "event_data" : {
        "value" : [ "{enum#task_panel}", "{enum#role}" ]
      },
      "enums" : {
        "role" : [ "student", "educator" ],
        "task_panel" : [ "swing", "javafx", "jcef" ]
      }
    }
  }, {
    "id" : "enabled.bundled.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "enabled.listed.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ]
      }
    }
  }, {
    "id" : "entry.points",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:additional_annotations|write_annotations|class_patterns}" ],
      "event_data" : {
        "fqn_used" : [ "{enum#boolean}" ],
        "patterns_used" : [ "{enum#boolean}" ],
        "used" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "event.log",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "code" : [ "{regexp#integer}" ],
        "error" : [ "{enum:NO_LOGS|NO_UPLOADER|NO_LIBRARIES|NO_TEMP_FOLDER}", "{enum:NO_ARGUMENTS|NO_DEVICE_CONFIG|NO_RECORDER_CONFIG|NO_APPLICATION_CONFIG|IDE_NOT_CLOSING|ERROR_ON_SEND|NOT_PERMITTED_SERVER|ERROR_IN_CONFIG|NOTHING_TO_SEND|SENT_WITH_ERRORS}", "{util#class_name}", "{enum:EMPTY_CONTENT|INVALID_JSON|UNKNOWN}", "{enum:EMPTY_SERVICE_URL|UNREACHABLE_SERVICE|EMPTY_RESPONSE_BODY|ERROR_ON_LOAD}" ],
        "error_ts" : [ "{regexp#integer}" ],
        "errors" : [ "{regexp#integer}" ],
        "external" : [ "{enum#boolean}" ],
        "failed" : [ "{regexp#integer}" ],
        "paths" : [ "{regexp#hash}" ],
        "send" : [ "{regexp#integer}" ],
        "send_ts" : [ "{regexp#integer}" ],
        "stage" : [ "{enum:LOADING|PARSING}" ],
        "succeed" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "whitelist.loaded", "whitelist.updated", "logs.send", "external.send.command.creation.started", "external.send.command.creation.finished", "external.send.started", "external.send.finished", "loading.config.failed", "whitelist.update.failed", "whitelist.load.failed", "metadata.loaded", "metadata.updated", "metadata.update.failed", "metadata.load.failed" ]
      }
    }
  }, {
    "id" : "event.log.session",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.mode|headless|reporting|test.mode}" ],
      "event_data" : {
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "fus_test" : [ "{enum#boolean}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "only_local" : [ "{enum#boolean}" ],
        "suppress_report" : [ "{enum#boolean}" ],
        "teamcity" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "event.log.user.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:statistics.test.mode.enabled|team.city.version.detected}" ]
    }
  }, {
    "id" : "external.project.task",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "target" : [ "{util#run_target}" ],
        "task_id" : [ "{enum:ResolveProject|ExecuteTask}" ]
      }
    }
  }, {
    "id" : "extract.method.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "nameChanged" : [ "{enum#boolean}" ],
        "settingsChange" : [ "{enum:AnnotateOn|AnnotateOff|MakeStaticOn|MakeStaticOff|MakeStaticWithFieldsOn|MakeStaticWithFieldsOff}" ]
      },
      "enums" : {
        "__event_id" : [ "executed", "hidePopup", "openExtractDialog", "settingsChanged", "showPopup" ]
      }
    }
  }, {
    "id" : "feature_suggester",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "suggester_id" : [ "{util#feature_suggester_id}" ]
      },
      "enums" : {
        "__event_id" : [ "notification.dont_suggest", "notification.learn_more", "notification.showed", "notification.thanks", "suggestion_found" ]
      }
    }
  }, {
    "id" : "file.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:alternative.file.editor.selected}" ],
      "event_data" : {
        "fileEditor" : [ "{util#class_name}" ],
        "file_path" : [ "{regexp#hash}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.prediction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.opened|candidate.calculated|calculated}" ],
      "event_data" : {
        "candidates.features" : [ "{util#file_features}" ],
        "candidates.file_path" : [ "{regexp#hash}" ],
        "candidates.opened" : [ "{regexp#integer}" ],
        "candidates.prob" : [ "{regexp#float}" ],
        "candidates.source" : [ "{regexp#integer}" ],
        "context_opened" : [ "{enum#boolean}" ],
        "context_prev_opened" : [ "{enum#boolean}" ],
        "excluded" : [ "{enum#boolean}" ],
        "features_computation" : [ "{regexp#integer}" ],
        "features_ms" : [ "{regexp#integer}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}" ],
        "history_bi_max" : [ "{regexp#float}" ],
        "history_bi_min" : [ "{regexp#float}" ],
        "history_bi_mle" : [ "{regexp#float}" ],
        "history_bi_mle_to_max" : [ "{regexp#float}" ],
        "history_bi_mle_to_min" : [ "{regexp#float}" ],
        "history_position" : [ "{regexp#integer}" ],
        "history_size" : [ "{regexp#integer}" ],
        "history_uni_max" : [ "{regexp#float}" ],
        "history_uni_min" : [ "{regexp#float}" ],
        "history_uni_mle" : [ "{regexp#float}" ],
        "history_uni_mle_to_max" : [ "{regexp#float}" ],
        "history_uni_mle_to_min" : [ "{regexp#float}" ],
        "in_library" : [ "{enum#boolean}" ],
        "in_project" : [ "{enum#boolean}" ],
        "in_ref" : [ "{enum#boolean}" ],
        "in_source" : [ "{enum#boolean}" ],
        "name_prefix" : [ "{regexp#integer}" ],
        "opened" : [ "{enum#boolean}" ],
        "path_prefix" : [ "{regexp#integer}" ],
        "performance" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "predict_ms" : [ "{regexp#integer}" ],
        "prev_file_path" : [ "{regexp#hash}" ],
        "prev_file_type" : [ "{util#file_type}" ],
        "probability" : [ "{regexp#float}" ],
        "refs_computation" : [ "{regexp#integer}" ],
        "refs_ms" : [ "{regexp#integer}" ],
        "relative_path_prefix" : [ "{regexp#integer}" ],
        "same_dir" : [ "{enum#boolean}" ],
        "same_module" : [ "{enum#boolean}" ],
        "session" : [ "{regexp#integer}" ],
        "session_id" : [ "{regexp#integer}" ],
        "source" : [ "{enum:vcs|neighbor|open|recent|ref}" ],
        "total_ms" : [ "{regexp#integer}" ],
        "vcs_in_changelist" : [ "{enum#boolean}" ],
        "vcs_prev_in_changelist" : [ "{enum#boolean}" ],
        "vcs_related_prob" : [ "{regexp#float}" ]
      }
    }
  }, {
    "id" : "file.type.configurable.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      },
      "enums" : {
        "__event_id" : [ "file.type.added", "file.type.edited", "file.type.removed", "hashbang.added", "hashbang.edited", "hashbang.removed", "ignore.pattern.added", "ignore.pattern.edited", "ignore.pattern.removed", "pattern.added", "pattern.edited", "pattern.removed" ]
      }
    }
  }, {
    "id" : "file.types",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum:file.in.project}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_schema.percent" : [ "{regexp#integer}" ],
        "file_schema.schema" : [ "{util#file_type_schema}" ],
        "file_type" : [ "{util#file_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.types.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#file_type}", "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_editor" : [ "{util#class_name}" ],
        "file_extension" : [ "{util#file_extension}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}", "{enum:DIFF}" ],
        "is_in_reader_mode" : [ "{enum#boolean}" ],
        "is_writable" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "type" : [ "{enum:open|edit}" ]
      },
      "enums" : {
        "__event_id" : [ "open", "edit", "close", "select", "create_by_new_file" ]
      }
    }
  }, {
    "id" : "find",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:search.session.started|check.box.toggled|regexp.help.clicked|pin.toggled}" ],
      "event_data" : {
        "case_sensitive" : [ "{enum#boolean}" ],
        "context" : [ "{enum#__context}" ],
        "option_name" : [ "{enum#__option_name}" ],
        "option_value" : [ "{enum#boolean}" ],
        "regular_expressions" : [ "{enum#boolean}" ],
        "type" : [ "{enum:FindInFile|FindInPath|Unknown}" ],
        "whole_words_only" : [ "{enum#boolean}" ],
        "with_file_filter" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "FindPopupPanel$ToggleCaseSensitive", "FindPopupPanel$TogglePreserveCase", "FindPopupPanel$ToggleWholeWords", "FindPopupPanel$ToggleRegex", "FindPopupPanel$ToggleFileFilter", "FindInEditor.MatchCaseOn", "FindInEditor.WholeWordsOn", "FindInEditor.RegexOn", "FindInEditor.Context.IN_STRING_LITERALS", "FindInEditor.Context.IN_COMMENTS", "FindInEditor.Context.EXCEPT_STRING_LITERALS", "FindInEditor.Context.EXCEPT_COMMENTS", "FindInEditor.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS", "FindInPath.MatchCaseOn", "FindInPath.WholeWordsOn", "FindInPath.RegexOn", "FindInPath.FileFilterOn", "FindInPath.Context.IN_STRING_LITERALS", "FindInPath.Context.IN_COMMENTS", "FindInPath.Context.EXCEPT_STRING_LITERALS", "FindInPath.Context.EXCEPT_COMMENTS", "FindInPath.Context.EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__context" : [ "ANY", "IN_STRING_LITERALS", "IN_COMMENTS", "EXCEPT_STRING_LITERALS", "EXCEPT_COMMENTS", "EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__option_name" : [ "CaseSensitive", "PreserveCase", "WholeWords", "Regex", "FileFilter" ]
      }
    }
  }, {
    "id" : "find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:options}" ],
      "event_data" : {
        "additional.isIncludeChildMethods" : [ "{enum#boolean}" ],
        "isSearchForTextOccurrences" : [ "{enum#boolean}" ],
        "isUsages" : [ "{enum#boolean}" ],
        "openInNewTab" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}", "{util#scopeRule}" ]
      }
    }
  }, {
    "id" : "gateway.space.connector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auto" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "login_state" : [ "{enum:NOT_LOGGED|LOGGING|ERROR|LOGGED_IN}" ],
        "screen" : [ "{enum:REMOTE_DEVELOPMENT|SPACE_WELCOME|SPACE_LOGIN}" ]
      },
      "enums" : {
        "__event_id" : [ "logout.clicked", "client.launch.started", "tab.selected", "repository.clicked", "organization.clicked", "login.in.browser.clicked", "back.clicked", "project.clicked", "client.launch.finished", "watch.overview.clicked", "workspace.clicked", "logged.in", "connect.clicked", "browse.environments.clicked", "explore.clicked" ]
      }
    }
  }, {
    "id" : "gateway.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connector" : [ "{enum:unknown|cwm.connector|space.connector|ssh.connector}", "{enum:gitpod.connector}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "installation_result" : [ "{enum:Success|Error|IncompatibleVersion}" ],
        "isNewConnection" : [ "{enum#boolean}" ],
        "isSucceeded" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "productId" : [ "{enum:unknown|IU|RM|PY|DS|PS|WS|CL|RD|GO}", "{enum:IC}" ]
      },
      "enums" : {
        "__event_id" : [ "full.deploy.cycle.activity.started", "full.deploy.cycle.activity.finished", "download.ide.backend.activity.started", "download.ide.backend.activity.finished", "otherOptions.clicked", "useOldBackend.clicked", "openSshTerminal.clicked", "uploadInstaller.clicked", "useNewBackend.clicked", "documentation.clicked", "useDownloadLink.clicked", "checkConnectionAndContinue.clicked", "connect.clicked", "gtwFromStandaloneIde.started", "install_plugin" ]
      }
    }
  }, {
    "id" : "git.branches",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_new" : [ "{enum#boolean}" ],
        "is_protected" : [ "{enum#boolean}" ],
        "successfully" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "checkout.started", "checkout.finished", "checkout.checkout_operation.started", "checkout.checkout_operation.finished", "popup_widget_clicked", "checkout.vfs_refresh.started", "checkout.vfs_refresh.finished" ]
      }
    }
  }, {
    "id" : "git.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fs_monitor" : [ "{enum:NONE|BUILTIN|EXTERNAL_FS_MONITOR}" ],
        "is_worktree_used" : [ "{enum#boolean}" ],
        "local_branches" : [ "{regexp#integer}" ],
        "multiple_root" : [ "{enum#boolean}" ],
        "remote_bitbucket" : [ "{regexp#integer}" ],
        "remote_bitbucket_custom" : [ "{regexp#integer}" ],
        "remote_branches" : [ "{regexp#integer}" ],
        "remote_github" : [ "{regexp#integer}" ],
        "remote_github_custom" : [ "{regexp#integer}" ],
        "remote_gitlab" : [ "{regexp#integer}" ],
        "remote_gitlab_custom" : [ "{regexp#integer}" ],
        "remotes" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum:sync|dont_sync|not_decided}", "{enum:branch_default|merge|rebase}", "{enum:stash|shelve}" ],
        "version" : [ "{regexp#version}" ],
        "working_copy_size" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "repo.sync", "update.type", "save.policy", "use.builtin.ssh", "push.autoupdate", "push.update.all.roots", "cherrypick.autocommit", "warn.about.crlf", "warn.about.detached", "executable", "repository", "showGitBranchesInLog", "updateBranchesFilterInLogOnSelection", "staging.area.enabled", "commit_template" ],
        "__type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL", "WSL1", "WSL2" ]
      }
    }
  }, {
    "id" : "git.status.refresh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:status.refresh.started|status.refresh.finished|untracked.refresh.started|untracked.refresh.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "got.it.tooltip",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:close|show}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "id_prefix" : [ "{util#got.it.tooltip}" ],
        "type" : [ "{enum:click.button|click.link|click.outside|ancestor.removed|escape.shortcut.pressed|timeout}" ]
      }
    }
  }, {
    "id" : "grazi.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.detected|typo.found|quickfix.applied}" ],
      "event_data" : {
        "cancelled" : [ "{enum:true|false}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{util#grazi_rule_id}" ],
        "language" : [ "{enum#__language}" ],
        "spellcheck" : [ "{enum:true|false}" ]
      },
      "enums" : {
        "__language" : [ "", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazi.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled.language|native.language|enabled.spellcheck|rule}" ],
      "event_data" : {
        "enabled" : [ "{enum:true|false}" ],
        "id" : [ "{util#grazi_rule_id}" ],
        "value" : [ "{enum#__value}", "{enum:true|false}" ]
      },
      "enums" : {
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazie.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{util#plugin_info}", "{util#grazie_rule_id}" ],
        "info" : [ "{regexp#fix_info}" ],
        "language" : [ "{enum#__language}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "language.detected", "typo.found", "quickfix.applied", "language.suggested", "quick.fix.invoked" ],
        "__language" : [ "unknown", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      },
      "regexps" : {
        "fix_info" : "accept\\.suggestion|add\\.exception|rule\\.settings:(canceled|unmodified|changes:(unclassified|(languages,?)?(domains,?)?(rules)?))"
      }
    }
  }, {
    "id" : "grazie.pro.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:completion.shown|completion.accepted}" ]
    }
  }, {
    "id" : "grazie.pro.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enter_add_newlines" : [ "{enum#boolean}" ],
        "type" : [ "{enum:LOCAL|CLOUD}", "{enum:DISABLED|INLAY|POPUP}" ],
        "whitespace_after_enter" : [ "{enum#boolean}" ],
        "whitespace_after_tab" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "settings.wrap.text", "settings.processing", "settings.honor.subphrases", "settings.highlight.pos", "settings.completion" ]
      }
    }
  }, {
    "id" : "grazie.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "comments" : [ "{enum#state}" ],
        "commit" : [ "{enum#state}" ],
        "documentation" : [ "{enum#state}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{util#plugin_info}", "{util#grazie_strategy_id}" ],
        "language" : [ "{util#lang}" ],
        "literals" : [ "{enum#state}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "userChange" : [ "{enum#state}" ],
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled.language", "native.language", "rule", "strategy", "checkingContext" ],
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl", "km", "ast", "be", "sv", "gl", "eo", "ta", "unknown", "br", "ar", "tl", "sl", "ga", "da", "ca" ]
      }
    }
  }, {
    "id" : "gutter.icon.click",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#gutter_icon}", "{enum:clicked}" ],
      "event_data" : {
        "current_file" : [ "{util#lang}" ],
        "icon_id" : [ "{util#gutter_icon}", "{util#plugin_info}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "highlighting.settings.per.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:skip.highlighting.roots|skip.inspection.roots}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "http.client.conversions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|succeed|failed}" ],
      "event_data" : {
        "error" : [ "{enum#__error}", "{enum:invalid_url|unsupported_encoding|method_do_not_support_body}" ],
        "from" : [ "{enum:curl}" ]
      },
      "enums" : {
        "__error" : [ "not_a_curl", "no_url", "incomplete_option", "unknown_option", "unknown_data_option", "invalid_http_method", "invalid_form_data", "invalid_header" ]
      }
    }
  }, {
    "id" : "http.client.microservices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generation|navigate.to.error.element}" ],
      "event_data" : {
        "requestsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ide.error.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report|report.all|report.and.clear.all|clear.all}" ]
    }
  }, {
    "id" : "ide.jumpToLine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:GetLinesToJump|GoToLine|JumpToGreenLine|JumpToYellowLine}" ],
      "event_data" : {
        "plugin_version" : [ "{util#plugin_version}" ],
        "status" : [ "{enum:success|failed}" ]
      }
    }
  }, {
    "id" : "ide.script.engine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#_}", "{enum:used}" ],
      "event_data" : {
        "factory" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "_" : [ "third.party" ]
      }
    }
  }, {
    "id" : "ide.self.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "patches" : [ "{enum:not.available|manual|auto}" ],
        "show_in_editor" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.failed", "notification.clicked", "dialog.shown", "dialog.update.started", "dialog.shown.no.patch", "dialog.manual.patch.prepared", "dialog.download.clicked", "dialog.shown.manual.patch", "notification.shown", "update.whats.new" ]
      }
    }
  }, {
    "id" : "ide.update.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:link.clicked}" ],
      "event_data" : {
        "url" : [ "{util#update_dialog_rule_id}" ]
      }
    }
  }, {
    "id" : "ideFeaturesTrainer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#ide_features}", "start.swift.refactorings.{enum#ide_features}", "start.swift.{enum#ide_features}", "start.swift.navigation.{enum#ide_features}", "start.swift.editorbasics.{enum#ide_features}", "start.swift.codegeneration.{enum#ide_features}", "start.swift.codeassistance.{enum#ide_features}", "start.{enum#ide_features}", "start.refactorings.{enum#ide_features}", "start.navigation.{enum#ide_features}", "start.codeassistance.{enum#ide_features}", "passed.swift.navigation.{enum#ide_features}", "passed.swift.editorbasics.{enum#ide_features}", "passed.swift.codeassistance.{enum#ide_features}", "passed.{enum#ide_features}", "passed.refactorings.{enum#ide_features}", "passed.navigation.{enum#ide_features}", "passed.codeassistance.{enum#ide_features}", "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#action_id}" ],
        "completed_count" : [ "{regexp#integer}" ],
        "course_size" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ],
        "feedback_entry_place" : [ "{enum:WELCOME_SCREEN|LEARNING_PROJECT|ANOTHER_PROJECT}" ],
        "feedback_experienced_user" : [ "{enum#boolean}" ],
        "feedback_has_been_sent" : [ "{enum#boolean}" ],
        "feedback_likeness_answer" : [ "{enum:NO_ANSWER|LIKE|DISLIKE}" ],
        "feedback_opened_via_notification" : [ "{enum#boolean}" ],
        "filename" : [ "{util#tip_info}" ],
        "group_name" : [ "{enum:TUTORIALS|PROJECTS}" ],
        "group_state" : [ "{enum:expanded|collapsed}" ],
        "input_event" : [ "{util#shortcut}" ],
        "keymap_scheme" : [ "{util#keymap_scheme}" ],
        "language" : [ "{enum:java|go|ruby|swift|html|objectivec|javascript|python}", "{util#language}" ],
        "last_build_learning_opened" : [ "{regexp#version}" ],
        "learn_opening_way" : [ "{enum:LEARN_IDE|ONBOARDING_PROMOTER}" ],
        "lesson_id" : [ "{util#lesson_id}" ],
        "module_name" : [ "{util#module_name}" ],
        "new_lessons_count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "problem" : [ "{enum:NO_SDK_CONFIGURED}" ],
        "progress_percentage" : [ "{regexp#integer}" ],
        "reason" : [ "{enum:CLOSE_PROJECT|RESTART|CLOSE_FILE|OPEN_MODULES|OPEN_NEXT_OR_PREV_LESSON}", "{enum:EXIT_LINK}" ],
        "shortcut" : [ "{util#shortcut_or_none}" ],
        "show_it" : [ "{enum#boolean}" ],
        "starting_way" : [ "{enum:NEXT_BUTTON|PREV_BUTTON|RESTART_BUTTON|RESTORE_LINK|ONBOARDING_PROMOTER|LEARN_TAB|TIP_AND_TRICK_PROMOTER}", "{enum:NO_SDK_RESTART}" ],
        "task_id" : [ "{util#task_id}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "start", "passed", "group_event", "start_module_action", "progress", "expand_welcome_screen", "shortcut_clicked", "restore", "learn_project_opened_first_time", "non_learning_project_opened", "stopped", "new_lessons_notification_shown", "show_new_lessons", "need_show_new_lessons_notifications", "lesson_opened_from_tip", "help_link_clicked", "lesson_link_clicked_from_tip", "onboarding_feedback_notification_shown", "onboarding_feedback_dialog_result", "internal_problem" ],
        "ide_features" : [ "rename", "extract.variable", "extract.method", "extract.closure", "rdt.test", "rdt.run", "rdt.debug", "toolwindows", "search", "code", "selection", "multipleselections", "move", "duplicate", "deleteline", "commentline", "collapse", "completions.basiccompletion", "quickfixes", "overrideimplement", "generate", "createfromusage", "quickpopups", "codeformatting", "smarttypecompletion", "select", "refactoringbasics", "extractvariablefield", "extractmethod", "postfixcompletion", "nextpreviousoccurrences", "jumptosource", "filestructure", "declarationimplementation", "ideactions", "hippiecompletion", "editorbasics.deleteline", "declarationandusages", "completionwithtab", "completions.statementcompletion", "completions.completionwithtab", "parameterinfo", "editorcodingassistance", "classsearch", "basiccompletion", "actions", "swift.completions.basiccompletion", "statementcompletion" ]
      }
    }
  }, {
    "id" : "import.old.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:import.dialog.shown|import.initially}" ],
      "event_data" : {
        "config_folder_exists" : [ "{enum#boolean}" ],
        "initial_import_scenario" : [ "{enum:CLEAN_CONFIGS|IMPORTED_FROM_PREVIOUS_VERSION|IMPORTED_FROM_OTHER_PRODUCT|IMPORTED_FROM_CLOUD|CONFIG_DIRECTORY_NOT_FOUND|SHOW_DIALOG_NO_CONFIGS_FOUND|SHOW_DIALOG_CONFIGS_ARE_TOO_OLD|SHOW_DIALOG_REQUESTED_BY_PROPERTY|IMPORT_SETTINGS_ACTION|RESTORE_DEFAULT_ACTION}" ],
        "selected" : [ "{enum#_}" ]
      },
      "enums" : {
        "_" : [ "FROM_PREVIOUS", "FROM_CUSTOM", "DO_NOT_IMPORT", "OTHER", "NOT_INITIALIZED" ]
      }
    }
  }, {
    "id" : "indexing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|stage|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TERMINATED|FINISHED}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "indexing.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started}" ],
      "event_data" : {
        "average_content_loading_speed_bps" : [ "{regexp#integer}" ],
        "average_content_loading_speeds_by_file_type.average_content_loading_speed_for_file_type_bps" : [ "{regexp#integer}" ],
        "average_content_loading_speeds_by_file_type.file_type" : [ "{util#file_type}" ],
        "indexing_session_id" : [ "{regexp#integer}" ],
        "indexing_time" : [ "{regexp#integer}" ],
        "is_full" : [ "{enum#boolean}" ],
        "number_of_file_providers" : [ "{regexp#integer}" ],
        "number_of_files_indexed_by_extensions_during_scan" : [ "{regexp#integer}" ],
        "number_of_files_indexed_by_extensions_with_loading_content" : [ "{regexp#integer}" ],
        "number_of_files_indexed_with_loading_content" : [ "{regexp#integer}" ],
        "number_of_scanned_files" : [ "{regexp#integer}" ],
        "scanning_time" : [ "{regexp#integer}" ],
        "total_time" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ]
      },
      "enums" : {
        "__type" : [ "full_forced", "full_on_project_open", "full", "partial_forced", "partial", "refresh" ]
      }
    }
  }, {
    "id" : "inlay.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.options|global.inlays.settings|language.inlays.settings|model.inlays.settings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_globally" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "model" : [ "{enum#__model}", "{enum:vcs.code.vision|references|inheritors|problems}", "{enum:kotlin.values.hints}", "{enum:go.inlays.display.constant.definition}", "{enum:MarkdownTableInlayProviderSettingsKey|chain.hints}" ],
        "option_id" : [ "{enum#__option_id}", "{enum:ruby.parameter.name.reflected.in.method.name|kotlin.values.ranges}" ],
        "option_value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__model" : [ "ts.enum.hints", "annotation.hints", "JavaLens", "js.chain.hints", "ts.chain.hints", "composer.package.version.hints", "groovy.parameters.hints", "chain.hints", "ts.type.hints", "js.type.hints", "parameter.hints.old", "return.values.hints", "KotlinLambdasHintsProvider", "KotlinReferencesTypeHintsProvider", "docker.inlay.hints", "kotlin.call.chains.hints", "RelatedProblems", "groovy.implicit.null.argument.hint", "kotlin.lambdas.hints", "oc.type.hints", "kotlin.references.types.hints", "vcs.code.author", "tms.local.md.hints", "draft.inlay.hints", "MethodChainsInlayProvider", "sql.join.cardinality.hints", "microservices.url.path.inlay.hints", "CodeVision", "java.implicit.types", "kotlin.ranges.hints", "groovy.variable.type.hints", "rbs.ruby.return.type.hints", "rbs.ruby.container.type.hints", "rbs.ruby.constant.type.hints", "rbs.ruby.parameter.type.hints", "rbs.ruby.attribute.type.hints", "rbs.ruby.global.variable.type.hints" ],
        "__option_id" : [ "js.param.hints.show.names.for.all.args", "vuejs.show.names.for.filters", "inheritors", "java.clear.expression.type", "variables.and.fields", "ruby.show.param.grouping", "js.only.show.names.for.tagged", "ruby.non.literals", "inferred.annotations", "non.paren.single.param", "js.only.show.names.for.pipes", "oc.clangd.namehints.construct.expr", "ruby.method.name.contains.parameter.name", "usages", "oc.clangd.namehints.non.const.references", "php.pass.by.reference", "java.method.name.contains.parameter.name", "java.multiple.params.same.type", "inferred.parameter.types", "java.enums", "js.only.show.names.for.all.args", "php.show.names.for.all.args", "oc.clangd.namehints.enums", "java.build.like.method", "function.returns", "java.new.expr", "java.simple.sequentially.numbered", "vuejs.show.names.for.all.args", "parameters.in.parens", "oc.clangd.namehints.macro.expr", "js.param.hints.show.names.for.tagged", "type.parameter.list", "external.annotations", "angular.show.names.for.all.args", "angular.show.names.for.pipes", "SHOW_PROPERTY_HINT", "SHOW_LOCAL_VARIABLE_HINT", "SHOW_FUNCTION_HINT", "SHOW_PARAMETER_TYPE_HINT", "SHOW_PARAMETER_HINT", "SHOW_LAMBDA_RETURN_EXPRESSION", "SHOW_LAMBDA_IMPLICIT_PARAMETER_RECEIVER", "SHOW_SUSPENDING_CALL", "R_HINT_OPTION_WRAP_DOTS", "sql.show.column.names.in.insert.values", "sql.show.column.names.in.select", "sql.show.column.names.for.asterisk", "implicit.null.result", "related.problems", "hints.type.property", "hints.type.variable", "hints.type.function.return", "hints.type.function.parameter", "hints.lambda.return", "hints.lambda.receivers.parameters", "go.struct.unnamed.struct.fields", "go.return.parameters", "sql.show.column.names.for.set.operations", "inner.join", "left.join", "full.join", "right.join" ]
      }
    }
  }, {
    "id" : "inspection.widget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:highlight.level.changed}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:Errors_Only|None|All_Problems}", "{enum:SYNTAX|NONE|ALL}", "{enum:Syntax|Essential}" ]
      }
    }
  }, {
    "id" : "inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#tool}", "{enum#__event_id}" ],
      "event_data" : {
        "amount" : [ "{regexp#integer}" ],
        "default" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "inspection_enabled" : [ "{enum#boolean}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "locked" : [ "{enum#boolean}" ],
        "option_index" : [ "{regexp#integer}" ],
        "option_name" : [ "{util#plugin_info}" ],
        "option_type" : [ "{enum:integer|boolean}" ],
        "option_value" : [ "{enum#boolean}", "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_level" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:All|All Changed Files|Generated Files|Project Files and Vendor|Non-Project Files|Project Non-Source Files|Open Files|Project Files|Production|Scratches and Consoles|Project Source Files|Tests}", "{enum:custom}" ],
        "severity" : [ "{enum:INFORMATION|SERVER PROBLEM|INFO|WEAK WARNING|WARNING|ERROR}", "{enum:custom}", "{enum:TYPO}" ]
      },
      "enums" : {
        "__event_id" : [ "not.default.state", "setting.non.default.state", "used.profile", "profiles", "not.default.scope.and.severity" ]
      }
    }
  }, {
    "id" : "intellij.cds",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:building.cds.started|building.cds.finished|running.with.cds}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "running_with_archive" : [ "{enum#boolean}" ],
        "status" : [ "{enum#__status}", "{enum:enabled|disabled}", "{enum#boolean}" ],
        "uptime_millis" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__status" : [ "success", "cancelled", "terminated-by-user", "plugins-changed", "failed" ]
      }
    }
  }, {
    "id" : "intentions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum:called|shown}" ],
      "event_data" : {
        "id" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "introduce.parameter.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|started|settingsOnShow}" ],
      "event_data" : {
        "delegate" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "replaceAllOccurrences" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "introduce.variable.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|settingsOnShow|settingsChanged}" ],
      "event_data" : {
        "changed" : [ "{enum#boolean}" ],
        "final" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "varType" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.compiler.settings.project",
    "builds" : [ {
      "from" : "191.6841"
    } ],
    "rules" : {
      "event_id" : [ "{enum#setting}", "{enum#setting}.{enum#state}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "setting" : [ "REBUILD_ON_DEPENDENCY_CHANGE", "DISPLAY_NOTIFICATION_POPUP", "PARALLEL_COMPILATION", "COMPILE_AFFECTED_UNLOADED_MODULES_BEFORE_COMMIT", "MAKE_PROJECT_ON_SAVE", "AUTO_SHOW_ERRORS_IN_EDITOR", "CLEAR_OUTPUT_DIRECTORY" ]
      }
    }
  }, {
    "id" : "java.debugger.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:attach.inlay|create.exception.breakpoint.inlay}" ]
    }
  }, {
    "id" : "java.extract.method",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed}" ],
      "event_data" : {
        "annotated" : [ "{enum#boolean}" ],
        "constructor" : [ "{enum#boolean}" ],
        "finished" : [ "{enum#boolean}" ],
        "folded" : [ "{enum#boolean}" ],
        "make_varargs" : [ "{enum#boolean}" ],
        "parameters_count" : [ "{regexp#integer}" ],
        "parameters_removed" : [ "{enum#boolean}" ],
        "parameters_renamed" : [ "{enum#boolean}" ],
        "parameters_reordered" : [ "{enum#boolean}" ],
        "parameters_type_changed" : [ "{enum#boolean}" ],
        "preview_used" : [ "{enum#boolean}" ],
        "return_changed" : [ "{enum#boolean}" ],
        "static" : [ "{enum#boolean}" ],
        "static_pass_fields_available" : [ "{enum#boolean}" ],
        "visibility_changed" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchForAccessors" : [ "{enum#boolean}" ],
        "searchForBaseAccessors" : [ "{enum#boolean}" ],
        "searchForBaseMethods" : [ "{enum#boolean}" ],
        "searchInOverriding" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}", "{enum:Current File}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "find.class.started", "find.method.started", "find.package.started", "find.throw.started", "find.variable.started" ]
      }
    }
  }, {
    "id" : "java.language",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_JDK_VERSION|MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "ea" : [ "{enum#boolean}" ],
        "feature" : [ "{regexp#integer}" ],
        "minor" : [ "{regexp#integer}" ],
        "preview" : [ "{enum#boolean}" ],
        "update" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#integer}" ],
        "wsl" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "location" : [ "{enum:class|method}" ]
      },
      "enums" : {
        "__event_id" : [ "setting.clicked", "usages.clicked", "implementations.clicked", "related.problems.clicked", "code.author.clicked" ]
      }
    }
  }, {
    "id" : "java.module.language.level",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "preview" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "java.refactoring.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "javadoc" : [ "{enum:as_is|copy|move|unknown}" ],
        "replace_fields_with_getters" : [ "{enum:none|inaccessible|all|unknown}" ],
        "visibility" : [ "{enum:public|protected|packageLocal|private|EscalateVisible|unknown}" ]
      },
      "enums" : {
        "__event_id" : [ "introduce.local.use.var", "encapsulate.fields.use.accessors", "inline.class.search.in.non.java", "introduce.constant.visibility", "introduce.parameter.use.initializer", "inline.field.this.only.choice", "inline.class.search.in.comments", "introduce.parameter.create.finals", "rename.search.for.text.for.method", "pull.up.members.javadoc", "rename.auto.overloads", "inline.method.this.only.choice", "extract.superclass.javadoc", "inheritance.to.delegation.delegate.other", "inline.local.this.only.choice", "inline.super.class.this.only.choice", "rename.search.for.text.for.package", "rename.search.for.text.for.field", "rename.search.for.text.for.variable", "rename.search.in.comments.for.field", "introduce.field.visibility", "rename.search.in.comments.for.class", "introduce.parameter.replace.fields.with.getters", "rename.search.for.text.for.class", "rename.auto.tests", "introduce.local.create.finals", "inline.field.all.and.keep.choice", "rename.search.in.comments.for.method", "move.search.in.comments", "rename.search.in.comments.for.variable", "move.search.for.text", "introduce.parameter.delete.local", "introduce.constant.replace.all", "rename.auto.inheritors", "extract.interface.javadoc", "rename.search.in.comments.for.package", "rename.auto.variables", "inline.method.all.and.keep.choice" ]
      }
    }
  }, {
    "id" : "java.smart.enter.fixer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:fixer_used}" ],
      "event_data" : {
        "fixer_used" : [ "{enum:LiteralFixer|MethodCallFixer|IfConditionFixer|ForStatementFixer|TernaryColonFixer|WhileConditionFixer|CatchDeclarationFixer|SwitchExpressionFixer|SwitchLabelColonFixer|DoWhileConditionFixer|BlockBraceFixer|MissingIfBranchesFixer|MissingWhileBodyFixer|MissingTryBodyFixer|MissingSwitchBodyFixer|MissingCatchBodyFixer|MissingSynchronizedBodyFixer|MissingForBodyFixer|MissingForeachBodyFixer|ParameterListFixer|MissingCommaFixer|MissingMethodBodyFixer|MissingClassBodyFixer|MissingReturnExpressionFixer|MissingThrowExpressionFixer|ParenthesizedFixer|SemicolonFixer|MissingArrayInitializerBraceFixer|MissingArrayConstructorBracketFixer|EnumFieldFixer}", "{enum:MissingLoopBodyFixer}" ]
      }
    }
  }, {
    "id" : "javaLibraryJars",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#libraries}", "{enum:used.library}" ],
      "event_data" : {
        "library" : [ "{enum#libraries}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "libraries" : [ "spring-integration", "spring-integration-amqp", "spring-amqp", "spring-osgi", "spring-data-commons", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-solr", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-core", "spring-boot", "spring-ws", "spring-mvc", "spring-security", "spring-batch", "spring-security-oauth2", "spring-security-oauth", "spring-webflow", "apache-tiles", "thymeleaf", "velocity", "freemarker", "springOldJavaConfig", "spring-cloud-commons", "gorm", "groovy", "grails", "micronaut", "akka-java", "vertx", "spark-java", "dropwizard", "helidon", "quarkus", "ok3-http", "apache-http", "unirest", "retrofit", "spring-cloud", "spring-webflux", "reactor", "rx-java", "guice", "drools", "ktor", "cucumber", "selenium", "selenide", "serenity", "appium", "allure2", "allure1", "jdi-light", "htmlelements", "atlas", "geb", "webtau-http", "webtau-browser", "jbehave", "robotframework", "restassured", "karate", "citrus", "eureka", "consul", "zookeeper", "zuul", "hystrix", "apache-dubbo", "grpc", "apache-thrift", "javalin", "armeria", "mybatis", "jooq", "junit4", "junit5", "testng", "kafka-client", "activemq-client", "rabbitmq-client", "amazon-sqs", "tapestry5", "gwt", "struts2", "jsf", "vaadin-flow", "openfeign", "jhipster", "apache-spark", "apache-flink", "fluentlenium", "testcontainers", "blade", "javax-cdi", "jakarta-cdi", "javax-jms", "jakarta-jms", "javax-jpa", "jakarta-jpa", "javax-rs", "jakarta-rs", "r2dbc", "osgi", "microprofile-config", "kotlin", "kodein", "http4k", "rxkotlin", "scala", "play2", "lagom-java", "lagom-scala", "kotless", "spek", "koin", "gauge-java", "apache-deltaspike", "apache-deltaspike-data", "graphql-java", "hexagonkt", "jdbi", "jooby", "optaplanner", "flowable-bpm", "activiti-bpm", "camunda-bpm", "jbpm", "apache-ignite", "hazelcast", "hazelcast-jet", "coherence", "debezium", "streamex", "json-path", "hibernate", "eclipselink-jpa", "arquillian", "flyway", "liquibase", "jodd-db", "querydsl", "apache-camel", "rsocket-java", "google-http-java-client", "google-cloud-pubsub", "springfox", "apache-rocketmq", "opentracing", "zipkin2", "jaeger", "lombok", "weld", "jakarta-jsf", "javax-ejb", "jakarta-ejb", "javax-websocket", "jakarta-websocket", "javax-ws", "jakarta-ws", "javax-batch", "jakarta-batch", "javax-validation", "jakarta-validation", "kotest", "datanucleus-jpa", "openjpa", "wiremock", "easymock", "jmockit", "mockito", "spock", "hibernate-validator", "apache-bval", "spring-kafka", "spring-rabbitmq", "spring-session", "jackson", "gson", "micrometer", "mapstruct", "swagger-v2", "swagger-v3", "apache-shiro", "arrowkt", "scalatest", "jetbrains-annotations", "playwright-java", "kotlinx-coroutines", "kotlinx-serialization", "exposed", "ktorm", "tornadofx", "javafx", "mockserver", "scalaz", "scalamock", "scalacheck", "specs2", "utest", "munit", "zio-test", "akka-http", "netty", "scalatra", "unfiltered", "sttp", "http4s", "twitter-util", "akka-actor", "shapeless", "finagle", "cats", "breeze", "slick", "fs2", "monix", "zio", "kotlinx-datetime", "spring-cloud-gateway", "spring-data-r2dbc", "rsocket", "quarkus-qute", "smallrye-mutiny", "opentelemetry", "openjfx", "protobuf", "spring-data-rest", "hibernate-reactive", "hibernate-envers", "rx-java3", "spring-cloud-kubernetes", "spring-cloud-openfeign", "spring-cloud-retrofit", "spring-cloud-stream", "spring-websocket", "spring-graphql", "jakarta-nosql" ]
      }
    }
  }, {
    "id" : "jdk.downloader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected|download|detected}" ],
      "event_data" : {
        "product" : [ "{enum:AdoptOpenJDK (HotSpot)|AdoptOpenJDK (OpenJ9)|Eclipse Temurin|IBM Semeru|Amazon Corretto|GraalVM|IBM JDK|JetBrains Runtime|BellSoft Liberica|Oracle OpenJDK|SAP SapMachine|Azul Zulu|Unknown}" ],
        "success" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "jps.cache",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:download.through.notification|caches.downloaded}" ],
      "event_data" : {
        "download_binary_size" : [ "{regexp#integer}" ],
        "download_cache_size" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "json.schema",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:completion.by.schema.invoked}" ],
      "event_data" : {
        "schemaKind" : [ "{enum:builtin|schema|user|remote}" ]
      },
      "enums" : {
        "_" : [ "json.schema.schema.completion", "json.schema.builtin.completion", "json.schema.user.completion", "json.schema.remote.completion" ]
      }
    }
  }, {
    "id" : "keymaps.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#keymaps}", "Custom_(Based_on_{enum#keymaps}_keymap)", "Custom_(Based_on_{enum#keymaps})", "{enum:ide.keymap}" ],
      "event_data" : {
        "based_on" : [ "{enum#keymaps}" ],
        "keymap_name" : [ "{enum#keymaps}" ]
      }
    }
  }, {
    "id" : "kotlin.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:code.author.clicked|usages.clicked|inheritors.clicked|setting.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:class|interface|function|property}" ]
      }
    }
  }, {
    "id" : "kotlin.gradle.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "android_gradle_plugin_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "artifacts_download_speed" : [ "{regexp#integer}" ],
        "build_failed" : [ "{enum#boolean}" ],
        "build_finish_time" : [ "{regexp#integer}" ],
        "build_src_count" : [ "{regexp#integer}" ],
        "build_src_exists" : [ "{enum#boolean}" ],
        "compilation_started" : [ "{enum#boolean}" ],
        "configuration_api_count" : [ "{regexp#integer}" ],
        "configuration_compile_count" : [ "{regexp#integer}" ],
        "configuration_implementation_count" : [ "{regexp#integer}" ],
        "configuration_runtime_count" : [ "{regexp#integer}" ],
        "cpu_number_of_cores" : [ "{regexp#integer}" ],
        "debugger_enabled" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_all_open" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_jpa_support" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_no_arg" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_sam_with_receiver" : [ "{enum#boolean}" ],
        "enabled_dagger" : [ "{enum#boolean}" ],
        "enabled_databinding" : [ "{enum#boolean}" ],
        "enabled_hmpp" : [ "{enum#boolean}" ],
        "enabled_kapt" : [ "{enum#boolean}" ],
        "executed_from_idea" : [ "{enum#boolean}" ],
        "gradle_build_cache_used" : [ "{enum#boolean}" ],
        "gradle_build_duration" : [ "{regexp#integer}" ],
        "gradle_build_number_in_current_daemon" : [ "{regexp#integer}" ],
        "gradle_daemon_heap_size" : [ "{regexp#integer}" ],
        "gradle_execution_duration" : [ "{regexp#integer}" ],
        "gradle_number_of_incremental_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_unconfigured_tasks" : [ "{regexp#integer}" ],
        "gradle_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "gradle_worker_api_used" : [ "{enum#boolean}" ],
        "ides_installed" : [ "{regexp#all_ides}" ],
        "js_compiler_mode" : [ "{regexp#js_compiler_mode}" ],
        "js_generate_executable_default" : [ "{regexp#boolean_set}" ],
        "js_generate_externals" : [ "{enum#boolean}" ],
        "js_ir_incremental" : [ "{enum#boolean}" ],
        "js_klib_incremental" : [ "{enum#boolean}" ],
        "js_output_granularity" : [ "{enum:whole_program|per_module|per_file}", "{regexp:(whole_program|per_module|per_file)}" ],
        "js_property_lazy_initialization" : [ "{regexp#boolean_set}" ],
        "js_source_map" : [ "{enum#boolean}" ],
        "js_target_mode" : [ "{regexp#js_target_mode}" ],
        "jvm_compiler_ir_mode" : [ "{enum#boolean}" ],
        "jvm_defaults" : [ "{regexp#jvm_defaults}" ],
        "kotlin_api_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_compiler_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_coroutines_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_kts_used" : [ "{enum#boolean}" ],
        "kotlin_language_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_official_codestyle" : [ "{enum#boolean}" ],
        "kotlin_progressive_mode" : [ "{enum#boolean}" ],
        "kotlin_reflect_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_serialization_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "kotlin_stdlib_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "library_gwt_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "library_hibernate_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "library_spring_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "library_vaadin_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}" ],
        "maven_publish_executed" : [ "{enum#boolean}" ],
        "mpp_platforms" : [ "{regexp#mpp_platforms}" ],
        "number_of_subprojects" : [ "{regexp#integer}" ],
        "os_type" : [ "{regexp:(Windows|Windows |Mac|Linux|FreeBSD|Solaris|Other|Mac OS X)\\d*}" ],
        "plugin_version" : [ "{regexp#plugin_version}" ],
        "project_path" : [ "{regexp#hash}" ],
        "statistics_collect_metrics_overhead" : [ "{regexp#integer}" ],
        "statistics_visit_all_projects_overhead" : [ "{regexp#integer}" ],
        "tests_executed" : [ "{enum#boolean}" ],
        "time_between_builds" : [ "{regexp#integer}" ],
        "use_fir" : [ "{regexp#boolean_set}" ],
        "use_old_backend" : [ "{regexp#boolean_set}" ]
      },
      "enums" : {
        "__event_id" : [ "Environment", "Kapt", "CompilerPlugins", "MPP", "JS", "Libraries", "GradleConfiguration", "ComponentVersions", "KotlinFeatures", "GradlePerformance", "UseScenarios", "All" ]
      },
      "regexps" : {
        "all_ides" : "^((AS|OC|CL|IU|IC|WC)_?)+$",
        "boolean_set" : "^((true|false)_?)+$",
        "js_compiler_mode" : "^((ir|legacy|both|UNKNOWN)_?)+$",
        "js_target_mode" : "^((both|browser|nodejs|none)_?)+$",
        "jvm_defaults" : "^((disable|enable|compatibility|all|all-compatibility)_?)+$",
        "mpp_platforms" : "^((common|metadata|jvm|js|arm32|arm64|mips32|mipsel32|x64|android|androidApp|androidNativeArm|androidNativeArm32|android_arm32|androidNativeArm64|android_arm64|androidNative|androidNativeX86|androidNativeX64|iosArm|iosArm32|ios_arm32|iosArm64|ios_arm64|ios|ios_x64|iosSim|iosX64|watchos|watchosArm32|watchosArm64|watchosX86|tvos|tvosArm64|tvosX64|linux|linuxArm32Hfp|linux_arm32_hfp|linuxMips32|linux_mips32|linuxMipsel32|linux_mipsel32|linuxX64|linux_x64|macos|osx|macosX64|macos_x64|mingw|mingwX64|mingw_x64|mingwX86|mingw_X86|wasm32|wasm)_?)+$",
        "plugin_version" : "(\\d+-)?\\d(\\.\\d)?\\.\\d{1,3}(-(dev|eap|release|M\\d?|RC\\d?))+-(\\d+-)?(AppCode|CLion|IJ|Studio|AS)[0-9\\-\\.]+"
      }
    }
  }, {
    "id" : "kotlin.gradle.target",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "plugin_version" : [ "{regexp#kotlin_version}", "@snapshot@" ]
      },
      "enums" : {
        "_" : [ "MPP.common", "MPP.common.metadata", "MPP.native", "MPP.native.androidNativeArm32", "MPP.native.androidNativeArm64", "MPP.native.macosX64", "MPP.native.linuxMips32", "MPP.native.linuxMipsel32", "MPP.native.linuxArm32Hfp", "MPP.native.linuxArm64", "MPP.native.linuxX64", "MPP.native.iosArm32", "MPP.native.iosArm64", "MPP.native.iosX64", "MPP.native.wasm32", "MPP.native.mingwX86", "MPP.native.mingwX64", "MPP.native.zephyrStm32f4Disco", "MPP.androidJvm", "MPP.androidJvm.android", "MPP.js", "MPP.js.js", "MPP.jvm", "MPP.jvm.jvm", "MPP.jvm.jvmWithJava", "kotlin-platform-common", "kotlin-platform-js", "kotlin-platform-jvm", "kotlin-android", "unknown" ]
      },
      "regexps" : {
        "kotlin_version" : "(\\d+-)?\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+"
      }
    }
  }, {
    "id" : "kotlin.ide.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Evaluation}" ],
      "event_data" : {
        "contextLanguage" : [ "{enum:Java|Kotlin|Other}" ],
        "evaluationType" : [ "{enum#__evaluationType}" ],
        "evaluator" : [ "{enum:Bytecode|Eval4j}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "status" : [ "{enum#__status}" ]
      },
      "enums" : {
        "__evaluationType" : [ "WATCH", "WINDOW", "POPUP", "FROM_JAVA", "UNKNOWN" ],
        "__status" : [ "Success", "DebuggerNotAttached", "DumbMode", "NoFrameProxy", "ThreadNotAvailable", "ThreadNotSuspended", "ProcessCancelledException", "InterpretingException", "EvaluateException", "SpecialException", "GenericException", "CannotFindVariable", "CoroutineContextUnavailable", "ParameterNotCaptured", "InsideDefaultMethod", "BackingFieldNotFound", "SuspendCall", "CrossInlineLambda", "Eval4JAbnormalTermination", "Eval4JUnknownException", "ExceptionFromEvaluatedCode", "ErrorElementOccurred", "FrontendException", "BackendException", "ErrorsInCode" ]
      }
    }
  }, {
    "id" : "kotlin.ide.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Completion|AddValToDataClassParameters}" ],
      "event_data" : {
        "choice_at_position" : [ "{regexp#integer}" ],
        "completion_event" : [ "{enum:chosen|not_chosen}" ],
        "completion_type" : [ "{enum:BASIC|SMART}" ],
        "file_type" : [ "{enum:KT|GRADLEKTS|KTS}" ],
        "finish_reason" : [ "{enum:DONE|CANCELLED|HIDDEN|INTERRUPTED}" ],
        "invocation_count" : [ "{regexp#integer}" ],
        "is_before_typing" : [ "{enum#boolean}" ],
        "is_val_added" : [ "{enum#boolean}" ],
        "lagging" : [ "{regexp#integer}" ],
        "on_symbol" : [ "{enum:comma|bracket|unknown}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "window_appearance_time" : [ "{regexp#integer}" ],
        "window_population_time" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.formatter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settings}" ],
      "event_data" : {
        "defaults" : [ "{enum:KOTLIN_OFFICIAL|KOTLIN_OLD_DEFAULTS|ide_defaults}" ],
        "kind" : [ "{enum#__kind}", "{enum:PROJECT_OFFICIAL_KOTLIN_WITH_CUSTOM|IDEA_OBSOLETE_KOTLIN_WITH_CUSTOM|PROJECT_OFFICIAL_KOTLIN}", "{enum:PROJECT_WITH_BROKEN_OFFICIAL_KOTLIN|IDEA_WITH_BROKEN_OBSOLETE_KOTLIN|PROJECT_WITH_BROKEN_OBSOLETE_KOTLIN|IDEA_WITH_BROKEN_OFFICIAL_KOTLIN}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__kind" : [ "IDEA_DEFAULT", "IDEA_CUSTOM", "IDEA_KOTLIN_WITH_CUSTOM", "IDEA_KOTLIN", "PROJECT_DEFAULT", "PROJECT_CUSTOM", "PROJECT_KOTLIN_WITH_CUSTOM", "PROJECT_KOTLIN", "IDEA_OFFICIAL_DEFAULT", "IDEA_OBSOLETE_KOTLIN", "IDEA_OFFICIAL_KOTLIN_WITH_CUSTOM", "PROJECT_OFFICIAL_DEFAULT", "PROJECT_OBSOLETE_KOTLIN", "PROJECT_OBSOLETE_KOTLIN_WITH_CUSTOM", "IDEA_OFFICIAL_KOTLIN" ]
      }
    }
  }, {
    "id" : "kotlin.ide.gradle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Import}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "target" : [ "{enum#__target}" ]
      },
      "enums" : {
        "__target" : [ "kotlin-android", "kotlin-platform-common", "kotlin-platform-js", "kotlin-platform-jvm", "MPP.androidJvm", "MPP.androidJvm.android", "MPP.common", "MPP.common.metadata", "MPP.js", "MPP.js.js", "MPP.jvm", "MPP.jvm.jvm", "MPP.jvm.jvmWithJava", "MPP.native", "MPP.native.androidNativeArm32", "MPP.native.androidNativeArm64", "MPP.native.iosArm32", "MPP.native.iosArm64", "MPP.native.iosX64", "MPP.native.linuxArm32Hfp", "MPP.native.linuxArm64", "MPP.native.linuxMips32", "MPP.native.linuxMipsel32", "MPP.native.linuxX64", "MPP.native.macosX64", "MPP.native.mingwX64", "MPP.native.mingwX86", "MPP.native.wasm32", "MPP.native.zephyrStm32f4Disco", "unknown" ]
      }
    }
  }, {
    "id" : "kotlin.ide.j2k",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Files|PSI_expression|Text_expression|Conversion}" ],
      "event_data" : {
        "Files_count" : [ "{regexp#integer}" ],
        "Is_new_J2K" : [ "{enum#boolean}" ],
        "Lines_count" : [ "{regexp#integer}" ],
        "Time" : [ "{regexp#integer}" ],
        "conversion_time" : [ "{regexp#integer}" ],
        "files_count" : [ "{regexp#integer}" ],
        "is_new_j2k" : [ "{enum#boolean}" ],
        "lines_count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "source_type" : [ "{enum:Files|PSI_expression|Text_expression}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.migrationTool",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Notification|Run}" ],
      "event_data" : {
        "old_api_version" : [ "{regexp#version_lang_api}" ],
        "old_language_version" : [ "{regexp#version_lang_api}" ],
        "old_stdlib_version" : [ "{regexp#version_stdlib}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "regexps" : {
        "version_lang_api" : "\\d\\.\\d",
        "version_stdlib" : "\\d\\.\\d\\.\\d{1,3}"
      }
    }
  }, {
    "id" : "kotlin.ide.new.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Created}" ],
      "event_data" : {
        "file_template" : [ "{enum#__file_template}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__file_template" : [ "Kotlin_Class", "Kotlin_File", "Kotlin_Interface", "Kotlin_Data_Class", "Kotlin_Enum", "Kotlin_Sealed_Class", "Kotlin_Annotation", "Kotlin_Object", "Kotlin_Scratch", "Kotlin_Script", "Kotlin_Worksheet" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "group" : [ "{enum:Java|Kotlin|Gradle}" ],
        "module_template" : [ "{enum:composeAndroid|composeDesktopTemplate|composeMppModule|consoleJvmApp|ktorServer|mobileMppModule|nativeConsoleApp|reactJsClient|simpleJsClient|simpleNodeJs|none}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "module_type" : [ "{enum:androidNativeArm32Target|androidNativeArm64Target|iosArm32Target|iosArm64Target|iosX64Target|iosTarget|linuxArm32HfpTarget|linuxMips32Target|linuxMipsel32Target|linuxX64Target|macosX64Target|mingwX64Target|mingwX86Target|nativeForCurrentSystem|jsBrowser|jsNode|commonTarget|jvmTarget|androidTarget|multiplatform|JVM_Module|android|IOS_Module|jsBrowserSinglePlatform|jsNodeSinglePlatform}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "project_modules_list" : [ "{enum#__project_modules_list}" ],
        "project_template" : [ "{enum#__project_template}", "{enum:reactApplication}", "{enum:multiplatformMobileApplicationUsingAppleGradlePlugin}", "{enum:multiplatformMobileApplicationUsingHybridProject}" ],
        "session_id" : [ "{regexp#integer}" ],
        "setting_id" : [ "{enum:buildSystem.type|testFramework|targetJvmVersion|androidPlugin|serverEngine|js.project.kind|js.compiler|projectTemplates.template|module.template|jvm.javaSupport|js.cssSupport|js.useStyledComponents|js.useReactRouterDom|js.useReactRedux}" ],
        "setting_value" : [ "{enum#__setting_value}", "{enum:multiplatformMobileApplicationUsingAppleGradlePlugin}", "{enum:multiplatformMobileApplicationUsingHybridProject}" ]
      },
      "enums" : {
        "__event_id" : [ "project_created", "wizard_opened_by_hyperlink", "module_template_created", "module_created", "prev_clicked", "next_clicked", "jdk_changed", "setting_value_changed", "module_removed" ],
        "__project_modules_list" : [ "androidNativeArm64Target", "linuxMipsel32Target", "android", "linuxX64Target", "mingwX64Target", "jvmTarget", "JVM_Module", "iosArm64Target", "linuxMips32Target", "mingwX86Target", "jsNodeSinglePlatform", "commonTarget", "multiplatform", "jsBrowserSinglePlatform", "iosArm32Target", "iosX64Target", "jsBrowser", "macosX64Target", "IOS_Module", "jsNode", "androidNativeArm32Target", "iosTarget", "linuxArm32HfpTarget", "nativeForCurrentSystem", "androidTarget" ],
        "__project_template" : [ "JVM_|_IDEA", "JS_|_IDEA", "Kotlin/JVM", "Kotlin/JS", "Kotlin/JS_for_browser", "Kotlin/JS_for_Node.js", "Kotlin/Multiplatform_as_framework", "Kotlin/Multiplatform", "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "nodejsApplication", "none", "_IDEA", "JS_", "JVM_", "composeDesktopApplication", "composeMultiplatformApplication" ],
        "__setting_value" : [ "GradleKotlinDsl", "GradleGroovyDsl", "Jps", "Maven", "NONE", "JUNIT4", "JUNIT5", "TEST_NG", "JS", "COMMON", "JVM_1_6", "JVM_1_8", "JVM_9", "JVM_10", "JVM_11", "JVM_12", "JVM_13", "APPLICATION", "LIBRARY", "Netty", "Tomcat", "Jetty", "IR", "LEGACY", "BOTH", "JVM_|_IDEA", "JS_|_IDEA", "Kotlin/JVM", "Kotlin/JS", "Kotlin/JS_for_browser", "Kotlin/JS_for_Node.js", "Kotlin/Multiplatform_as_framework", "Kotlin/Multiplatform", "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "nodejsApplication", "reactApplication", "composeDesktopApplication", "composeMultiplatformApplication", "none", "composeAndroid", "composeDesktopTemplate", "composeMppModule", "consoleJvmApp", "ktorServer", "mobileMppModule", "nativeConsoleApp", "reactJsClient", "simpleJsClient", "simpleNodeJs", "gradleKotlin", "gradleGroovy", "jps", "maven", "true", "false", "_IDEA", "JS_", "JVM_" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project_created|wizard_opened_by_hyperlink}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "project_template" : [ "{enum#__project_template}" ]
      },
      "enums" : {
        "__project_template" : [ "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "none" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.inline",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Launched}" ],
      "event_data" : {
        "element_type" : [ "{enum#__element_type}" ],
        "is_cross_lang" : [ "{enum#boolean}" ],
        "language_from" : [ "{util#lang}" ],
        "language_to" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__element_type" : [ "LAMBDA_EXPRESSION", "ANONYMOUS_FUNCTION", "LOCAL_VARIABLE", "PROPERTY", "TYPE_ALIAS", "UNKNOWN", "CONSTRUCTOR", "FUNCTION" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.move",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Finished}" ],
      "event_data" : {
        "are_settings_changed" : [ "{enum#boolean}" ],
        "destination" : [ "{enum:PACKAGE|FILE|DECLARATION}" ],
        "entity" : [ "{enum#__entity}" ],
        "lagging" : [ "{regexp#integer}" ],
        "number_of_entities" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "succeeded" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__entity" : [ "FUNCTIONS", "CLASSES", "MIXED", "MPPCLASSES", "MPPFUNCTIONS", "MPPMIXED", "PACKAGE", "FILES" ]
      }
    }
  }, {
    "id" : "kotlin.ide.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:newInference|scriptingAutoReloadEnabled|addUnambiguousImportsOnTheFly|optimizeImportsOnTheFly}" ],
      "event_data" : {
        "definition_name" : [ "{enum#__definition_name}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__definition_name" : [ "KotlinInitScript", "KotlinSettingsScript", "KotlinBuildScript", "MainKtsScript", "Kotlin_Script", "Script_definition_for_extension_scripts_and_IDE_console", "Space_Automation" ]
      }
    }
  }, {
    "id" : "kotlin.project.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Build}" ],
      "event_data" : {
        "isMPP" : [ "{enum#boolean}" ],
        "languageVersion" : [ "{regexp#float}" ],
        "platform" : [ "{enum:jvm|js|native|common}", "{enum:jvm|jvm.android|js|common|native.unknown|unknown|native.android_x64|native.android_x86|native.android_arm32|native.android_arm64|native.ios_arm32|native.ios_arm64|native.ios_x64|native.watchos_arm32|native.watchos_arm64|native.watchos_x86|native.watchos_x64|native.tvos_arm64|native.tvos_x64|native.linux_x64|native.mingw_x86|native.mingw_x64|native.macos_x64|native.linux_arm64|native.linux_arm32_hfp|native.linux_mips32|native.linux_mipsel32|native.wasm32}", "{enum:native.macos_arm64}", "{enum:native.ios_simulator_arm64|native.watchos_simulator_arm64|native.tvos_simulator_arm64}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "system" : [ "{enum:JPS|Maven|Gradle|unknown}" ]
      }
    }
  }, {
    "id" : "kubernetes.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:k8sVersion}" ],
      "event_data" : {
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "kubernetes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:navigation.gutter.label.container|inspection.remove.duplicate.envvar|completion.kind|completion.label.key}" ]
    }
  }, {
    "id" : "leftover.dirs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cleanup.complete|scan.scheduled|scan.started}" ],
      "event_data" : {
        "delay_days" : [ "{regexp#integer}" ],
        "groups" : [ "{regexp#integer}" ],
        "total_mb" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "libraryUsage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:library_used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "library_name" : [ "{enum#library_names}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "library_names" : [ "scalaz", "scalamock", "scalacheck", "specs2", "utest", "munit", "zio-test", "akka-http", "netty", "scalatra", "unfiltered", "sttp", "http4s", "twitter-util", "shapeless", "finagle", "cats", "breeze", "slick", "fs2", "monix", "zio", "micronaut", "akka-java", "vertx", "spark", "dropwizard", "helidon", "quarkus", "okhttp3", "apache-http", "unirest", "retrofit2", "spring-cloud", "spring-webflux", "reactor", "rxjava", "guice", "drools", "ktor", "cucumber", "selenium", "selenide", "serenity", "appium", "allure2", "allure1", "jdi-light", "htmlelements", "atlas", "geb", "webtau", "jbehave", "robotframework", "restassured", "karate", "citrus", "spring-integration", "spring-integration-amqp", "spring-amqp", "spring-webflow", "spring-osgi", "spring-data-commons", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-solr", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-core", "spring-boot", "spring-ws", "spring-web", "spring-security", "spring-batch", "spring-security-oauth2", "apache-tiles", "thymeleaf", "velocity", "freemarker", "gorm", "groovy", "grails", "eureka", "consul", "zookeeper", "zuul", "hystrix", "apache-dubbo", "apache-thrift", "javalin", "armeria", "mybatis", "jooq", "junit", "junit5", "testng", "kafka", "activemq", "rabbitmq", "aws-sqs", "tapestry5", "gwt", "struts2", "javax-jsf", "vaadin-flow", "openfeign", "jhipster", "apache-spark", "apache-flink", "fluentlenium", "testcontainers", "blade", "kotlin", "microprofile", "javax-cdi", "jakarta-cdi", "javax-jms", "jakarta-jms", "javax-jpa", "jakarta-jpa", "javax-rs", "jakarta-rs", "r2dbc", "osgi", "kodein", "http4k", "rxjava3", "rxkotlin", "scala", "play2", "lagom", "kotless", "spek", "koin", "gauge-java", "apache-deltaspike", "apache-deltaspike-data", "graphql-java", "hexagonkt", "jdbi", "jooby", "optaplanner", "flowable", "activiti", "camunda", "jbpm", "apache-ignite", "hazelcast", "coherence", "debezium", "streamex", "jsonpath", "hibernate", "eclipselink-jpa", "arquillian", "flyway", "liquibase", "jodd-db", "querydsl", "apache-camel", "rsocket-java", "google-http-java-client", "google-cloud-pubsub", "springfox", "apache-rocketmq", "opentracing", "zipkin2", "jaegertracing", "lombok", "weld", "jakarta-jsf", "javax-ejb", "jakarta-ejb", "javax-websocket", "jakarta-websocket", "jakarta-ws", "javax-batch", "jakarta-batch", "javax-validation", "jakarta-validation", "kotest", "datanucleus-jpa", "openjpa", "wiremock", "easymock", "jmockit", "mockito", "spock", "hibernate-validator", "apache-bval", "spring-kafka", "spring-session", "jackson", "gson", "micrometer", "mapstruct", "swagger-v2", "swagger-v3", "apache-shiro", "arrowkt", "scalatest", "jetbrains-annotations", "playwright-java", "kotlinx-coroutines", "kotlinx-serialization", "exposed", "ktorm", "tornadofx", "javafx", "mockserver", "kotlinx-datetime", "spring-cloud-gateway", "spring-data-r2dbc", "quarkus-qute", "smallrye-mutiny", "opentelemetry", "io.grpc", "apache-collections", "fastutil", "logback", "slf4j", "asm", "axoniq", "bytebuddy", "apache-cayenne", "dagger", "documents4j", "ebean", "napier", "сlikt", "avro", "apollo", "decompose", "mvikotlin", "async-http-client", "coroutineworker", "reaktive", "hikaricp", "sqldelight", "klaxon", "corda", "eclipse-collections", "graphql-kotlin", "firebase-kotlin-sdk", "moko-mvvm", "kotlin-test", "fritz2", "fuel", "kodein-db", "kodein-di", "klock", "korge", "dokka", "js-externals", "kotlinx-benchmark", "kotlinx-browser", "kotlinx-cli", "kotlinx-io", "kotlinx-collections-immutable", "kotlinx-html", "multik", "mockk", "doodle", "ktlint", "protobuf", "quartz", "rabbitmq-java-client", "aeron", "jedis", "resilience4j", "kvision", "rsocket-kotlin", "multiplatform-settings", "rxdownload", "java-websocket", "crashkios", "stately", "flexy-pool", "npm-publish", "h2", "apache-hc", "infinispan", "itextpdf", "jsoup", "log4j", "lucene", "apache-mina", "apache-pdfbox", "apache-poi", "apache-pulsar", "okio", "ehcache", "vavr", "xmlgraphics", "opencv", "kotlin-material-ui", "eclipselink", "spring-data-rest", "hibernate-reactive", "hibernate-envers", "spring-cloud-kubernetes", "spring-cloud-openfeign", "spring-cloud-retrofit", "spring-cloud-stream", "spring-websocket", "spring-graphql", "jakarta-nosql" ]
      }
    }
  }, {
    "id" : "lifecycle",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "duration_grouped" : [ "{regexp#integer}s", "-{regexp#integer}s", "{regexp#integer}s+" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "eap" : [ "{enum#boolean}" ],
        "error" : [ "{util#class_name}" ],
        "error_frames" : [ "{util#method_name}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "error_size" : [ "{regexp#integer}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "memory_error_kind" : [ "{enum#__memory_error_kind}" ],
        "mode" : [ "{enum:new|same|attach}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "restart" : [ "{enum#boolean}" ],
        "test" : [ "{enum#boolean}" ],
        "too_many_errors" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "ide.error", "ide.freeze", "ide.start", "ide.close", "project.opening.finished", "project.opened", "project.closed", "frame.activated", "frame.deactivated", "project.module.attached", "project.frame.selected", "ide.crash.detected", "protocol.open.command.handled", "ide.deadlock.detected" ],
        "__memory_error_kind" : [ "heap", "min_heap", "perm_gen", "metaspace", "code_cache" ]
      }
    }
  }, {
    "id" : "light.edit",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autosave.mode|open.file|open.in.project}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "open_place" : [ "{enum#__open_place}" ],
        "project_status" : [ "{enum:Open|Existing|New}" ]
      },
      "enums" : {
        "__open_place" : [ "LightEditOpenAction", "WelcomeScreenOpenAction", "CommandLine", "DragAndDrop", "RecentFiles" ]
      }
    }
  }, {
    "id" : "live.templates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#live_template}", "{enum:started}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "login",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "activity_id" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_requires_license" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "logged_in" : [ "{enum#boolean}" ],
        "login_provider" : [ "{enum:jba|google|github|gitlab|bitbucket}" ],
        "newsletter" : [ "{enum#boolean}" ],
        "onboarding" : [ "{enum#boolean}" ],
        "plugins_require_licenses" : [ "{enum#boolean}" ],
        "session_time_ms" : [ "{regexp#integer}" ],
        "source" : [ "{enum:login_dialog|licenses_user_info|licenses_new_license|licenses_trial}", "{enum:LicenseDialogLink}" ],
        "successful" : [ "{enum#boolean}" ],
        "troubles_pressed" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "exit", "licenses.dialog.shown", "request.trial", "continue", "browser.login", "buy.license" ]
      }
    }
  }, {
    "id" : "markdown.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:runner.executed}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "runner" : [ "{util#class_name}" ],
        "type" : [ "{enum:BLOCK|LINE}" ]
      }
    }
  }, {
    "id" : "maven.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:hasUserModifiedImportedLibrary|hasUserAddedModuleDependency|hasUserAddedLibraryDependency}" ]
    }
  }, {
    "id" : "microservices.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "endpoints_provider" : [ "{util#endpoint_provider_name}" ],
        "filter_id" : [ "{enum:framework|module|type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "endpoints.groups.requested", "url.path.reference.variants", "url.path.segment.navigate", "mq.reference.variants", "mq.reference.navigate", "url.path.inlay.actions", "endpoints.tab.openapi.activated", "endpoints.tab.http.client.activated", "endpoints.list.filtered" ]
      }
    }
  }, {
    "id" : "ml.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:decorating.settings.changed|ranking.settings.changed|decorating.opinion.provided}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_by_default" : [ "{enum#boolean}" ],
        "opinion" : [ "{enum:LIKE|DISLIKE|NEUTRAL}" ],
        "ranker_id" : [ "{util#ml_completion_ranker_id}" ],
        "using_language_checkbox" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "module.facets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#facets_type}", "{enum:module.with.facet}" ],
      "event_data" : {
        "facet" : [ "{util#facets_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|move.files.or.directories}" ],
      "event_data" : {
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "new.project.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "framework" : [ "{util#framework}" ],
        "generator_id" : [ "{util#class_name}" ],
        "gradle-kotlin-dsl" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectType" : [ "{util#project_type}" ]
      },
      "enums" : {
        "__event_id" : [ "finish", "attempt", "finish.add.framework", "attempt.add.framework", "project.generated", "project.created" ]
      }
    }
  }, {
    "id" : "new.project.wizard.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "add_sample_code" : [ "{enum#boolean}" ],
        "build_system" : [ "{enum:intellij|gradle|maven|sbt|other}" ],
        "build_system_dsl" : [ "{enum:groovy|kotlin|other}" ],
        "build_system_parent" : [ "{enum#boolean}" ],
        "build_system_sdk_version" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "generator" : [ "{util#class_name}" ],
        "git" : [ "{enum#boolean}" ],
        "groovy_sdk_type" : [ "{enum:maven|local|other}" ],
        "hits" : [ "{regexp#integer}" ],
        "input_mask" : [ "{regexp#integer}" ],
        "language" : [ "{util#class_name}", "{enum#__language}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_selected" : [ "{enum:Go|Ruby|PHP|Python|Scala}", "{enum#__plugin_selected}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_created" : [ "{enum#boolean}" ],
        "screen" : [ "{regexp#integer}" ],
        "typed_chars" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "wizard_session_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "project.location.changed", "navigate.prev", "project.name.changed", "navigate.help", "git.changed", "select.custom.template", "create.git.repo", "generator.finished", "select.language", "wizard.dialog.open", "project.created", "search", "language.finished", "navigate.next", "build.system.add.sample.code.changed", "groovy.lib.changed", "groovy.lib.finished", "build.system.sdk.changed", "build.system.module.name.changed", "build.system.dsl.changed", "build.system.content.root.changed", "build.system.group.id.changed", "build.system.changed", "build.system.artifact.id.changed", "build.system.module.file.location.changed", "build.system.sdk.finished", "build.system.finished", "plugin.selected", "add.plugin.clicked", "generator.selected", "wizard.dialog.finish", "build.system.version.changed", "build.system.parent.changed" ],
        "__language" : [ "Scala", "Go", "PHP", "Ruby", "Python", "Java", "JavaScript", "HTML", "Groovy", "Kotlin", "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby" ],
        "__plugin_selected" : [ "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby" ]
      }
    }
  }, {
    "id" : "nodejs.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:exec.params}" ],
      "event_data" : {
        "interpreter_type" : [ "{enum#__interpreter_type}" ]
      },
      "enums" : {
        "__interpreter_type" : [ "Local", "WSL", "Remote_sftp", "Remote_docker", "Remote_vagrant", "Remote_docker-compose", "Remote_ssh", "undefined", "third.party_remote", "Remote_unknown", "Unknown" ]
      }
    }
  }, {
    "id" : "notification.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "display_type" : [ "{enum:NONE|BALLOON|STICKY_BALLOON|TOOL_WINDOW}" ],
        "notification_group" : [ "{util#notification_group}" ],
        "play_sound" : [ "{enum#boolean}" ],
        "read_aloud" : [ "{enum#boolean}" ],
        "should_log" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "notifications",
    "builds" : [ ],
    "versions" : [ {
      "from" : "40"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#class_name}", "{util#action}" ],
        "additional.display_id" : [ "{enum#notification_id}", "{util#notification_display_id}" ],
        "class" : [ "{util#class_name}" ],
        "display_id" : [ "{util#notification_display_id}" ],
        "display_type" : [ "{enum:BALLOON|STICKY_BALLOON|TOOL_WINDOW}", "{enum:NONE}" ],
        "id" : [ "{regexp:\\d+.\\d+}" ],
        "is_expandable" : [ "{enum#boolean}" ],
        "notification_group" : [ "{util#notification_group}", "{enum:JavaScript_Debugger_Console_URL_Starter|New_JVM_Backend|New JVM Backend}" ],
        "notification_place" : [ "{enum:BALLOON|EVENT_LOG}", "{enum:TOOL_WINDOW}", "{enum:ACTION_CENTER}" ],
        "parent" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:ERROR|INFORMATION|WARNING}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "balloon.collapsed", "balloon.expanded", "closed.by.user", "event.log.balloon.shown", "hyperlink.clicked", "logged", "settings.clicked", "shown" ],
        "notification_id" : [ "ignored.to.exclude.synchronization.notification", "externally.added.files.notification", "project.configuration.files.added.notification", "manage.ignore.files.notification", "github.missing.default.account", "github.pull.request.cannot.set.tracking.branch", "github.clone.unable.to.create.destination.dir", "github.clone.unable.to.find.destination", "github.open.in.browser.file.is.not.under.repo", "github.open.in.browser.cannot.get.last.revision", "github.rebase.success", "github.gist.cannot.create", "github.pull.request.cannot.load.branches", "github.pull.request.cannot.collect.additional.data", "github.pull.request.cannot.load.forks", "github.pull.request.failed.to.add.remote", "github.pull.request.push.failed", "github.pull.request.creation.error", "github.pull.request.cannot.collect.diff.data", "github.pull.request.cannot.find.repo", "github.pull.request.created", "github.pull.request.cannot.process.remote", "github.pull.request.no.current.branch", "github.rebase.cannot.validate.upstream.remote", "github.rebase.upstream.is.own.repo", "github.rebase.cannot.get.user.info", "github.rebase.cannot.retrieve.upstream.info", "github.rebase.cannot.configure.upstream.remote", "github.rebase.repo.not.found", "github.rebase.cannot.load.repo.info", "github.rebase.repo.is.not.a.fork", "github.share.cannot.find.git.repo", "github.share.cannot.create.repo", "github.share.project.successfully.shared", "github.share.empty.repo.created", "github.share.project.created.init.commit.failed", "github.share.init.push.failed", "github.gist.created", "github.git.repo.init.error", "unknown", "hg.update.unresolved.conflicts.error", "git.merge.local.changes.detected", "vcs.patch.apply.rollback.failed", "hg.qrefresh.error", "git.revert.abort.failed", "git.fetch.success", "git.branch.operation.success", "git.pull.failed", "hg.merge.warning", "vcs.commit.finished.with.warnings", "vcs.shelve.successful", "git.merge.reset.error", "git.stage.commit.successful", "git.clone.unable.to.create.destination.dir", "git.rebase.cannot.continue", "vcs.commit.canceled", "git.branch.rename.rollback.success", "hg.merge.error", "hg.rebase.error", "git.update.no.tracked.branch.error", "git.rebase.update.project.error", "hg.tag.creation.error", "git.local.changes.not.restored", "hg.clone.destination.error", "vcs.shelve.failed", "hg.merging.with.ancestor.skipped", "vcs.patch.apply.aborted", "hg.pushed.successfully", "git.remote.branch.deletion.success", "hg.repository.created", "git.tag.created", "hg.qpop.completed.with.errors", "git.branch.operation.error", "hg.compare.with.branch.error", "git.fetch.error", "hg.nothing.to.push", "git.rebase.cannot.abort", "hg.unsupported.extensions", "vcs.patch.partially.applied", "git.branches.update.successful", "hg.exception.during.merge.commit", "git.init.failed", "git.rebase.not.allowed", "hg.qfold.error", "hg.qfinish.error", "git.merge.abort.success", "git.init.error", "git.rebase.commit.edit.undo.error.repo.changed", "git.reset.failed", "git.update.detached.head.error", "git.create.branch.rollback.successful", "git.branch.checkout.failed", "git.delete.branch.on.merge", "vcs.root.added", "git.stash.failed", "vcs.patch.copied.to.clipboard", "git.merge.abort.failed", "vcs.could.not.compare.with.branch", "git.reset.successful", "git.branch.creation.failed", "git.branch.deletion.rollback.error", "hg.graft.continue.error", "hg.merge.exception", "git.rebase.abort.succeeded", "hg.debugancestor.error", "hg.log.command.execution.error", "hg.unable.to.run.executable", "hg.bookmark.error", "git.rebase.commit.edit.undo.error", "git.unstash.with.unresolved.conflicts", "git.unstash.failed", "hg.qgoto.error", "hg.clone.error", "git.clone.failed", "git.rebase.abort.failed", "hg.remote.auth.error", "vcs.uncommitted.changes.saving.error", "git.update.nothing.to.update", "git.merge.rollback.error", "hg.qnew.error", "git.checkout.success", "git.update.error", "git.cannot.resolve.conflict", "git.unstash.with.conflicts", "space.sharing.not.finished", "hg.rebase.continue.error", "git.checkout.rollback.error", "git.reset.partially.failed", "git.remote.branch.deletion.error", "hg.qrename.error", "hg.unsupported.version", "hg.repo.creation.error", "space.git.repo.init.error", "git.tag.remote.deletion.error", "hg.push.error", "vcs.cherry.pick.error", "git.repository.created", "vcs.roots.invalid", "git.stash.local.changes.detected", "git.could.not.compare.with.branch", "git.rebase.not.started", "space.project.shared.successfully", "vcs.compare.failed", "vcs.patch.apply.success.applied", "hg.qdelete.error", "hg.branch.creation.error", "git.cherry.pick.abort.failed", "git.rebase.rollback.failed", "git.merge.error", "vcs.patch.apply.cannot.find.patch.file", "git.rebase.commit.edit.undo.error.protected.branch", "git.rebase.successful", "vcs.commit.failed", "git.could.not.load.changes.of.commit", "git.unresolved.conflicts", "vcs.patch.apply.new.files.error", "hg.rebase.abort.error", "git.revert.abort.success", "git.stage.commit.error", "git.tag.not.created", "git.create.branch.rollback.error", "git.fix.tracked.not.on.branch", "vcs.shelve.deletion.undo", "hg.tag.creation.failed", "git.tag.deletion.rollback.error", "hg.update.error", "vcs.roots.registered", "hg.status.command.error", "hg.qimport.error", "vcs.patch.apply.not.patch.type.file", "vcs.commit.finished", "git.could.not.save.uncommitted.changes", "hg.rename.failed", "git.branch.rename.rollback.failed", "git.cherry.pick.abort.success", "hg.qpop.error", "git.conflict.resolving.error", "git.merge.failed", "hg.pull.error", "git.unstash.patch.applied", "hg.bookmark.name.is.empty", "hg.pull.auth.required", "git.rebase.abort", "vcs.patch.already.applied", "git.checkout.new.branch.operation.rollback.error", "hg4idea.changesets.error", "vcs.patch.creation.failed", "hg.graft.error", "hg.qpush.error", "git.checkout.new.branch.operation.rollback.successful", "github.rebase.remote.origin.not.found", "github.rebase.account.not.found", "github.rebase.multi.repo.not.supported", "rebase.error.failed.to.match.gh.repo", "git.branch.set.upstream.failed", "git.log.could.not.load.changes.of.commit", "vcs.project.partially.updated", "vcs.shelf.undo.delete", "vcs.branch.operations.are.executed.on.all.roots", "git.rebase.collect.updated.changes.error", "git.push.not.supported", "vcs.inactive.ranges.damaged", "git.commit.cancelled", "git.fetch.result", "git.tag.remote.deletion.success", "git.fetch.cancelled", "git.fetch.details", "git.project.updated", "git.all.files.are.up.to.date", "git.fetch.result.error", "git.project.partially.updated", "git.push.result", "git.branch.deleted", "git.tag.restored", "git.files.updated.after.merge", "vcs.project.update.finished", "git.tag.deleted", "git.commit.edit.success", "space.other", "gradle.jvm.invalid", "gradle.jvm.configured", "gradle.configuration.error", "sh.update.shellcheck.error", "sh.update.shellcheck.success", "sh.update.formatter.success", "sh.install.formatter.error", "sh.update.formatter.error", "sh.install.formatter", "sh.update.shellcheck", "sh.update.formatter", "sh.install.formatter.success", "git.bad.executable", "git.init.stage.failed", "git.rebase.failed", "diff.external.too.many.selected", "ignored.to.exclude.not.found", "git.rebase.stopped.for.editing", "vcs.cannot.load.annotations", "untracked.files.overwritten", "diff.external.cant.load.changes", "vcs.obsolete.plugin.unbundled", "vcs.suggested.plugin.install.failed", "diff.merge.intenral.error", "git.rebase.stopped.due.to.conflicts", "vcs.commit.checks.failed" ]
      }
    }
  }, {
    "id" : "os.file.type.association",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:os.association.created}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "os.linux.wm",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:xdg.current.desktop}" ],
      "event_data" : {
        "value" : [ "{enum#__value}" ]
      },
      "enums" : {
        "_" : [ "KDE", "Gnome", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown" ],
        "__value" : [ "LG3D", "KDE", "Gnome", "Gnome_Shell", "Gnome_Classic", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "GNOME_Flashback", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown", "empty" ]
      }
    }
  }, {
    "id" : "package.management.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:upgrade|uninstall|install|browseAvailablePackages}" ],
      "event_data" : {
        "service" : [ "{enum#service_name}" ]
      },
      "enums" : {
        "service_name" : [ "Node.js", "Python", "Bower" ]
      }
    }
  }, {
    "id" : "packagesearch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "details_link_label" : [ "{enum:PackageUsages|GitHub|Documentation|License|ProjectWebsite|Readme}" ],
        "details_visible" : [ "{enum#boolean}", "{enum:PackageDetails|OnlyStable|OnlyKotlinMp}" ],
        "event_data_1" : [ "{regexp#integer}" ],
        "module_operation_provider_class" : [ "{util#class_name}" ],
        "package_from_version" : [ "{regexp#version}" ],
        "package_id" : [ "{util#top_package_id}" ],
        "package_is_installed" : [ "{enum#boolean}" ],
        "package_version" : [ "{regexp#version}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "preferences_auto_add_repositories" : [ "{enum#boolean}" ],
        "preferences_default_gradle_scope_changed" : [ "{enum#boolean}" ],
        "preferences_default_maven_scope_changed" : [ "{enum#boolean}" ],
        "preferences_gradle_scopes_count" : [ "{regexp#integer}" ],
        "preferences_update_scopes_on_usage" : [ "{enum#boolean}" ],
        "repository_id" : [ "{enum:OTHER|NONE|MAVEN_CENTRAL|GOOGLE_MAVEN|JETBRAINS_REPOS}", "{enum:CLOJARS}" ],
        "repository_url" : [ "{enum:https://repo.maven.apache.org/maven2/|https://maven-central.storage-download.googleapis.com/maven2|https://repo1.maven.org/maven2/|https://maven.google.com/|https://maven.pkg.jetbrains.space/kotlin/p/dokka/dev/|https://maven.pkg.jetbrains.space/public/p/compose/dev/|https://maven.pkg.jetbrains.space/public/p/ktor/eap/|https://maven.pkg.jetbrains.space/public/p/space/maven/}", "{enum:https://repo.clojars.org/}" ],
        "repository_uses_custom_url" : [ "{enum#boolean}" ],
        "search_query_length" : [ "{regexp#integer}" ],
        "target_modules" : [ "{enum:None|One|All}", "{enum:Some}" ],
        "target_modules_mixed_build_systems" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled", "maven", "gradle-groovy", "gradle-kts", "details_link_click", "preferences_changed", "toggle", "package_installed", "package_selected", "upgrade_all_event", "repository_removed", "package_updated", "repository_added", "target_modules_selected", "package_removed", "search_query_clear", "preferences_restore_defaults", "search_request" ]
      }
    }
  }, {
    "id" : "packagesearch.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build-system" : [ "{enum#build_system}" ],
        "gradle-groovy" : [ "{regexp#integer}" ],
        "gradle-kts" : [ "{regexp#integer}" ],
        "hit-min-order" : [ "{regexp#integer}" ],
        "ij" : [ "{regexp#integer}" ],
        "match-groups" : [ "{regexp#integer}" ],
        "match-items" : [ "{regexp#integer}" ],
        "maven" : [ "{regexp#integer}" ],
        "ok" : [ "{enum#boolean}" ],
        "query-size" : [ "{regexp#integer}" ],
        "query-tokens" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "request", "installed", "close-cancel", "response", "project-info", "response-failed", "close", "open" ],
        "build_system" : [ "maven", "gradle-groovy", "gradle-kts" ]
      }
    }
  }, {
    "id" : "performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ui.latency|ui.lagging|heartbeat|popup.latency}" ],
      "event_data" : {
        "cold_start" : [ "{enum#boolean}" ],
        "cpu_time_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "gc_time_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "swap_load" : [ "{regexp#integer}" ],
        "system_cpu_load" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.command.line.tools.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:command.executed}" ],
      "event_data" : {
        "toolType" : [ "{enum#__toolType}" ]
      },
      "enums" : {
        "__toolType" : [ "unconfigured", "unknown", "custom", "zend1", "zend2", "symfony", "composer", "symfonyBasedTool", "drush", "wordPress" ]
      }
    }
  }, {
    "id" : "php.phing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build.file}" ]
    }
  }, {
    "id" : "platform.installer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Update_Manager}" ],
      "event_data" : {
        "value" : [ "{enum:Toolbox_App|Snap|IDE}", "{enum:Other}" ]
      }
    }
  }, {
    "id" : "platform.registry",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:registry|experiment|advanced.setting}" ],
      "event_data" : {
        "id" : [ "{util#registry_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "platform.registry.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#registry_key}" ]
    }
  }, {
    "id" : "plugin.manager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "acceptance_result" : [ "{enum:ACCEPTED|DECLINED|AUTO_ACCEPTED}" ],
        "group" : [ "{enum:UPDATE|INSTALLING|INSTALLED|SEARCH_INSTALLED|SEARCH|FEATURED|NEW_AND_UPDATED|TOP_DOWNLOADS|TOP_RATED|CUSTOM_REPOSITORY}", "{enum:BUNDLED_UPDATE}" ],
        "index" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "previous_version" : [ "{util#plugin_version}" ],
        "signature_check_result" : [ "{enum:INVALID_SIGNATURE|MISSING_SIGNATURE|WRONG_SIGNATURE|SUCCESSFUL}" ],
        "source" : [ "{enum:MARKETPLACE|CUSTOM_REPOSITORY|FROM_DISK}" ],
        "states" : [ "{enum:ENABLE_GLOBALLY|ENABLE_FOR_PROJECT|ENABLE_FOR_PROJECT_DISABLE_GLOBALLY|DISABLE_GLOBALLY|DISABLE_FOR_PROJECT|DISABLE_FOR_PROJECT_ENABLE_GLOBALLY}" ]
      },
      "enums" : {
        "__event_id" : [ "plugin.install.third.party.check", "plugin.installation.finished", "plugin.installation.started", "plugin.signature.check.result", "plugin.signature.warning.shown", "plugin.state.changed", "plugin.was.removed", "plugin.search.card.opened" ]
      }
    }
  }, {
    "id" : "plugins",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unsafe_id" : [ "{enum:io.zhile.research.ide-eval-resetter}" ]
      },
      "enums" : {
        "__event_id" : [ "disabled.plugin", "enabled.not.bundled.plugin", "per.project.disabled", "per.project.enabled", "unsafe.plugin" ]
      }
    }
  }, {
    "id" : "plugins.advertiser",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "plugins" : [ "{util#plugin}" ],
        "source" : [ "{enum:editor|notification}" ]
      },
      "enums" : {
        "__event_id" : [ "install.plugins", "ignore.extensions", "open.download.page", "ignore.ultimate", "ignore.unknown.features", "enable.plugins", "configure.plugins", "learn.more" ]
      }
    }
  }, {
    "id" : "plugins.disabled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "plugins.dynamic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "load", "unload.fail", "unload.success", "unload.failure", "load.success" ]
      }
    }
  }, {
    "id" : "plugins.non.bundled",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#plugin}" ]
    }
  }, {
    "id" : "polaris.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "editor" : [ "{enum#boolean}" ],
        "index" : [ "{regexp#integer}" ],
        "keyboard" : [ "{enum#boolean}" ],
        "mesto" : [ "{enum:EDITOR|QUICK_DOCUMENTATION|POPUP}" ],
        "raw" : [ "{enum#boolean}" ],
        "searched" : [ "{enum#boolean}" ],
        "type" : [ "{enum:parameter|comparison|next_call}", "{enum:parameters|snippets}", "{enum:raw|generated}" ]
      },
      "enums" : {
        "__event_id" : [ "inline_shown", "snippet_shown", "parameter_copied", "inline_rejected", "prev_inline", "next_snippet", "suggestion_accepted", "snippet_rejected", "next_inline", "parameter_pasted", "suggestion_shown", "previous_snippet", "snippet_copied", "snippet_pasted", "inline_accepted", "snippet_accepted", "find_usages_in_dumb_mode", "go_to_declaration_in_dumb_mode" ]
      }
    }
  }, {
    "id" : "polaris.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:recommendations_level|completion_auto_show|parameters_visible|background_snippets}" ],
      "event_data" : {
        "value" : [ "{enum:NOTHING|IMPORTANT|ALL}", "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "problems.view.sessions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:problems.tab.hidden|problems.tab.shown|select.item}" ],
      "event_data" : {
        "duration_seconds" : [ "{regexp#integer}" ],
        "preview" : [ "{enum#boolean}" ],
        "problems_count" : [ "{regexp#integer}" ],
        "scope_tab" : [ "{enum:CurrentFile|ProjectErrors|unknown}" ],
        "severity" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "productivity",
    "builds" : [ ],
    "versions" : [ {
      "from" : "11"
    } ],
    "rules" : {
      "event_id" : [ "{util#productivity}", "{enum:feature.used}" ],
      "event_data" : {
        "group" : [ "{util#productivity_group}", "{util#productivity}" ],
        "id" : [ "{util#productivity}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "profiler.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:absolute_time|short_time}", "{enum:SHORT_TIME|ABSOLUTE_TIME|DEFAULT}" ]
      },
      "enums" : {
        "__event_id" : [ "tabNameFormat", "filterCalls", "hideLessOnePercents", "showCalleesList", "showPercentsOfRoot", "icicleGraph", "stickyText", "focusOnSearch", "showChart", "showThreadId", "keepSimilarThreadsClose", "filterSlider", "highlightIdeProcesses", "filterDevelopmentTools", "dragToChangeZoom", "sortThreadsByName" ]
      }
    }
  }, {
    "id" : "profiler.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:JumpToSource|FocusInFlameGraph|FocusInCallTree|FocusInMethodList|MethodMergedCallees|MethodBackTraces|CopyFrame|CopyStackUpToFrame|ExpandTree|CollapseTree|ExpandAll|CollapseAll|PresentationSettings|CompareWithBaseline|CreateDiff|ContextMenu|SpeedSearch|RecursionCheckbox|Drag|Scroll|Zoom|FocusOnNode|ZoomIn|ZoomOut|ResetZoom|IcicleGraph|StickyText|NodesFilter|CaptureImage|CopyImage|SaveImage|SearchToolbar|SelectDiffFlameGraphType|ShowPercentOfTotal|ShowPercentOfParent|FilterCalls|HideCallsLessPercent|ShowCalleeList|FocusOnSubtree|ExcludeSubtree|FocusOnCall|ExcludeCall|RecursionCollapse|ShowChart|ZoomIn|ZoomOut|ZoomReset|ZoomBySelectionWithoutModifier|FilterEvents|ThreadList.SortByName|ThreadList.SortByMetric|ThreadList.ShowIds|ThreadList.KeepSimilarThreadsClose|ThreadList.AllThreadsMergedSelected|ThreadList.CustomThreadSelected|ThreadList.SpeedSearch}", "{enum:GetExpandableEventContents|OpenExpandableEventContentsPanel}" ],
        "anonymous_dump_id" : [ "{regexp#hash}" ],
        "diff_calc_time" : [ "{regexp#integer}" ],
        "diff_calc_time_ms" : [ "{regexp#integer}" ],
        "diff_flame_graph_type" : [ "{util#class_name}" ],
        "enabled" : [ "{enum#boolean}" ],
        "home_action_id" : [ "{enum:ProcessesList.ShowDevTools|ProcessesList.HighlightIdeProcesses|ProcessesList.EditConfigurations|ProcessesList.SnapshotFolder|Process.LiveCharts|Process.AttachProfiler|Process.MemorySnapshot|Process.ThreadDump|RecentSnapshots.Open.Context|RecentSnapshots.Open.Click|RecentSnapshots.Reveal|RecentSnapshots.Hide.Context|RecentSnapshots.Hide.Click|OpenSnapshot.Button|OpenSnapshot.Hint}" ],
        "id" : [ "{util#run_config_id}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:ADD|COPY|REMOVE|CHANGE}" ],
        "load_time" : [ "{regexp#integer}" ],
        "load_time_ms" : [ "{regexp#integer}" ],
        "name" : [ "{enum:flameGraph|callTree|methodList}", "{util#profiler_event_id_validator}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "prev_event_time" : [ "{regexp#integer}" ],
        "prev_event_time_ms" : [ "{regexp#integer}" ],
        "prev_tab_time" : [ "{regexp#integer}" ],
        "prev_tab_time_ms" : [ "{regexp#integer}" ],
        "process_type" : [ "{enum:IDE|IDE_DESCENDANT|EXTERNAL}" ],
        "profiler_configuration_type" : [ "{util#profiler_configuration_type}" ],
        "run_configuration_type" : [ "{util#run_config}" ],
        "run_widget_action_id" : [ "{enum:Widget.StopRecording|Widget.StartRecording|Widget.ShowResults}" ],
        "size" : [ "{regexp#integer}" ],
        "snapshot_import_origin" : [ "{enum:RECENT|OPEN_FILE}", "{enum:REOPEN_FROM_WIDGET}" ],
        "snapshot_import_source" : [ "{util#snapshot_import_source_validator}" ],
        "snapshot_size" : [ "{regexp#integer}" ],
        "snapshot_size_bytes" : [ "{regexp#integer}" ],
        "snapshot_type" : [ "{util#profiler_snapshot_type}" ],
        "tab_component_id" : [ "{util#profiler_tab_id_validator}" ],
        "type" : [ "{util#profiler_snapshot_type}" ]
      },
      "enums" : {
        "__event_id" : [ "execute", "start", "snapshot.generated", "attach", "tree.recursion.collapse", "tree.recursion.checkbox", "snapshot.open", "tab.open", "event.open", "configurations.changed", "home.action.invoked", "diff.flamegraph.type.changed", "diff.created", "snapshot.action.invoked", "run.widget.interaction" ]
      }
    }
  }, {
    "id" : "project.fs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:case-sensitivity|roots-watched}" ],
      "event_data" : {
        "cs-implicit" : [ "{enum#boolean}" ],
        "cs-project" : [ "{enum#boolean}" ],
        "cs-system" : [ "{enum#boolean}" ],
        "pct-non-watched" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "task_class" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "finished", "import_project.finished", "import_project.stage.started", "import_project.stage.finished", "import_project.started" ]
      }
    }
  }, {
    "id" : "project.indexable.files",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.indexable.files|content.indexable.files}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.intellij.monorepo",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:is.intellij}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "project.structure",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "modules.count.{regexp#count}", "content.roots.count.{regexp#count}", "source.roots.count.{regexp#count}", "source.root.cookbooks-root.{regexp#count}", "source.root.java-resource.{regexp#count}", "source.root.java-source.{regexp#count}", "source.root.java-test-resource.{regexp#count}", "source.root.java-test.{regexp#count}", "source.root.kotlin-resource.{regexp#count}", "source.root.kotlin-source.{regexp#count}", "source.root.kotlin-test-resource.{regexp#count}", "source.root.kotlin-test.{regexp#count}", "excluded.roots.count.{regexp#count}", "{enum:package.prefix.used|package.prefix.not.used}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#count}", "{regexp#integer}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "__event_id" : [ "modules.total", "content.roots.total", "source.roots.total", "excluded.roots.total", "package.prefix", "source.root", "named.scopes.total.local", "named.scopes.total.shared", "project.in.wsl" ],
        "type" : [ "cookbooks-root", "java-resource", "java-source", "java-test-resource", "java-test", "kotlin-resource", "kotlin-source", "kotlin-test-resource", "kotlin-test" ]
      }
    }
  }, {
    "id" : "project.view.pane",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:current}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ],
        "scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.pane.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "from_class_name" : [ "{util#class_name}" ],
        "from_scope_class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "to_class_name" : [ "{util#class_name}" ],
        "to_scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "proxy.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:proxy.type}" ],
      "event_data" : {
        "name" : [ "{enum:Auto|Socks|Http}" ]
      }
    }
  }, {
    "id" : "python.interpreter.remote",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "Remote_Docker_Compose", "Remote_SSH_Credentials", "Remote_WSL", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Docker", "local" ]
      }
    }
  }, {
    "id" : "python.interpreter.version",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}" ]
    }
  }, {
    "id" : "python.namespace.packages.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:namespace.package.apply.in.root.provider|namespace.package.created|namespace.package.mark.or.unmark}" ],
      "event_data" : {
        "is_mark" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "python.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python_package_installed}" ],
      "event_data" : {
        "executionType" : [ "{enum#executionType}" ],
        "interpreterType" : [ "{enum#interpreterType}", "{enum:poetry}" ],
        "lang" : [ "{util#lang}" ],
        "package" : [ "{enum#__package}" ],
        "package_version" : [ "{regexp#version}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__package" : [ "requests", "pytz", "numpy", "six", "python-dateutil", "certifi", "urllib3", "pandas", "idna", "chardet", "Pillow", "click", "cffi", "matplotlib", "cryptography", "pyparsing", "pytest", "Jinja2", "PyYAML", "Django", "redis", "scipy", "pycparser", "boto3", "attrs", "MarkupSafe", "gunicorn", "djangorestframework", "lxml", "packaging", "sqlparse", "tqdm", "Werkzeug", "psycopg2-binary", "Flask", "typing-extensions", "pyasn1", "beautifulsoup4", "openpyxl", "decorator", "wcwidth", "celery", "asgiref", "psycopg2", "SQLAlchemy", "itsdangerous", "protobuf", "xlrd", "future", "botocore", "jsonschema", "PyJWT", "scikit-learn", "colorama", "zipp", "jmespath", "pyasn1-modules", "importlib-metadata", "psutil", "python-dotenv", "django-cors-headers", "toml", "rsa", "oauthlib", "requests-oauthlib", "defusedxml", "s3transfer", "pyyaml", "django-filter", "py", "ipython", "cachetools", "wrapt", "docutils", "prompt-toolkit", "coverage", "appdirs", "tornado", "greenlet", "pluggy", "sentry-sdk", "Pygments", "cycler", "kombu", "pymongo", "torch", "webencodings", "simplejson", "google-auth", "PyMySQL", "aiohttp", "opencv-python", "pillow", "flake8", "billiard", "pickleshare", "selenium", "gevent", "paramiko", "mccabe", "amqp", "kiwisolver", "grpcio", "traitlets", "mysqlclient", "django", "et-xmlfile", "xlwt", "regex", "more-itertools", "mock", "httplib2", "setuptools", "vine", "pyrsistent", "backcall", "flask", "pexpect", "joblib", "pydantic", "jedi", "soupsieve", "uritemplate", "jinja2", "google-api-python-client", "bcrypt", "ptyprocess", "sqlalchemy", "parso", "django-extensions", "iniconfig", "xmltodict", "isort", "pyOpenSSL", "seaborn", "Markdown", "pycodestyle", "pylint", "pytest-cov", "alembic", "django-redis", "dnspython", "async-timeout", "elasticsearch", "msgpack", "django-storages", "black", "prometheus-client", "uvicorn", "filelock", "tzlocal", "Babel", "tensorflow", "bleach", "django-debug-toolbar", "html5lib", "zope.interface", "torchvision", "jdcal", "pycryptodome", "text-unidecode", "yarl", "networkx", "termcolor", "multidict", "XlsxWriter", "mypy-extensions", "marshmallow", "pyjwt", "pyzmq", "asn1crypto", "Mako", "h5py", "Flask-SQLAlchemy", "blinker", "google-auth-oauthlib", "tensorboard", "fastapi", "googleapis-common-protos", "requests-toolbelt", "reportlab", "websocket-client", "google-api-core", "tabulate", "entrypoints", "sklearn", "python-editor", "coreapi", "typed-ast", "google-auth-httplib2", "oauth2client", "mistune", "pycrypto", "pyflakes", "boto", "whitenoise", "lazy-object-proxy", "phonenumbers", "werkzeug", "virtualenv", "isodate" ],
        "executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "interpreterType" : [ "pipenv", "condavenv", "virtualenv", "regular" ]
      }
    }
  }, {
    "id" : "python.scientific",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:matplotlib_in_toolwindow_used|sci_view_used|data_view_toolwindow_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}", "{enum:poetry}" ],
        "lang" : [ "{util#lang}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "python.sdk.addNewEnv",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:condaFromFile.data.confirmed|venvFromFile.data.confirmed}" ],
      "event_data" : {
        "baseSdk" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "conda_path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "environmentYml_path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "requirementsTxtOrSetupPy_path" : [ "{enum:BLANK_UNCHANGED|TXT_SPECIFIED|PY_SPECIFIED|OTHER_SPECIFIED|CHANGED_TXT_TO_OTHER|CHANGED_TXT_TO_PY|CHANGED_TXT_TO_TXT|CHANGED_PY_TO_OTHER|CHANGED_PY_TO_PY|CHANGED_PY_TO_TXT|CHANGED_OTHER_TO_OTHER|CHANGED_OTHER_TO_PY|CHANGED_OTHER_TO_TXT|UNCHANGED}" ]
      }
    }
  }, {
    "id" : "python.sdk.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "baseSdk" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "conda_path" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "dialog_result" : [ "{enum:OK|CANCELLED|SKIPPED}" ],
        "env_result" : [ "{enum:CREATION_FAILURE|DEPS_NOT_FOUND|INSTALLATION_FAILURE|CREATED}", "{enum:LISTING_FAILURE|CREATION_FAILURE|NO_LISTING_DIFFERENCE|AMBIGUOUS_LISTING_DIFFERENCE|NO_BINARY|AMBIGUOUS_BINARIES|CREATED}", "{enum:CREATION_FAILURE|NO_EXECUTABLE|NO_EXECUTABLE_FILE|CREATED}" ],
        "pipenv_path" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "source" : [ "{enum:CONFIGURATOR|INSPECTION}" ]
      },
      "enums" : {
        "__event_id" : [ "venv.dialog.closed", "venv.created", "condaEnv.dialog.closed", "condaEnv.created", "pipenv.dialog.closed", "pipenv.created" ]
      }
    }
  }, {
    "id" : "python.sdk.install.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:install.download|install.installation|install.lookup|install.download.win}" ],
      "event_data" : {
        "download_result" : [ "{enum#__download_result}" ],
        "installation_result" : [ "{enum#__installation_result}" ],
        "lookup_result" : [ "{enum:FOUND|NOT_FOUND}" ],
        "os" : [ "{enum:WIN|MAC}" ],
        "py_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__download_result" : [ "EXCEPTION", "SIZE", "CHECKSUM", "CANCELLED", "OK" ],
        "__installation_result" : [ "EXCEPTION", "EXIT_CODE", "TIMEOUT", "CANCELLED", "OK" ]
      }
    }
  }, {
    "id" : "python.sdks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python_sdk_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}", "{enum:poetry}" ],
        "lang" : [ "{util#lang}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "python.welcome.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:welcome.project|welcome.script|welcome.projectView|welcome.runConfiguration}" ],
      "event_data" : {
        "project_type" : [ "{enum:NEW|OPENED}" ],
        "project_view_point" : [ "{enum:IMMEDIATELY|FROM_LISTENER}" ],
        "project_view_result" : [ "{enum:EXPANDED|NO_TOOLWINDOW|NO_PANE|NO_TREE}", "{enum:REJECTED}" ],
        "run_configuration_result" : [ "{enum:CREATED|NULL}" ],
        "script_result" : [ "{enum#__script_result}", "{enum:DISABLED_BUT_COULD|DISABLED_AND_COULD_NOT}" ]
      },
      "enums" : {
        "__script_result" : [ "CREATED", "NOT_EMPTY", "NO_VFILE", "NO_PSI", "NO_DOCUMENT" ]
      }
    }
  }, {
    "id" : "r.interpreters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:setup.interpreter}" ],
      "event_data" : {
        "is_conda" : [ "{enum#boolean}" ],
        "suggested" : [ "{regexp:(\\d+\\.?)*\\d+_(true|false)}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "r.workflow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.method.from.console}" ],
      "event_data" : {
        "name" : [ "{enum:install.packages|install_github}" ]
      }
    }
  }, {
    "id" : "reader.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:see.also.navigation}" ]
    }
  }, {
    "id" : "refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked}" ],
      "event_data" : {
        "element" : [ "{util#class_name}" ],
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "refactoring.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:open.in.editor.saved|open.in.editor.shown}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "selected" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rename.inplace.popup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:hide|openRenameDialog|settingsChanged|show}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_comments_on_hide" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ],
        "search_in_text_occurrences_on_hide" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rename.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|executed|reference.processed|local_search_in_comments}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "local_include_comments" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "reference_class" : [ "{util#class_name}" ],
        "rename_processor" : [ "{util#class_name}" ],
        "scope_type" : [ "{enum#__scope_type}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__scope_type" : [ "project", "test", "tests", "production", "module", "current file", "current_file", "third.party", "unknown" ]
      }
    }
  }, {
    "id" : "run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:started|ui.shown|finished}" ],
      "event_data" : {
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "finish_type" : [ "{enum:FAILED_TO_START|UNKNOWN}", "{enum:TERMINATED}" ],
        "id" : [ "{util#run_config_id}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "run.configuration.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config_factory}", "{enum:configured.in.project|feature.used}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "featureName" : [ "{util#plugin_info}" ],
        "id" : [ "{util#run_config_id}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "shared" : [ "{enum#boolean}" ],
        "target" : [ "{util#run_target}" ],
        "temporary" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "run.configuration.type.temp",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{util#run_config}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "shared" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "run.configuration.ui.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "hint_number" : [ "{regexp#integer}" ],
        "id" : [ "{util#run_config_id}" ],
        "input_event" : [ "{util#shortcut}" ],
        "option_id" : [ "{enum:browser.option.with.javascript.debugger|browser.option.target.browser|browser.option.after.launch|external.system.vm.parameters.fragment}", "{enum:Runtime}", "{enum:Use_Hot_Reload}", "{enum:before.launch.editSettings|before.launch.openToolWindow|beforeRunTasks|commandLineParameters|coverage|doNotBuildBeforeRun|environmentVariables|jrePath|log.monitor|mainClass|module.classpath|redirectInput|runParallel|shorten.command.line|target.project.path|vmParameters|workingDirectory|count|junit.test.kind|repeat|testScope|maven.params.workingDir|maven.params.goals|maven.params.profiles|maven.params.resolveToWorkspace|maven.general.useProjectSettings|maven.general.workOffline|maven.general.produceExceptionErrorMessages|maven.general.usePluginRegistry|maven.general.recursive|maven.general.alwaysUpdateSnapshots|maven.general.threadsEditor|maven.general.outputLevel|maven.general.checksumPolicy|maven.general.failPolicy|maven.general.showDialogWithAdvancedSettings|maven.general.mavenHome|maven.general.settingsFileOverride.checkbox|maven.general.settingsFileOverride.text|maven.general.localRepoOverride.checkbox|maven.general.localRepoOverride.text|maven.runner.useProjectSettings|maven.runner.delegateToMaven|maven.runner.runInBackground|maven.runner.vmParameters|maven.runner.envVariables|maven.runner.jdk|maven.runner.targetJdk|maven.runner.skipTests|maven.runner.properties|Dump_file_path|Exe_path|Program_arguments|Working_directory|Environment_variables|Runtime_arguments|Use_Mono_runtime|Use_external_console|Project|Target_framework|Launch_profile|Open_browser|Application_URL|Launch_URL|IIS_Express_Certificate|Hosting_model|Generate_applicationhost.config|Show_IIS_Express_output|Send_debug_request|Additional_IIS_Express_arguments|Static_method|URL|Session_name|Arguments|Solution_Configuration|Executable_file|Default_arguments|Optional_arguments}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectSettingsAvailable" : [ "{enum#boolean}" ],
        "providerClass" : [ "{util#class_name}" ],
        "useProjectSettings" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "modify.run.option", "remove.run.option", "add", "remove", "hints.shown", "option.navigate", "copy", "before.run.task.remove", "before.run.task.add", "before.run.task.edit" ]
      }
    }
  }, {
    "id" : "run.dashboard",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "run.dashboard.{enum#state}", "{enum:run.dashboard|third.party}", "{util#run_config}", "{enum:run.dashboard|added.run.configuration|removed.run.configuration}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "id" : [ "{util#run_config_id}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "run.target.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:creation.began|creation.cancelled|creation.succeeded}" ],
      "event_data" : {
        "step_number" : [ "{regexp#integer}" ],
        "type" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "rust.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:new_project_creation}" ],
      "event_data" : {
        "template" : [ "{enum:binary|library|wasm|proc_macro|custom}" ]
      }
    }
  }, {
    "id" : "rust.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cargo_projects|compile_time_targets|packages|editions}" ],
      "event_data" : {
        "build_script_dependency" : [ "{regexp#integer}" ],
        "build_script_workspace" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "dependencies" : [ "{enum:2015|2018|2021}" ],
        "dependency" : [ "{regexp#integer}" ],
        "direct_dependency" : [ "{regexp#integer}" ],
        "proc_macro_dependency" : [ "{regexp#integer}" ],
        "proc_macro_workspace" : [ "{regexp#integer}" ],
        "workspace" : [ "{regexp#integer}", "{enum:2015|2018|2021}" ]
      }
    }
  }, {
    "id" : "rust.toolchain",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compiler|rustup|type}" ],
      "event_data" : {
        "channel" : [ "{enum#channel}" ],
        "host_target" : [ "{enum#host_target}" ],
        "type" : [ "{enum#type}" ],
        "used" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "channel" : [ "stable", "beta", "nightly", "dev", "[default]" ],
        "host_target" : [ "i686-pc-windows-gnu", "i686-pc-windows-msvc", "i686-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-gnu", "x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu", "aarch64-apple-darwin", "aarch64-pc-windows-msvc" ],
        "type" : [ "local", "wsl", "none", "other" ]
      }
    }
  }, {
    "id" : "scala.project.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compiler.plugin|sbt.info|scala.lang.level}" ],
      "event_data" : {
        "name" : [ "{enum:kind-projector|bm4|better-tostring|splain|macro-paradise-plugin|acyclic|neme|silencer|semanticdb|wartremover|scalajs|nir}" ],
        "value" : [ "{regexp#version}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "search.everywhere.filters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:contributor.changed|file.type.changed|lang.changed|quick.filter.button}" ],
      "event_data" : {
        "buttonName" : [ "{enum:ALL|NONE|INVERT}" ],
        "contributorID" : [ "{util#se_contributor}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fileType" : [ "{util#file_type}" ],
        "langID" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "searchEverywhere",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "contributorID" : [ "{enum#__contributorID}", "{enum:SETextContributor}", "{enum:TextSearchContributor}" ],
        "currentTabId" : [ "{enum#__currentTabId}" ],
        "input_event" : [ "{util#shortcut}" ],
        "lang" : [ "{util#lang}" ],
        "selectedItemNumber" : [ "{regexp#integer}" ],
        "typedNavigationKeys" : [ "{regexp#integer}" ],
        "typedSymbolKeys" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__contributorID" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "RecentFilesSEContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "TopHitSEContributor", "RunConfigurationsSEContributor", "YAMLKeysSearchEverywhereContributor", "CommandsContributor", "FuzzySearchContributor", "third.party", "Vcs.Git", "UrlSearchEverywhereContributor", "GitSearchEverywhereContributor" ],
        "__currentTabId" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "FuzzySearchContributor", "third.party", "Vcs.Git" ],
        "__event_id" : [ "dialogOpen", "tabSwitched", "navigateThroughGroups", "contributorItemChosen", "moreItemChosen", "commandUsed", "commandCompleted", "dialogClosed", "sessionFinished" ]
      }
    }
  }, {
    "id" : "selenium.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:allure.reference.click|selenium.code.completion|selenoid.configure|selenoid.launch}" ],
      "event_data" : {
        "completion_type" : [ "{enum:html-tag|html-attribute|html-input-type|html-id|html-name|capability|css-property|css-class|css-pseudo|allure-username|allure-label}" ],
        "reference_type" : [ "{enum:web|username}", "{enum:label}" ]
      }
    }
  }, {
    "id" : "settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "_" : [ "GeneralSettings", "NotRoamableUiSettings", "UISettings", "PhpDebugGeneral", "PhpRefactoringSettings", "not.default", "invoked" ],
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "47"
    } ],
    "rules" : {
      "event_id" : [ "{enum:component_changed_option|component_changed}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.repository",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sync.settings}" ],
      "event_data" : {
        "sync_type" : [ "{enum:merge|overwrite_local|overwrite_remote}" ]
      }
    }
  }, {
    "id" : "shared.indexes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "averageDownloadSpeed" : [ "{regexp#integer}" ],
        "downloadTime" : [ "{regexp#integer}" ],
        "finishType" : [ "{enum:success|cancelled|error}" ],
        "indexId" : [ "{regexp#hash}" ],
        "kind" : [ "{enum#kind_enum}" ],
        "matchingFbIndexes" : [ "{regexp#integer}" ],
        "matchingStubIndexes" : [ "{regexp#integer}" ],
        "mismatchingFbIndexes" : [ "{util#index_id}" ],
        "mismatchingStubIndexes" : [ "{util#index_id}" ],
        "numberOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "packedSize" : [ "{regexp#integer}" ],
        "redundantFbIndexes" : [ "{regexp#integer}" ],
        "redundantStubIndexes" : [ "{regexp#integer}" ],
        "totalSizeOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "unpackedSize" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "local.index.loaded", "downloaded", "attached", "attach.failed.incompatible", "download.started", "download.finished" ],
        "kind_enum" : [ "project", "jdk", "mvn", "other", "python" ]
      }
    }
  }, {
    "id" : "shell.script",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "FilePathCompletionUsed", "BaseKeywordCompletionUsed", "ConditionKeywordCompletionUsed", "GenerateActionUsed", "ExternalFormatterDownloaded", "RenamingActionUsed", "QuickFixUsed", "SuppressInspectionUsed", "DisableInspectionUsed", "ExternalAnnotatorDownloaded", "DocumentationProviderUsed", "ExplainShellUsed" ]
      }
    }
  }, {
    "id" : "space",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "adv_explore_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|SHARE|CLONE}" ],
        "adv_overview_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|CLONE}" ],
        "auto" : [ "{enum#boolean}" ],
        "changes_loading_duration_ms" : [ "{regexp#integer}" ],
        "commits_selection_type" : [ "{enum:SINGLE|ALL|SUBSET_CONNECTED|SUBSET_SPLIT}" ],
        "details_tab_type" : [ "{enum:DETAILS|COMMITS}", "{enum:FILES}" ],
        "diffs_loading_duration_ms" : [ "{regexp#integer}" ],
        "edit_message_is_empty" : [ "{enum#boolean}" ],
        "filter_text_empty" : [ "{enum#boolean}" ],
        "loader_type" : [ "{enum:GIT|SPACE}" ],
        "login_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|SHARE|CLONE}" ],
        "login_status" : [ "{enum:CONNECTED|CONNECTING|DISCONNECTED}" ],
        "logout_place" : [ "{enum:ACTION|SETTINGS|MAIN_TOOLBAR|CLONE|AUTH_FAIL}" ],
        "new_message_is_pending" : [ "{enum#boolean}" ],
        "new_message_place" : [ "{enum:MAIN_CHAT|THREAD|DIFF|NEW_THREAD|FIRST_DISCUSSION_ANSWER|NEW_DISCUSSION}" ],
        "open_review_type" : [ "{enum:ENTER|DOUBLE_CLICK|ARROW}" ],
        "participant_edit_type" : [ "{enum:ADD|REMOVE}" ],
        "participant_role" : [ "{enum:Reviewer|Author|Watcher}" ],
        "place" : [ "{enum:REVIEW_FILES|REVIEW_COMMITS|CREATE_CODE_REVIEW|CREATE_MERGE_REQUEST}", "{util#place}" ],
        "quick_filter" : [ "{enum:OPEN|AUTHORED_BY_ME|NEEDS_MY_ATTENTION|NEEDS_MY_REVIEW|ASSIGNED_TO_ME|CLOSED}" ],
        "refresh_reviews_place" : [ "{enum:EMPTY_LIST|CONTEXT_MENU}" ],
        "review_diff_place" : [ "{enum:EDITOR|DIALOG}" ],
        "tab" : [ "{enum:INFO|FILES}" ],
        "type" : [ "{enum:CODE_REVIEW|MERGE_REQUEST}", "{enum:REVIEWER_ACCEPT|REVIEWER_WAITS_FOR_RESPONSE|REVIEWER_RESUME|REVIEWER_LEAVE|AUTHOR_WAITS_FOR_RESPONSE|AUTHOR_RESUME}", "{enum:ACTION|PREVIEW}" ],
        "with_participants" : [ "{enum#boolean}" ],
        "with_title" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "adv_explore_space", "adv_log_in_link", "adv_sign_up_link", "adv_watch_overview", "button_log_in", "button_log_out", "cancel_login", "chat_collapse_discussion", "chat_delete_message", "chat_discard_edit_message", "chat_discard_send_message", "chat_expand_discussion", "chat_open_thread", "chat_reopen_discussion", "chat_resolve_discussion", "chat_send_edit_message", "chat_send_message", "chat_start_edit_message", "clone_repo", "create_new_project", "open_git_settings_in_space", "open_main_toolbar_popup", "open_share_project", "open_space_clone_tab", "review_details_accept_changes", "review_details_add_participant_icon", "review_details_back_to_list", "review_details_change_commits_selection", "review_details_checkout_branch", "review_details_edit_participant", "review_details_open_project_in_space", "review_details_open_review_diff", "review_details_open_review_in_space", "review_details_resume_review", "review_details_select_details_tab", "review_details_show_timeline", "review_details_update_branch", "review_details_wait_for_response", "review_diff_close_leave_comment", "review_diff_leave_comment", "review_diff_loaded", "reviews_list_change_quick_filter", "reviews_list_change_text_filter", "reviews_list_log_in_link", "reviews_list_open_review", "reviews_list_refresh_action", "share_project", "start_creating_new_project", "create_review", "review_details_participant_action", "auto_auth_failed", "mark_as_unread", "open_ssh_settings_in_space", "mark_as_read", "open_diff", "create_review_opened", "create_review_back_to_list", "all_review_diff_loaded" ]
      }
    }
  }, {
    "id" : "space.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:associated_repos_state|automation_file_state|git_clone_type|login_status}" ],
      "event_data" : {
        "automation_file_exists" : [ "{enum#boolean}" ],
        "is_associated_with_space_repo" : [ "{enum#boolean}" ],
        "is_probably_contains_space_repo" : [ "{enum#boolean}" ],
        "login_status" : [ "{enum:CONNECTED|CONNECTING|DISCONNECTED}" ],
        "type" : [ "{enum:HTTPS|SSH}" ]
      }
    }
  }, {
    "id" : "spellchecker.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add.to.accepted.words.ui|remove.from.accepted.words.ui}" ]
    }
  }, {
    "id" : "spellchecker.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{enum:project-level|application-level}" ]
      },
      "enums" : {
        "__event_id" : [ "all.bundled.enabled", "max.spellchecker.suggestions", "custom.dict.count", "use.single.dict.to.save", "default.dict.to.save" ]
      }
    }
  }, {
    "id" : "ssh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:custom.ssh.tool.path|config.parser}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:LEGACY|OPENSSH}" ]
      }
    }
  }, {
    "id" : "startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "bootstrap", "splash", "appInit", "totalDuration", "projectFrameVisible", "splashShown" ]
      }
    }
  }, {
    "id" : "stash.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "create_branch" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "keep_index" : [ "{enum#boolean}" ],
        "message_entered" : [ "{enum#boolean}" ],
        "pop_stash" : [ "{enum#boolean}" ],
        "reinstate_index" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "stash.pop.started", "stash.push.dialog", "stash.pop.dialog", "stash.push.finished", "stash.pop.finished", "stash.push.started" ]
      }
    }
  }, {
    "id" : "status.bar.widgets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:widget}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{util#status_bar_widget_factory}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "suggested.refactorings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "declaration_type" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "rename.suggested", "rename.popup.shown", "rename.popup.canceled", "rename.performed", "changeSignature.performed", "changeSignature.popup.canceled", "changeSignature.popup.shown", "changeSignature.suggested" ]
      }
    }
  }, {
    "id" : "surround.with",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{util#surround_with_id}", "{enum:surrounder.executed|live.template.executed|custom.template.executed}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "class" : [ "{util#class_name}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "title" : [ "{enum#server_title}" ],
        "type" : [ "{enum#surround_with_type}" ]
      },
      "enums" : {
        "server_title" : [ "Postfix", "TextMate snippet", "Emmet" ],
        "surround_with_type" : [ "surrounder", "template", "custom.template" ]
      }
    }
  }, {
    "id" : "svn.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:working.copy}" ],
      "event_data" : {
        "format" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "swagger.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:run.codegen.configuration.action|edit.codegen.configuration.action|edit.remote.specifications.endpoints|add.remote.specification}" ]
    }
  }, {
    "id" : "symsrv",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:storages|ms.server.added|enabled|servers}" ],
      "event_data" : {
        "enabled" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "system.os",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#os}", "{enum#__event_id}" ],
      "event_data" : {
        "build" : [ "{regexp#integer}" ],
        "distro" : [ "{enum:almalinux|alpine|amzn|arch|bunsenlabs|centos|chromeos|debian|deepin|devuan|elementary|fedora|galliumos|garuda|gentoo|kali|linuxmint|mageia|manjaro|neon|nixos|ol|opensuse-leap|opensuse-tumbleweed|parrot|pop|pureos|raspbian|rhel|rocky|rosa|sabayon|slackware|solus|ubuntu|void|zorin|other|unknown}", "{enum:endeavouros}" ],
        "id" : [ "{regexp#hash}", "{enum:unknown}" ],
        "locale" : [ "{enum#__locale}" ],
        "name" : [ "{enum#os}" ],
        "release" : [ "{enum#linux}", "{regexp#version}" ],
        "revision" : [ "{regexp#integer}" ],
        "shell" : [ "{enum:sh|ash|bash|csh|dash|fish|ksh|tcsh|xonsh|zsh|nu|other|unknown}" ],
        "time_zone" : [ "{regexp#time_zone}" ],
        "value" : [ "{regexp#time_zone}", "{regexp#hash}", "{enum:unknown}" ],
        "version" : [ "{regexp#version}", "{enum:unknown.format}", "{enum#__version}" ],
        "wsl" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "os.name", "os.timezone", "machine.id", "linux", "windows" ],
        "__locale" : [ "cs", "da", "de", "en", "es", "fr", "hi", "ja", "ko", "nb", "nl", "nn", "no", "pl", "pt", "ro", "ru", "sv", "tr", "uk", "vi", "zh", "hu", "yo", "ur", "ig", "ml", "in", "mr", "uz", "el", "it", "am", "my", "ar", "as", "ne", "az", "fa", "zu", "rw", "bn", "sd", "si", "so", "kk", "kn", "or", "ta", "gu", "pa", "te", "th", "ha" ],
        "__version" : [ "6.0", "6.1", "6.2", "6.3", "10.0" ],
        "linux" : [ "unknown", "alpine", "amzn", "antergos", "arch", "centos", "debian", "deepin", "elementary", "fedora", "galliumos", "gentoo", "kali", "linuxmint", "manjaro", "neon", "nixos", "ol", "opensuse", "opensuse-leap", "opensuse-tumbleweed", "freedesktop", "parrot", "raspbian", "rhel", "sabayon", "solus", "ubuntu", "zorin", "custom" ]
      },
      "regexps" : {
        "time_zone" : "((\\+|\\-)\\d\\d(\\:|\\_)\\d\\d)|Z"
      }
    }
  }, {
    "id" : "system.runtime",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "arch" : [ "{enum#__arch}" ],
        "bit" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "gigabytes" : [ "{regexp#integer}" ],
        "index_partition_free" : [ "{regexp#integer}" ],
        "index_partition_size" : [ "{regexp#integer}" ],
        "name" : [ "{enum#gc}", "{enum#jvm_option}", "{enum#__name}", "{enum:splash|nosplash}", "{enum:Metal|OpenGL}" ],
        "value" : [ "{regexp#integer}", "{enum#boolean}" ],
        "vendor" : [ "{enum#jvm_vendor}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "cores", "garbage.collector", "jvm", "jvm.bit", "jvm.option" ],
        "__arch" : [ "x86", "x86_64", "arm64", "other", "unknown" ],
        "__event_id" : [ "cores", "garbage.collector", "jvm.option", "jvm", "debug.agent", "memory.size", "swap.size", "disk.size", "jvm.client.properties", "rendering.pipeline" ],
        "__name" : [ "Serial", "Unknown", "CMS", "Epsilon", "G1", "Z", "Parallel", "Other" ],
        "gc" : [ "Shenandoah", "G1_Young_Generation", "G1_Old_Generation", "Copy", "MarkSweepCompact", "PS_MarkSweep", "PS_Scavenge", "ParNew", "ConcurrentMarkSweep" ],
        "jvm_option" : [ "Xmx", "Xms", "SoftRefLRUPolicyMSPerMB", "ReservedCodeCacheSize" ],
        "jvm_vendor" : [ "JetBrains", "Apple", "Oracle", "Sun", "IBM", "Azul", "Other" ]
      }
    }
  }, {
    "id" : "terminalShell",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "os-version" : [ "{regexp#version}" ],
        "runAnythingProvider" : [ "{util#class_name}" ],
        "shell" : [ "{enum#__shell}" ],
        "terminalCommandHandler" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__event_id" : [ "ssh.exec", "local.exec", "terminal.command.executed", "terminal.smart.command.executed", "terminal.smart.command.not.executed" ],
        "__shell" : [ "bash", "cmd", "zsh", "other", "fish", "powershell", "sh", "wsl", "cmder_shell", "tcsh", "git-bash", "cmder", "pwsh", "git-cmd", "git", "activate", "init", "ubuntu", "ubuntu1804", "anaconda3", "cexec", "cygwin", "miniconda3", "msys2_shell" ]
      }
    }
  }, {
    "id" : "tms.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tms.content_displayed}" ],
      "event_data" : {
        "tms_service_id" : [ "{enum:Gauge|Local|TestRail}", "{enum:MdLocalTms}" ]
      }
    }
  }, {
    "id" : "toolbar",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{util#action}", "{enum:clicked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "tooltip.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute|show.all|show.description}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "source" : [ "{enum:gear|shortcut|more.link}" ]
      }
    }
  }, {
    "id" : "toolwindow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#toolwindow}", "{enum:activated|shown|hidden}" ],
      "event_data" : {
        "Location" : [ "{enum#__Location}" ],
        "Source" : [ "{enum:StripeButton|ToolWindowHeader|ToolWindowHeaderAltClick|Content|Switcher|SwitcherSearch|ToolWindowsWidget|RemoveStripeButtonAction|HideOnShowOther|HideSide|CloseFromSwitcher|ActivateActionMenu|ActivateActionKeyboardShortcut|ActivateActionGotoAction|ActivateActionOther|CloseAction|HideButton|HideToolWindowAction|HideSideWindowsAction|HideAllWindowsAction|JumpToLastWindowAction}", "{enum:ToolWindowSwitcher}", "{enum:SquareStripeButton}", "{enum:InspectionsWidget}" ],
        "ViewMode" : [ "{enum#__ViewMode}" ],
        "id" : [ "{util#toolwindow}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__Location" : [ "Left_Top", "Left_Bottom", "Bottom_Left", "Bottom_Right", "Right_Bottom", "Right_Top", "Top_Right", "Top_Left", "BottomRight", "BottomLeft", "LeftTop", "LeftBottom", "RightTop", "TopRight", "RightBottom", "TopLeft" ],
        "__ViewMode" : [ "Dock_Pinned", "DockPinned", "Dock_Unpinned", "DockUnpinned", "Undock", "Float", "Window" ]
      }
    }
  }, {
    "id" : "trusted_projects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "agree-to-load" : [ "{enum#boolean}" ],
        "choice" : [ "{enum:IMPORT|OPEN_WITHOUT_IMPORTING|CANCEL}", "{enum:TRUST_AND_OPEN|OPEN_IN_SAFE_MODE}" ]
      },
      "enums" : {
        "__event_id" : [ "load_untrusted_project_confirmation", "open_new_project", "project_implicitly_trusted_by_path", "project_implicitly_trusted_by_url", "read_more_from_notification_banner", "trust_host_checkbox_selected", "trust_project_from_notification_banner", "trust_location_checkbox_selected" ]
      }
    }
  }, {
    "id" : "ui.accessibility.screen.reader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "screen.reader.{enum:ENABLED|DISABLED}" ]
    }
  }, {
    "id" : "ui.dialogs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{util#dialog_class}", "{enum:show|close|help.clicked}" ],
      "event_data" : {
        "code" : [ "{enum:0|1|2}" ],
        "dialog_class" : [ "{util#dialog_class}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum:show|close}" ]
      }
    }
  }, {
    "id" : "ui.editor.color.schemes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:enabled.color.scheme}" ],
      "event_data" : {
        "is_dark" : [ "{enum#boolean}" ],
        "scheme" : [ "{enum#__scheme}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_сontrast", "ReSharper", "Rider", "Other" ],
        "__scheme" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other", "IntelliJ_Light" ]
      }
    }
  }, {
    "id" : "ui.event",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "expand" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "recursive" : [ "{enum#boolean}" ],
        "target_class" : [ "{util#class_name}" ],
        "with_selection" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "ProgressPaused", "ProgressResumed", "NavBarShowPopup", "NavBarNavigate", "BreadcrumbShowTooltip", "BreadcrumbNavigate", "DumbModeDialogWasNotNeeded", "DumbModeDialogRequested", "DumbModeDialogShown", "DumbModeDialogCancelled", "DumbModeDialogFinished", "DumbModeDialogProceededToActions", "IncrementalSearchActivated", "IncrementalSearchKeyTyped", "IncrementalSearchCancelled", "IncrementalSearchNextPrevItemSelected", "DumbModeBalloonWasNotNeeded", "DumbModeBalloonRequested", "DumbModeBalloonShown", "DumbModeBalloonCancelled", "DumbModeBalloonProceededToActions", "ShowUsagesPopupShowSettings", "LookupExecuteElementAction", "ToolWindowsWidgetPopupClicked", "ToolWindowsWidgetPopupShown", "LookupShowElementActions", "ImplementationViewComboBoxSelected", "ImplementationViewToolWindowOpened", "DaemonEditorPopupInvoked", "HectorPopupDisplayed", "EditorFoldingIconClicked", "QuickNavigateInfoPopupShown", "EditorAnnotationClicked", "StatusBarWidgetClicked", "StatusBarPopupShown", "CtrlMouseHintShown" ]
      }
    }
  }, {
    "id" : "ui.fonts",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "UI.font.size[{regexp#integer}]", "Presentation.mode.font.size[{regexp#integer}]", "Editor.font.size[{regexp#integer}]", "IDE.editor.font.size[{regexp#integer}]", "Console.font.size[{regexp#integer}]", "QuickDoc.font.size[{enum#_}]", "UI.font.name[{enum#font}]", "Editor.font.name[{enum#font}]", "IDE.editor.font.name[{enum#font}]", "Console.font.name[{enum#font}]", "{enum#metrics}" ],
      "event_data" : {
        "font_name" : [ "{enum#font}" ],
        "font_size" : [ "{regexp#integer}", "{enum#_}" ],
        "font_size_2d" : [ "{regexp#float}" ],
        "line_spacing" : [ "{regexp#float}" ],
        "value" : [ "{regexp#float}" ]
      },
      "enums" : {
        "_" : [ "X_SMALL", "X_LARGE", "XX_SMALL", "XX_LARGE", "SMALL", "MEDIUM", "LARGE" ],
        "font" : [ "Monospaced", "Menlo", "DejaVu_Sans_Mono", ".SFNSText-Regular", "Fira_Code", "Lucida_Grande", "Source_Code_Pro", "Segoe_UI", "Ubuntu", ".SF_NS_Text", "Consolas", "Noto_Sans_Regular", "Microsoft_YaHei", "Fira_Code_Retina", "Cantarell_Regular", "Microsoft_YaHei_UI", "Monaco", "Noto_Sans", "Dialog.plain", "Fira_Code_Medium", "Courier_New", "Tahoma", "Hack", "DejaVu_Sans", "Ubuntu_Mono", "Droid_Sans_Mono", "Dialog", "Inconsolata", "Malgun_Gothic", "Cantarell", "DialogInput", "Yu_Gothic_UI_Regular", "Roboto", "Liberation_Mono", "Lucida_Console", "D2Coding", "Lucida_Sans_Typewriter", "Fira_Code_Light", "Droid_Sans", "Verdana", "Arial", "Roboto_Mono", "Segoe_UI_Semibold", "SF_Mono", "Droid_Sans_Mono_Slashed", "LucidaGrande", "Operator_Mono", "Ayuthaya", "Hasklig", "Iosevka", "Andale_Mono", "Anonymous_Pro", "Anonymous_Pro_for_Powerline", "D2Coding_ligature", "Dank_Mono", "DejaVu_Sans_Mono_for_Powerline", "Fantasque_Sans_Mono", "Fira_Mono_for_Powerline", "Hack_Nerd_Font", "IBM_Plex_Mono", "Meslo_LG_L_DZ_for_Powerline", "Meslo_LG_M_for_Powerline", "Meslo_LG_S_for_Powerline", "Microsoft_YaHei_Mono", "Noto_Mono_for_Powerline", "Noto_Sans_Mono", "PT_Mono", "PragmataPro", "SourceCodePro+Powerline+Awesome_Regular", "Source_Code_Pro_Semibold", "Source_Code_Pro_for_Powerline", "Ubuntu_Mono_derivative_Powerline", "YaHei_Consolas_Hybrid", "mononoki", "Bitstream_Vera_Sans_Mono", "Comic_Sans_MS", "Courier_10_Pitch", "Cousine", "2Coding_ligature", "Droid_Sans_Mono_Dotted", "Inconsolata-dz", "Input", "Input_Mono", "Meslo_LG_M_DZ_for_Powerline", "Migu_2M", "Monoid", "Operator_Mono_Book", "Operator_Mono_Lig", "Operator_Mono_Medium", "Abadi_MT_Condensed_Extra_Bold", "Al_Bayan", "Meiryo", "Microsoft_JhengHei", "Microsoft_Yahei_UI", "SansSerif", "Ubuntu_Light", "JetBrains_Mono", ".AppleSystemUIFont", ".SFNS-Regular" ],
        "metrics" : [ "UI", "Presentation.mode", "Editor", "IDE.editor", "Console", "QuickDoc", "editor.lineSpacing" ]
      }
    }
  }, {
    "id" : "ui.hidpi.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:per_monitor_dpi|system_dpi}" ]
    }
  }, {
    "id" : "ui.info.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "Recent.Files[{enum:30_50|more.than.50|15_30|15}]", "Tabs.{enum:Top|None|Right|Left|Bottom}", "Allow.merging.buttons.{enum#state}", "Tool.Window.buttons.{enum:hidden|visible}", "Toolbar.and.NavBar.{enum:hidden|visible}", "Toolbar.{enum:hidden|visible}", "Nav.Bar.{enum:hidden|visible|floating}", "Status.bar.{enum:visible|hidden}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "display_id" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "grouped" : [ "{enum:[30_50]|[more.than.50]|[15_30]|[15]}" ],
        "navbar" : [ "{enum:visible|hidden}" ],
        "scale" : [ "{regexp#float}" ],
        "scale_mode" : [ "{enum#boolean}" ],
        "toolbar" : [ "{enum:visible|hidden}" ],
        "value" : [ "{enum:visible|floating}", "{enum:visible|hidden}", "{enum:Top|None|Right|Left|Bottom}", "{enum#look_and_feel}", "{enum:per_monitor_dpi|system_dpi}", "{regexp#integer}", "{regexp#integer}x{regexp#integer}", "{regexp#integer}x{regexp#integer}_({regexp#integer}%)" ]
      },
      "enums" : {
        "_" : [ "recent.files", "Gutter.Icons", "Line.Numbers", "Toolbar.and.NavBar", "Show.tips.on.startup", "Retina", "Soft.Wraps", "Block.cursor", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate" ],
        "__event_id" : [ "Nav.Bar", "Toolbar", "Status.bar", "Tool.Window.buttons", "Toolbar.and.NavBar", "Recent.files.limit", "Show.Editor.Tabs.In.Single.Row", "Hide.Editor.Tabs.If.Needed", "Block.cursor", "Line.Numbers", "Gutter.Icons", "Soft.Wraps", "Tabs", "Retina", "Show.tips.on.startup", "Allow.merging.buttons", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate", "Look.and.Feel", "Hidpi.Mode", "Screen.Reader", "Screen.Scale", "Nav.Bar.members", "QuickListsCount", "Number.Of.Monitors", "Screen.Resolution", "laf.autodetect" ]
      }
    }
  }, {
    "id" : "ui.look.and.feel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "IntelliJ", "Gray", "High_contrast", "Light", "Dark_purple", "Cyan_light", "Rider_Dark", "Darcula" ]
      }
    }
  }, {
    "id" : "ui.mnemonic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:mnemonic.used}" ],
      "event_data" : {
        "type" : [ "{enum:mac.alt.based|regular|mac.regular}" ]
      }
    }
  }, {
    "id" : "ui.screen.scale",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#integer}", "{regexp#integer}.{regexp#integer}", "ScaledMode_{regexp#integer}", "ScaledMode_{regexp#integer}.{regexp#integer}" ]
    }
  }, {
    "id" : "ui.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{util#class_name}", "{enum#__event_id}" ],
      "event_data" : {
        "characters" : [ "{regexp#integer}" ],
        "configurable" : [ "{util#class_name}" ],
        "hits" : [ "{regexp#integer}" ],
        "modifiedOnly" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#type}" ]
      },
      "enums" : {
        "__event_id" : [ "select", "reset", "apply", "search", "advanced.settings.search" ],
        "type" : [ "select", "apply", "reset" ]
      }
    }
  }, {
    "id" : "ui.tips",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "algorithm" : [ "{enum#__algorithm}", "{enum:ONE_TIP_SURROUNDWITH_SUMMER2020|ONE_TIP_EXTENDSELECTION_SUMMER2020|ONE_TIP_SWITCHER_SUMMER2020|LOCAL_SORT_SUMMER2020}", "{enum:tip_utility_and_ignore_used|tip_utility}", "{enum:random_ignore_used}" ],
        "feature_id" : [ "{util#tip_info}" ],
        "filename" : [ "{util#tip_info}" ],
        "keep_showing_after" : [ "{enum#boolean}" ],
        "keep_showing_before" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time_passed" : [ "{regexp#integer}" ],
        "type" : [ "{enum#type}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "shown.automatically", "shown.manually", "dialog.shown", "next.tip", "previous.tip" ],
        "__algorithm" : [ "TOP", "MATRIX_ALS", "MATRIX_BPR", "PROB", "WIDE", "CODIS", "RANDOM", "WEIGHTS_LIN_REG", "default_shuffle", "unknown", "ONE_TIP_SUMMER2020", "RANDOM_SUMMER2020" ],
        "__event_id" : [ "tip.shown", "dialog.shown", "next.tip", "previous.tip", "dialog.closed", "tip.performed" ],
        "type" : [ "automatically", "manually" ]
      }
    }
  }, {
    "id" : "usage.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_first_results_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "new" : [ "{util#scopeRule}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "previous" : [ "{util#scopeRule}" ],
        "reference_class" : [ "{util#class_name}" ],
        "results_total" : [ "{regexp#integer}" ],
        "scope" : [ "{util#scopeRule}" ],
        "symbol" : [ "{util#class_name}" ],
        "too_many_result_warning" : [ "{enum#boolean}" ],
        "ui_location" : [ "{enum:ShowUsagesPopup|FindToolWindow}" ],
        "userAction" : [ "{enum:Shown|Aborted|Continued}" ]
      },
      "enums" : {
        "__event_id" : [ "usage.navigate", "usage.shown", "tooManyResultsDialog", "scope.changed", "switch.tab", "item.chosen", "finished", "started", "open.in.tool.window" ]
      }
    }
  }, {
    "id" : "user.advanced.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}" ],
      "event_data" : {
        "is_jb_team" : [ "{enum#boolean}" ],
        "metadata" : [ "{regexp#license_metadata}", "{enum:unknown}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "eap", "release", "evaluation", "license", "build", "licencing" ],
        "value" : [ "eap", "release", "evaluation", "license" ]
      }
    }
  }, {
    "id" : "vcs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changesDelta" : [ "{regexp#integer}" ],
        "clone_dialog_extension" : [ "{util#class_name}", "{enum:org.jetbrains.plugins.github.ui.cloneDialog.GHECloneDialogExtensionComponent|org.jetbrains.plugins.github.ui.cloneDialog.GHCloneDialogExtensionComponent|com.intellij.util.ui.cloneDialog.RepositoryUrlCloneDialogExtension.RepositoryUrlMainExtensionComponent|com.intellij.space.vcs.clone.SpaceCloneComponent}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unversionedDelta" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}" ],
        "wasUpdatingBefore" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.started", "update.finished", "commit.started", "commit.finished", "fetch.started", "fetch.finished", "non.modal.commit.state.changed", "non.modal.commit.promotion.shown", "non.modal.commit.promotion.accepted", "non.modal.commit.promotion.rejected", "changes.view.refresh", "cloned.project.opened", "clone.invoked", "clm.refresh.finished", "clm.refresh.started" ]
      }
    }
  }, {
    "id" : "vcs.application.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:commit.from.local.changes|non.modal.commit|non.modal.commit.new.installation|non.modal.commit.promotion}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:shown|accepted|rejected}" ]
      }
    }
  }, {
    "id" : "vcs.back.forward.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "editor", "local.changes", "project.view", "vcs.log", "diff.viewer", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.change.reminder",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum:changelist_changed|changes_committed|node_expanded}" ],
      "event_data" : {
        "committed_files" : [ "{regexp#hash}" ],
        "cur_modified_files" : [ "{regexp#hash}" ],
        "displayed_prediction" : [ "{regexp#hash}" ],
        "empty_reason" : [ "{enum#__empty_reason}", "{enum:graph_changed|traverser_invalid}" ],
        "execution.time" : [ "{regexp#integer}" ],
        "execution_time" : [ "{regexp#integer}" ],
        "prediction_for_files" : [ "{regexp#hash}" ],
        "prev_modified_files" : [ "{regexp#hash}" ],
        "show.dialog.time" : [ "{regexp#integer}" ],
        "show_dialog_time" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "_" : [ "handler.registered", "plugin.disabled", "dialog.closed", "committed.anyway", "commit.canceled", "not.showed", "prediction.calculated" ],
        "__empty_reason" : [ "service_init", "too_many_files", "data_manager_removed", "requirements_not_met", "data_pack_is_not_full", "data_pack_changed", "exception_thrown", "calculation_canceled", "unexpected_reason" ]
      }
    }
  }, {
    "id" : "vcs.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cloning.started|cloning.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "status" : [ "{enum:SUCCESS|PROGRESS|FAILURE|CANCEL}" ]
      }
    }
  }, {
    "id" : "vcs.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "is_base_dir" : [ "{enum#boolean}" ],
        "is_project_mapping" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "vcs" : [ "{enum#vcs}", "{enum:None}" ]
      },
      "enums" : {
        "__event_id" : [ "active.vcs", "mapping", "project.mapped.root", "mapped.roots", "changelists", "unversioned.files", "ignored.files" ]
      }
    }
  }, {
    "id" : "vcs.diff",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "ignore.policy.{enum#_}.{enum#_}", "highlight.policy.{enum#_}.{enum#_}", "show.warnings.policy.{enum#_}.{enum#_}", "collapse.unchanged.{enum#_}", "collapse.unchanged.{enum#_}.{enum#_}", "show.line.numbers.{enum#_}.{enum#_}", "use.soft.wraps.{enum#_}", "use.soft.wraps.{enum#_}.{enum#_}", "use.unified.diff.{enum#_}.{enum#_}", "enable.read.lock.{enum#_}.{enum#_}", "iterate.next.file.{enum#_}", "external.diff.{enum#_}", "external.diff.default.{enum#_}", "external.merge.{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "diff_place" : [ "{enum#diff_place}", "{enum:Default|ChangesView|VcsLogView|VcsFileHistoryView|CommitDialog|Merge|TestsFiledAssertions}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{enum:TOP|BOTTOM|HIDDEN}", "{regexp#integer}" ]
      },
      "enums" : {
        "_" : [ "Default", "default", "trim_whitespaces", "TRIM_WHITESPACES", "ignore_whitespaces", "IGNORE_WHITESPACES_CHUNKS", "ignore_whitespaces_chunks", "formatting", "by_line", "by_word", "by_word_split", "BY_WORD_SPLIT", "by_char", "do_not_highlight", "inspections", "advanced", "simple", "enabled", "disabled", "ChangesView", "VcsLogView", "CommitDialog", "Merge", "TestsFiledAssertions" ],
        "__event_id" : [ "show.breadcrumbs", "use.external.diff.by.default", "show.indent.lines", "use.unified.diff", "iterate.next.file", "use.soft.wraps", "context.range", "ignore.policy", "show.line.numbers", "collapse.unchanged", "show.white.spaces", "enable.read.lock", "use.external.diff", "show.warnings.policy", "merge.enable.lst.markers", "aligned.changes", "sync.scroll", "merge.apply.non.conflicted", "use.external.merge", "highlight.policy", "enable.external.diff.tools" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External" ],
        "value" : [ "INSPECTIONS", "ADVANCED", "SIMPLE", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "BOTTOM", "TOP" ]
      }
    }
  }, {
    "id" : "vcs.diff.trigger",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "toggle.highlight.policy.{enum#_}", "toggle.ignore.policy.{enum#_}", "toggle.diff.tool.{enum#_}", "toggle.diff.tool.third.party.other", "{enum#_1}" ],
      "event_data" : {
        "diff_place" : [ "{enum#diff_place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "Side-by-side_viewer", "Unified_viewer", "Binary_file_viewer" ],
        "_1" : [ "toggle.highlight.policy", "toggle.ignore.policy", "toggle.diff.tool" ],
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External", "unknown" ],
        "value" : [ "Side-by-side_viewer", "Binary_file_viewer", "Unified_viewer", "Error_viewer", "Patch_content_viewer", "Apply_patch_somehow", "Data_Diff_Viewer", "Database_Schema_Diff_Viewer", "Directory_viewer", "SVN_properties_viewer", "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING", "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT" ]
      }
    }
  }, {
    "id" : "vcs.git.project.root",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "base.dir.undefined.{enum#state}", "has.default.git.mapping.{enum#state}", "has.other.vcses.mappings.{enum#state}", "git.mappings.count.{regexp#count}", "git.detected.roots.count.{regexp#count}", "project.mapping.roots.count.{regexp#count}", "single.mapping.{enum#dir}", "singe.base.mapping.{enum#dir}" ],
      "enums" : {
        "dir" : [ "is.base.dir", "above.base.dir", "under.base.dir" ]
      }
    }
  }, {
    "id" : "vcs.git.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "config.repo.sync.{enum#sync_state}", "config.update.type.{enum#upd_method}", "config.save.policy.{enum#upd_changes}", "config.ssh.{enum#state}", "config.push.autoupdate.{enum#state}", "config.push.update.all.roots.{enum#state}", "config.cherry-pick.autocommit.{enum#state}", "config.warn.about.crlf.{enum#state}", "config.warn.about.detached.{enum#state}", "data.local.branches.count.{regexp#count}", "data.remote.branches.count.{regexp#count}", "data.remotes.in.project.{regexp#count}", "data.remote.servers.{enum#_}.{regexp#count}", "version" ],
      "event_data" : {
        "type" : [ "{enum#type}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "_" : [ "github.com", "gitlab.com", "bitbucket.org", "github.custom", "gitlab.custom", "bitbucket.custom" ],
        "sync_state" : [ "SYNC", "DONT_SYNC", "NOT_DECIDED" ],
        "type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL" ],
        "upd_changes" : [ "STASH", "SHELVE" ],
        "upd_method" : [ "BRANCH_DEFAULT", "MERGE", "REBASE" ]
      }
    }
  }, {
    "id" : "vcs.github",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "github.accounts.count.{regexp#count}", "github.accounts.not.default.host.{enum#state}", "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequest.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:timeline.opened|diff.opened|merged|server.meta.collected}" ],
      "event_data" : {
        "anonymized_id" : [ "{regexp#hash}" ],
        "count" : [ "{regexp#integer}" ],
        "method" : [ "{enum:MERGE|SQUASH|REBASE}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequests",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:toolwindow}" ],
      "event_data" : {
        "initialized_tabs" : [ "{regexp#integer}" ],
        "tabs" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vcs.log.data",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "commit.count.{regexp#count}", "branches.count.{regexp#count}", "users.count.{regexp#count}", "third.party.root.count.{regexp#count}", "{enum#vcs}.root.count.{regexp#count}", "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}", "{enum:third.party}" ]
      },
      "enums" : {
        "__event_id" : [ "commit.count", "branches.count", "users.count", "root.count", "dataInitialized" ]
      }
    }
  }, {
    "id" : "vcs.log.index.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "big.repositories.{regexp#count}", "index.disabled.in.registry.{enum#state}", "index.forced.in.registry.{enum#state}", "{enum:big.repositories|index.disabled.in.registry|index.forced.in.registry}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.log.index.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "indexing.too.long.notification.{regexp#count}", "resume.indexing.click.{regexp#count}", "indexing.time.minutes.{regexp#count}", "index.disabled.in.project.{enum#state}", "{enum#_}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "os" : [ "{enum#os}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "_" : [ "indexing.too.long.notification", "resume.indexing.click", "indexing.time.minutes", "index.disabled.in.project" ]
      }
    }
  }, {
    "id" : "vcs.log.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "log.Go_to_{enum#_}_Commit.Select_from_Popup", "history.Go_to_{enum#_}_Commit.Select_from_Popup", "log.{enum#vcs_trigger}", "history.{enum#vcs_trigger}", "{enum#vcs_trigger}", "{util#vcs_log_trigger_event_id}", "{enum#__event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "context" : [ "{enum:history|log}" ],
        "filter_name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}" ],
        "has_revision" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:multiple|folder|file}" ],
        "parent_commit" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{enum:node|arrow|root.column}" ]
      },
      "enums" : {
        "_" : [ "Parent", "Child" ],
        "__event_id" : [ "action.called", "tab.navigated", "column.reset", "table.clicked", "filter.set", "history.shown" ],
        "vcs_trigger" : [ "com.intellij.vcs.log.ui.actions.RefreshLogAction", "com.intellij.vcs.log.ui.actions.GoToHashOrRefAction", "VcsLogCreatePatchActionProvider$Dialog", "VcsLogCreatePatchActionProvider$Clipboard", "UserFilterSet", "ToggleLogColumnsActionGroup$ToggleColumnAction", "TextFilterSet", "StructureFilterSet", "ShowDiffAfterWithLocalFromLogActionProvider", "ShowCommitTooltipAction", "RootsFilterSet", "RootColumnClick", "RefreshLogAction", "Refresh", "RangeFilterSet", "OpenAnotherLogTabAction", "HashFilterSet", "GraphNodeClick", "GraphArrowClick", "Go_to_Parent_Commit.Select_from_Popup", "Go_to_Child_Commit.Select_from_Popup", "Go_To_Hash/Branch/Tag", "GoToParentRowAction", "GoToHashOrRefAction", "GoToChildRowAction", "FocusTextFilterAction", "Expand_Linear_Branches", "ExpandGraphAction", "DeepCompareAction", "DateFilterSet", "CompareRevisionsFromLogAction", "CollapseGraphAction", "BranchFilterSet", "com.intellij.vcs.log.ui.actions.history.CompareRevisionsFromFileHistoryActionProvider", "Show_Diff", "ShowDiffAfterWithLocalFromFileHistoryActionProvider", "ShowAllAffectedFromHistoryAction", "OpenRepositoryVersionFromHistoryAction", "GetVersionFromHistoryAction", "CreatePatchFromHistoryActionProvider$Dialog", "Compare_with_Local", "CompareRevisionsFromFolderHistoryActionProvider", "CompareRevisionsFromFileHistoryActionProvider", "AnnotateRevisionFromHistoryAction", "TableRowClick", "TabNavigation", "ShowFolderHistory", "ShowFileHistoryForRevision", "ShowFileHistory", "ColumnWidthReset" ]
      }
    }
  }, {
    "id" : "vcs.log.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{enum:MY_COMMITS|MERGE_COMMITS|CURRENT_BRANCH|THIRD_PARTY}" ],
        "name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}", "{enum:default.author|default.hash|default.date}" ],
        "value" : [ "{enum:Normal|Bek|LinearBek}" ]
      },
      "enums" : {
        "__event_id" : [ "onlyAffectedChanges", "textFilter.matchCase", "labels.onTheLeft", "long.edges", "details", "parentChanges", "roots", "diffPreview", "uiInitialized", "filter", "column", "labels.showTagNames", "labels.compact", "sort", "highlighter", "textFilter.regex", "diffPreviewOnTheBottom", "additionalTabs" ]
      }
    }
  }, {
    "id" : "vcs.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "active.changelists.count.{regexp#count}", "unversioned.files.count.{regexp#count}", "ignored.files.count.{regexp#count}", "vcs.roots.count.{regexp#count}", "has.default.vcs.root.mapping.{enum#state}" ]
    }
  }, {
    "id" : "vcs.names",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "third.party.{util#plugin}", "third.parth.other", "{enum#vcs}" ]
    }
  }, {
    "id" : "vcs.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "offer.move.partially.committed{enum#_1}", "offer.move.failed.committed.{enum#_}", "offer.remove.empty.changelist.{enum#_}", "changelist.make.new.active{enum#_1}", "changelist.preselect.existing{enum#_1}", "perform.update.in.background{enum#_1}", "perform.commit.in.background{enum#_1}", "perform.edit.in.background{enum#_1}", "perform.checkout.in.background{enum#_1}", "perform.add_remove.in.background{enum#_1}", "perform.rollback.in.background{enum#_1}", "commit.before.check.code.smell{enum#_1}", "commit.before.check.code.cleanup{enum#_1}", "commit.before.check.todo{enum#_1}", "commit.before.check.non.empty.comment{enum#_1}", "commit.before.optimize.imports{enum#_1}", "commit.before.reformat.project{enum#_1}", "commit.before.rearrange{enum#_1}", "commit.clear.initial.comment{enum#_1}", "commit.use.right.margin{enum#_1}", "commit.show.unversioned{enum#_1}", "show.changes.preview{enum#_1}", "include.text.into.shelf{enum#_1}", "check.conflicts.in.background{enum#_1}" ],
      "enums" : {
        "_" : [ "ask", "disabled", "silently", "unknown" ],
        "_1" : [ "", ".disabled" ]
      }
    }
  }, {
    "id" : "vcs.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#_}", "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}" ]
      },
      "enums" : {
        "_" : [ "offer.move.partially.committed", "offer.move.failed.committed", "offer.remove.empty.changelist", "changelist.make.new.active", "changelist.preselect.existing", "perform.update.in.background", "perform.commit.in.background", "perform.edit.in.background", "perform.checkout.in.background", "perform.add_remove.in.background", "perform.rollback.in.background", "commit.before.check.code.smell", "commit.before.check.code.cleanup", "commit.before.check.todo", "commit.before.check.non.empty.comment", "commit.before.optimize.imports", "commit.before.reformat.project", "commit.before.rearrange", "commit.clear.initial.comment", "commit.use.right.margin", "commit.show.unversioned", "show.changes.preview", "include.text.into.shelf", "check.conflicts.in.background" ],
        "__event_id" : [ "offer.move.failed.committed", "commit.before.check.code.smell", "commit.before.check.non.empty.comment", "changelist.preselect.existing", "commit.use.right.margin", "offer.remove.empty.changelist", "show.changes.preview", "commit.before.optimize.imports", "include.text.into.shelf", "offer.move.partially.committed", "commit.before.reformat.project", "commit.before.check.todo", "commit.show.unversioned", "check.conflicts.in.background", "commit.before.check.code.cleanup", "commit.clear.initial.comment", "commit.before.rearrange", "changelist.make.new.active", "asked.add.external.files", "asked.share.project.configuration.files", "share.project.configuration.files", "add.external.files.silently" ],
        "value" : [ "ask", "disabled", "silently", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.svn.format",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{regexp#version}" ]
    }
  }, {
    "id" : "vfs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:refreshed|events|refresh_scan|refresh_session}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "events" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "full_scans" : [ "{regexp#integer}" ],
        "io_time_ms" : [ "{regexp#integer}" ],
        "listeners_ms" : [ "{regexp#integer}" ],
        "partial_scans" : [ "{regexp#integer}" ],
        "recursive" : [ "{enum#boolean}" ],
        "retries" : [ "{regexp#integer}" ],
        "roots_arc" : [ "{regexp#integer}" ],
        "roots_local" : [ "{regexp#integer}" ],
        "roots_other" : [ "{regexp#integer}" ],
        "start_time_ms" : [ "{regexp#integer}" ],
        "tries" : [ "{regexp#integer}" ],
        "vfs_time_ms" : [ "{regexp#integer}" ],
        "wait_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vim.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tracked|copied}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ]
      }
    }
  }, {
    "id" : "vim.common",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.common}" ],
      "event_data" : {
        "enabled_extensions" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "is_EAP_active" : [ "{enum#boolean}" ],
        "is_plugin_enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vim.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.options}" ],
      "event_data" : {
        "ideajoin" : [ "{enum#boolean}" ],
        "ideamarks" : [ "{enum:keep|select|visual}", "{enum#boolean}" ],
        "ideaput" : [ "{enum#boolean}" ],
        "ideaselection" : [ "{enum#boolean}" ],
        "ideastatusicon" : [ "{enum:enabled|gray|disabled}" ],
        "ideavimsupport" : [ "{enum:dialog|singleline|dialoglegacy}" ],
        "ideawrite" : [ "{enum:all|file}" ]
      }
    }
  }, {
    "id" : "vulnerability.package.checker",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "fixLocal", "navigateInfo", "showInfo", "fixGlobal", "globalResult", "localResult", "runGlobal" ]
      }
    }
  }, {
    "id" : "welcome_screen.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:canceled|success|added|failed}" ],
      "event_data" : {
        "cloneable_projects" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "welcomescreen.interaction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "config_imported" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "first_start" : [ "{enum#boolean}" ],
        "keymap_name" : [ "{enum#keymaps}" ],
        "new_font_size" : [ "{regexp#integer}" ],
        "new_font_size_2d" : [ "{regexp#float}" ],
        "old_font_size" : [ "{regexp#integer}" ],
        "old_font_size_2d" : [ "{regexp#float}" ],
        "sync_os" : [ "{enum#boolean}" ],
        "tab_type" : [ "{enum:TabNavProject|TabNavCustomize|TabNavPlugins|TabNavTutorials|TabNavOther}" ],
        "theme_name" : [ "{enum#look_and_feel}" ]
      },
      "enums" : {
        "__event_id" : [ "color.blindness.changed", "editor.font.changed", "ide.font.changed", "keymap.changed", "laf.changed", "plugins.modified", "project.search", "screen.hidden", "screen.shown", "screen.tab.selected", "debugger.processes.search", "debugger.attach" ]
      }
    }
  }, {
    "id" : "wsl.installations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:count}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  } ],
  "rules" : {
    "enums" : {
      "boolean" : [ "true", "false", "TRUE", "FALSE", "True", "False" ],
      "build_tools" : [ "Maven", "Gradle", "gradle", "sbt", "Clojure_Deps", "clojure_deps", "Pants", "pants", "bsp", "Kobalt", "kobalt", "undefined.system", "third.party", "SPM", "CompDB", "Compilation_Database", "Makefile" ],
      "dotnet_technologies" : [ ".NET_Core", ".NET Core", ".NET_Classic", ".NET Classic", "Avalonia", "C++", "Managed_C++", "Managed C++", "Silverlight", "UE4", "UE5", "UWP", "Unity", "UnitySidecar", "MAUI", "WPF", "Web_Classic", "Web Classic", "Web_Core", "Web Core", "WebSite", "WinRT", "Sql Database Project", "WindowsForms_Classic", "WindowsForms Classic", "WindowsForms Core", "WindowsForms_Core", "WindowsPhone", "Uno", "Xamarin", "XamarinForms", "Azure_Function", "Azure Function", "AzureFunction", "Xamarin.Mac", "Xamarin.Android", "Xamarin.iOS", "Xamarin.PlayStation3", "Xamarin.PlayStation4", "Xamarin.PlayStationVita", "Xamarin.WatchOS", "Xamarin.TVOS", "Xamarin.Xbox360", "Xamarin.XboxOne", "UnrealGame", "UnrealModule", "UnrealPlugin", "UnrealFolder" ],
      "keymaps" : [ "Mac_OS_X_10.5+", "Default_for_GNOME", "Rider", "Eclipse", "Emacs", "Default_for_KDE", "Mac_OS_X", "ReSharper_OSX", "NetBeans_6.5", "Visual_Studio", "Rider_OSX", "TextMate", "Eclipse_(Mac_OS_X)", "ReSharper", "Xcode", "unknown", "custom", "Sublime_Text_(Mac_OS_X)", "Sublime_Text", "Default_for_XWin", "$default", "JBuilder", "VS_Code", "Visual_Studio_OSX", "Visual_Assist", "VSCode", "macOS_System_Shortcuts" ],
      "look_and_feel" : [ "Acme", "Apricode_Monokai", "Arc_Dark", "Arc_Dark_(Material)", "Arc_Dark_Contrast", "Arc_Theme", "Arc_Theme_-_Orange", "Arc_Theme_Dark", "Arc_Theme_Dark_-_Orange", "Astra_Dark", "AtomOneDarkByMayke", "Atom_One_Dark", "Atom_One_Dark_(Material)", "Atom_One_Dark_Contrast", "Atom_One_Light", "Atom_One_Light_(Material)", "Atom_One_Light_Contrast", "Aura", "Ayu_Mirage", "AzurLane:_Essex", "Bas_Tools_Black", "Bas_Tools_Dark", "Bas_Tools_White", "Base16_Monokai", "Base16_Tomorrow_Dark", "BattleField", "Blackbird", "BlendS:_Maika", "Blue_Dolphin", "Blue_Whale", "Breeze_Dark", "Bright_and_Sheen_Theme", "BunnySenpai:_Mai_Dark", "BunnySenpai:_Mai_Light", "Burnt", "Calm", "Carbon", "Cell_Dark_Theme", "Chicken", "Chuunibyou:_Takanashi_Rikka", "City_Pop", "Clean_Sheet", "Cobalt", "Cobalt9", "Cobalt_2", "Codely", "Codely_Blue", "Codely_Dark", "Codely_Light", "Coderpillr_Dusk", "CoffeeBean", "Construction_Paper", "Core", "Custom_Theme_(Material)", "Cute_Pink_Light", "Cyan_light", "Cyberpunk_Theme", "DDLC:_Monika_Dark", "DDLC:_Monika_Light", "DDLC:_Natsuki_Dark", "DDLC:_Natsuki_Light", "DDLC:_Sayori_Dark", "DDLC:_Sayori_Light", "DDLC:_Yuri_Dark", "DDLC:_Yuri_Light", "DM:_Kanna", "DM:_Tohru", "DR:_Mioda_Ibuki_Dark", "DR:_Mioda_Ibuki_Light", "DTWMMN:_Hayase_Nagatoro", "Darcula", "Darcula_(blacker)", "Darcula_Darker", "Darcula_Pitch_Black", "Darcula_Solid", "Darcula_Sombre", "Darcula_Sombre_(transparent_selection)", "Darcula_Sombre_(with_bright_borders)", "Darcula_Sombre_(with_dark_borders)", "Dark", "DarkCode", "DarkCode_Contrast", "DarkDark", "DarkTheme", "Dark_Candy", "Dark_Flat", "Dark_Orange", "Dark_purple", "Dark_ubuntu", "Deep_Ocean_Theme", "Dracula", "Dracula_(Material)", "Dracula_Colorful", "Dracula_Contrast", "DxD:_Rias:_Crimson", "DxD:_Rias:_Onyx", "Dysh_Unreal_Simple", "Dysh_Unreal_Simple_Vivid", "EVA:_Katsuragi_Misato", "EVA:_Rei", "Eclipse_Plus", "El_Chalten", "Elements", "Emerald", "Ender_Theme", "EroManga:_Sagiri", "Espresso_Light", "Espresso_Lightgram", "Field_Lights", "FlatAndMinimalistic_-_dark", "FlatAndMinimalistic_-_gray", "FlatOcean", "Forest_Night", "Foundation_Dark", "Foundation_Light", "Franxx:_Zero_Two_Dark", "Franxx:_Zero_Two_Light", "FutureDiary:_Gasai_Yuno", "Galaxy", "Galizur", "Gate:_Rory_Mercury", "Gerry_Oceanic", "Gerry_Space", "Gerry_Violet", "Giraffe", "GitHub", "GitHub_(Material)", "GitHub_Contrast", "GitHub_Dark", "GitHub_Dark_(Material)", "GitHub_Dark_Contrast", "GitHub_Dark_Dimmed", "GitHub_Light", "Gloom", "Glowing_Darcula", "Godot_Theme", "Golden_Blue", "Gradianto_Dark_Fuchsia", "Gradianto_Deep_Ocean", "Gradianto_Midnight_Blue", "Gradianto_Nature_Green", "Gray", "Green_Haze", "Green_lite", "Greenly", "Gruvbox", "Gruvbox_Dark_Hard", "Gruvbox_Dark_Medium", "Gruvbox_Dark_Soft", "Gruvbox_Github", "Gruvbox_Light_Hard", "Gruvbox_Light_Medium", "Gruvbox_Light_Soft", "Gruvbox_Material", "Hack_The_Box", "Hacker_Theme", "Haikyu:_Hinata_Shoyo", "Halcyon", "Helsing", "Hiberbee_Dark", "High-Contrast-Theme", "High_contrast", "HyperTheme", "Iceberg", "InBedBy7", "IntelliJ", "IntelliJ_Light", "Interesting", "JahySama:_Jahy", "JavierSC_dark", "KCoroutine", "Kakegurui:_Jabami_Yumeko", "KillLaKill:_Ryuko_Dark", "KillLaKill:_Ryuko_Light", "KillLaKill:_Satsuki_Dark", "KillLaKill:_Satsuki_Light", "KonoSuba:_Aqua", "KonoSuba:_Darkness_Dark", "KonoSuba:_Darkness_Light", "KonoSuba:_Megumin", "Kromatic", "Kyoto", "LS:_Konata", "Light", "Light_Custom_Theme_(Material)", "Light_Flat", "Light_Owl", "Light_Owl_(Material)", "Light_Owl_Contrast", "Light_green", "Lotus_Dark", "Lotus_Light", "LoveLive:_Sonoda_Umi", "Lumio", "MacchuPicchu", "Material_Darker", "Material_Darker_Contrast", "Material_Deep_Ocean", "Material_Deep_Ocean_Contrast", "Material_Forest", "Material_Forest_Contrast", "Material_Lighter", "Material_Lighter_Contrast", "Material_Oceanic", "Material_Oceanic_Contrast", "Material_Palenight", "Material_Palenight_Contrast", "Material_Sandy_Beach", "Material_Sandy_Beach_Contrast", "Material_Sky_Blue", "Material_Sky_Blue_Contrast", "Material_Theme:_Default", "Material_Theme:_Lighter", "Material_Theme:_Night", "Material_Theme:_Ocean", "Material_Volcano", "Material_Volcano_Contrast", "Mayukai_Alucard", "Mayukai_Mirage", "Mayukai_Mono", "Mayukai_Reversal", "Monarcula", "Monarcula_Pro", "Monarcula_Soft", "Monocai", "Monogatari:_Hanekawa_Tsubasa", "Monokai_Pro", "Monokai_Pro_(Classic)", "Monokai_Pro_(Filter_Machine)", "Monokai_Pro_(Filter_Octagon)", "Monokai_Pro_(Filter_Ristretto)", "Monokai_Pro_(Filter_Spectrum)", "Monokai_Pro_(Material)", "Monokai_Pro_Contrast", "MonsterMusume:_Miia", "Moonlight", "Moonlight_(Material)", "Moonlight_Contrast", "Moto_Ducat", "MyGruvbox", "Napalmpapalam", "NekoPara:_Azuki", "NekoPara:_Chocola", "NekoPara:_Christmas_Chocola", "NekoPara:_Cinnamon", "NekoPara:_Coconut", "NekoPara:_Maple_Dark", "NekoPara:_Maple_Light", "NekoPara:_Shigure", "NekoPara:_Vanilla", "Nier:Automata_Theme", "Night_Owl", "Night_Owl_(Material)", "Night_Owl_Contrast", "Noctis", "Noctis_Azureus", "Noctis_Bordo", "Noctis_Sereno", "Noctis_Uva", "Noctis_Voila", "Nord", "NotReallyMDTheme", "OPM:_Genos", "Obsidian", "Obsidian_Bright", "Oceanic_Dark_Theme", "Oceanic_Primal", "OneDarkMonokai", "One_Dark", "One_Dark_Italic", "One_Dark_Vivid", "One_Dark_Vivid_Italic", "OreGairu:_Yukinoshita_Yukino", "OreImo:_Kirino", "Pink_as_Heck", "Polar", "Prpl", "Purple", "QQ:_Nakano_Miku", "QQ:_Nakano_Nino", "QQ:_Nakano_Yotsuba", "Railgun:_Misaka_Mikoto", "Re:Zero:_Beatrice", "Re:Zero:_Echidna", "Re:Zero:_Emilia_Dark", "Re:Zero:_Emilia_Light", "Re:Zero:_Ram", "Re:Zero:_Rem", "ReSharper_Dark", "ReSharper_Light", "Red", "Red2", "Rider_Dark", "Rider_Light", "Rider_Melon_Dark", "Rider_Melon_Light", "Roboticket_Light", "Romeo-Theme", "Rouge", "SAO:_Asuna_Dark", "SAO:_Asuna_Light", "SG:_Makise_Kurisu", "Sage", "Salmon", "Sepia", "ShadeSmear_Dark", "ShadeSmear_Light", "Shades_Of_Purple", "Shape", "ShieldHero:_Raphtalia", "Shokugeki:_Yukihira_Soma", "Slime:_Rimiru_Tempest", "Solarized_Dark", "Solarized_Dark_(Material)", "Solarized_Dark_Contrast", "Solarized_Light", "Solarized_Light_(Material)", "Solarized_Light_Contrast", "Solo_Coding", "SpaceDay", "Spacegray", "Spacemacs", "Starlight", "StarlightDark", "Sublime", "Super_Dark", "SynthWave_'84", "SynthWave_'84_(Material)", "SynthWave_'84_Contrast", "Synthwave_Blue", "Synthwave_Refined", "Tanne", "The_Above_Dark", "The_Above_Light", "Trash_Panda_Theme", "Twitch_Dark_Theme", "TypeMoon:_Astolfo", "TypeMoon:_Gray", "TypeMoon:_Ishtar_Dark", "TypeMoon:_Ishtar_Light", "TypeMoon:_Tohsaka_Rin", "Ubuntu_Theme", "Universe", "Universe_Purple", "VSCode_Dark", "Visual_Assist_Dark", "Visual_Assist_Light", "Visual_Studio_2019_Dark", "Visual_Studio_Code_Dark_Plus", "Visual_Studio_Dark", "Visual_Studio_Light", "Vocaloid:_Hatsune_Miku", "VoidTheme", "VsCode_Monokai_HC", "Windows_10_Light", "Winter_Is_Coming", "Xcode-Dark", "Xcode_Dark", "Xcode_Light", "Yaru_Dark", "YuruCamp:_Nadeshiko", "YuruCamp:_Shima_Rin", "[Doki]_AzurLane:_Essex", "[Doki]_BlendS:_Maika", "[Doki]_BunnySenpai:_Mai_Dark", "[Doki]_BunnySenpai:_Mai_Light", "[Doki]_DDLC:_Monika_Dark", "[Doki]_DDLC:_Monika_Light", "[Doki]_DDLC:_Natsuki_Dark", "[Doki]_DDLC:_Natsuki_Light", "[Doki]_DDLC:_Sayori_Dark", "[Doki]_DDLC:_Sayori_Light", "[Doki]_DDLC:_Yuri_Dark", "[Doki]_DDLC:_Yuri_Light", "[Doki]_DM:_Kanna", "[Doki]_DM:_Tohru", "[Doki]_DR:_Mioda_Ibuki_Dark", "[Doki]_DR:_Mioda_Ibuki_Light", "[Doki]_DTWMMN:_Hayase_Nagatoro", "[Doki]_DxD:_Rias:_Crimson", "[Doki]_DxD:_Rias:_Onyx", "[Doki]_EVA:_Katsuragi_Misato", "[Doki]_EVA:_Rei", "[Doki]_EroManga:_Sagiri", "[Doki]_Franxx:_Zero_Two_Dark", "[Doki]_Franxx:_Zero_Two_Light", "[Doki]_FutureDiary:_Gasai_Yuno", "[Doki]_Gate:_Rory_Mercury", "[Doki]_JahySama:_Jahy", "[Doki]_Kakegurui:_Jabami_Yumeko", "[Doki]_KillLaKill:_Ryuko_Dark", "[Doki]_KillLaKill:_Ryuko_Light", "[Doki]_KillLaKill:_Satsuki_Dark", "[Doki]_KillLaKill:_Satsuki_Light", "[Doki]_KonoSuba:_Aqua", "[Doki]_KonoSuba:_Darkness_Dark", "a.onji", "ajaaibu", "asiimov", "celestial", "color_blind_theme", "dark-jeff", "darkerla", "deep-focus-theme", "flat", "foggy-night", "hibNet_Midnight_Blue", "jDark", "jake-theme", "macOS_Light", "madrid", "metalheart", "minimal", "naysayer88", "nevaTheme", "night-owl-native", "nightfall", "plaid", "qubTheme", "reykjavik", "shirotelin", "silkworm", "soft-charcoal", "spectre_theme", "subtle-hacker-theme", "theme-oldirony-dark", "theme_eclipse", "thursday", "vuesion-theme", "warm-night", "white-sand", "xndlnk-monokai" ],
      "os" : [ "Windows", "Mac", "Linux", "FreeBSD", "ChromeOS", "Solaris", "Other" ],
      "plugin_type" : [ "PLATFORM", "JB_BUNDLED", "JB_NOT_BUNDLED", "LISTED", "NOT_LISTED", "UNKNOWN" ],
      "state" : [ "enabled", "disabled" ],
      "vcs" : [ "Git", "git", "SVN", "svn", "hg4idea", "Perforce", "perforce", "TFS", "tfs", "SourceSafe", "sourcesafe", "ClearCase", "clearcase", "CVS", "cvs", "TFVS", "tfvs", "VSS", "vss" ]
    },
    "regexps" : {
      "count" : "\\d+K?M?\\+?",
      "float" : "-?\\d+\\.\\d+(E\\-?\\d+)?",
      "hash" : "([0-9A-Fa-f]{40,64})|undefined",
      "integer" : "-?\\d+(\\+)?",
      "kotlin_version" : "(\\d+-)?\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+",
      "license_metadata" : "[0-9]{10}[A-Z]{4}[-0-9X]{6}",
      "mcu_name" : "UNKNOWN|UPDATE_FAILED|(STM32[A-Z]{1,2}\\w+)",
      "series" : "^(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+(?:_(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+)*$",
      "version" : "Unknown|unknown.format|unknown|UNKNOWN|((\\d+\\.?)*\\d+)"
    }
  },
  "version" : "2624"
}